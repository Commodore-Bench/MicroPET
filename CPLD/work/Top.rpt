 
cpldfit:  version P.20131013                        Xilinx Inc.
                                  Fitter Report
Design Name: Top                                 Date:  1-24-2021,  3:58PM
Device Used: XC95288XL-6-TQ144
Fitting Status: Successful

*************************  Mapped Resource Summary  **************************

Macrocells     Product Terms    Function Block   Registers      Pins           
Used/Tot       Used/Tot         Inps Used/Tot    Used/Tot       Used/Tot       
282/288 ( 98%) 1157/1440 ( 80%) 661/864 ( 76%)   206/288 ( 72%) 86 /117 ( 73%)

** Function Block Resources **

Function    Mcells      FB Inps     Pterms      IO          
Block       Used/Tot    Used/Tot    Used/Tot    Used/Tot    
FB1          17/18       32/54       80/90       1/ 8
FB2          18/18*      54/54*      73/90       4/10
FB3          18/18*      29/54       64/90       1/ 5
FB4          18/18*      43/54       68/90       4/ 6
FB5          18/18*      44/54       89/90       5/ 8
FB6          18/18*      41/54       77/90       7/ 8
FB7          18/18*      31/54       70/90       4/ 4*
FB8          18/18*      54/54*      65/90       5/ 5*
FB9          18/18*      46/54       70/90       5/ 9
FB10         15/18       48/54       89/90      10/10*
FB11         18/18*      38/54       85/90       4/ 7
FB12         16/18       49/54       86/90       6/ 6*
FB13         18/18*      51/54       58/90       5/ 6
FB14         18/18*      46/54       71/90       8/ 8*
FB15         18/18*      40/54       77/90       9/ 9*
FB16         18/18*      15/54       35/90       8/ 8*
             -----       -----       -----      -----    
            282/288     661/864    1157/1440    86/117

* - Resource is exhausted

** Global Control Resources **

Signal 'q50m' mapped onto global clock net GCK1.
Global output enable net(s) unused.
Global set/reset net(s) unused.

** Pin Resources **

Signal Type    Required     Mapped  |  Pin Type            Used    Total 
------------------------------------|------------------------------------
Input         :   26          26    |  I/O              :    82     109
Output        :   42          42    |  GCK/IO           :     1       3
Bidirectional :   17          17    |  GTS/IO           :     2       4
GCK           :    1           1    |  GSR/IO           :     1       1
GTS           :    0           0    |
GSR           :    0           0    |
                 ----        ----
        Total     86          86

** Power Data **

There are 282 macrocells in high performance mode (MCHP).
There are 0 macrocells in low power mode (MCLP).
End of Mapped Resource Summary
**************************  Errors and Warnings  ***************************

INFO:Cpld:994 - Exhaustive fitting is trying pterm limit: 12 and input limit: 17
*************************  Summary of Mapped Logic  ************************

** 59 Outputs **

Signal                                                                              Total Total Loc     Pin  Pin     Pin     Pwr  Slew Reg Init
Name                                                                                Pts   Inps          No.  Type    Use     Mode Rate State
VA<16>                                                                              5     9     FB2_2   9    I/O     O       STD  FAST 
VA<15>                                                                              6     13    FB2_3   10   I/O     O       STD  FAST 
VA<18>                                                                              5     8     FB2_5   11   I/O     O       STD  FAST 
nframsel                                                                            11    14    FB2_8   13   I/O     O       STD  FAST 
VA<17>                                                                              5     8     FB4_6   4    I/O     O       STD  FAST 
phi2                                                                                2     4     FB4_8   5    GTS/I/O I/O     STD  FAST 
phi2_io                                                                             2     4     FB4_12  6    GTS/I/O O       STD  FAST 
VA<14>                                                                              4     7     FB4_14  7    I/O     O       STD  FAST 
spi_nsel2                                                                           1     2     FB5_2   34   I/O     O       STD  FAST 
spi_nsel3                                                                           1     2     FB5_10  39   I/O     O       STD  FAST 
dena                                                                                3     6     FB5_14  41   I/O     O       STD  FAST RESET
pet_vsync                                                                           7     14    FB5_15  43   I/O     O       STD  FAST RESET
spi_nsel4                                                                           1     2     FB5_17  44   I/O     O       STD  FAST 
VA<8>                                                                               4     8     FB6_2   135  I/O     O       STD  FAST 
VA<7>                                                                               5     9     FB6_3   136  I/O     O       STD  FAST 
VA<13>                                                                              6     9     FB6_5   137  I/O     O       STD  FAST 
VA<12>                                                                              5     9     FB6_6   138  I/O     O       STD  FAST 
ramrwb                                                                              3     7     FB6_8   139  I/O     O       STD  FAST 
dclk                                                                                2     2     FB7_3   45   I/O     O       STD  FAST RESET
pxl                                                                                 3     4     FB7_5   46   I/O     O       STD  FAST RESET
hsync                                                                               4     11    FB7_12  48   I/O     O       STD  FAST SET
vsync                                                                               7     14    FB7_15  49   I/O     O       STD  FAST SET
nvramsel                                                                            5     14    FB8_2   130  I/O     O       STD  FAST 
VA<5>                                                                               5     9     FB8_3   131  I/O     O       STD  FAST 
VA<9>                                                                               4     8     FB8_5   132  I/O     O       STD  FAST 
VA<6>                                                                               5     9     FB8_8   133  I/O     O       STD  FAST 
VA<11>                                                                              7     11    FB8_10  134  I/O     O       STD  FAST 
spi_clk                                                                             3     4     FB9_2   50   I/O     O       STD  FAST 
nflash                                                                              2     3     FB9_5   52   I/O     O       STD  FAST 
spi_out                                                                             2     3     FB9_8   54   I/O     O       STD  FAST 
VD<6>                                                                               4     11    FB9_14  58   I/O     I/O     STD  FAST 
VD<7>                                                                               5     12    FB9_17  59   I/O     I/O     STD  FAST 
VA<0>                                                                               5     9     FB10_5  119  I/O     O       STD  FAST 
VA<1>                                                                               5     9     FB10_6  120  I/O     O       STD  FAST 
VA<2>                                                                               5     9     FB10_8  121  I/O     O       STD  FAST 
VA<10>                                                                              7     11    FB10_10 124  I/O     O       STD  FAST 
VA<3>                                                                               5     9     FB10_11 125  I/O     O       STD  FAST 
VA<4>                                                                               5     9     FB10_12 126  I/O     O       STD  FAST 
nsel4                                                                               1     7     FB11_11 66   I/O     O       STD  FAST 
nsel2                                                                               1     7     FB11_12 68   I/O     O       STD  FAST 

Signal                                                                              Total Total Loc     Pin  Pin     Pin     Pwr  Slew Reg Init
Name                                                                                Pts   Inps          No.  Type    Use     Mode Rate State
nsel1                                                                               1     7     FB11_14 69   I/O     O       STD  FAST 
VD<3>                                                                               4     11    FB12_2  110  I/O     I/O     STD  FAST 
VD<2>                                                                               4     11    FB12_3  111  I/O     I/O     STD  FAST 
VD<4>                                                                               3     5     FB12_5  112  I/O     I/O     STD  FAST 
VD<1>                                                                               4     11    FB12_8  113  I/O     I/O     STD  FAST 
VD<5>                                                                               3     5     FB12_10 115  I/O     I/O     STD  FAST 
VD<0>                                                                               4     11    FB12_12 116  I/O     I/O     STD  FAST 
FA<15>                                                                              4     7     FB13_2  71   I/O     O       STD  FAST 
D<7>                                                                                5     12    FB13_15 77   I/O     I/O     STD  FAST 
D<6>                                                                                4     11    FB13_17 78   I/O     I/O     STD  FAST 
FA<16>                                                                              3     5     FB14_11 105  I/O     O       STD  FAST 
FA<17>                                                                              3     4     FB14_14 106  I/O     O       STD  FAST 
FA<18>                                                                              3     4     FB14_15 107  I/O     O       STD  FAST 
D<5>                                                                                3     5     FB15_2  79   I/O     I/O     STD  FAST 
D<4>                                                                                3     5     FB15_3  80   I/O     I/O     STD  FAST 
D<3>                                                                                4     11    FB15_8  81   I/O     I/O     STD  FAST 
D<2>                                                                                4     11    FB15_10 82   I/O     I/O     STD  FAST 
D<1>                                                                                4     11    FB15_11 83   I/O     I/O     STD  FAST 
D<0>                                                                                4     11    FB15_12 85   I/O     I/O     STD  FAST 

** 223 Buried Nodes **

Signal                                                                              Total Total Loc     Pwr  Reg Init
Name                                                                                Pts   Inps          Mode State
viccy/pxlhold<7>                                                                    9     9     FB1_2   STD  RESET
clocky/memclk_int                                                                   6     5     FB1_3   STD  RESET
viccy/pxlhold<0>                                                                    5     8     FB1_4   STD  RESET
viccy/chr_fetch                                                                     4     7     FB1_5   STD  RESET
viccy/pxl_fetch                                                                     4     6     FB1_6   STD  RESET
viccy/charhold<0>                                                                   3     3     FB1_7   STD  RESET
viccy/pxlhold<4>                                                                    9     9     FB1_8   STD  RESET
viccy/charhold<1>                                                                   3     3     FB1_9   STD  RESET
viccy/charhold<2>                                                                   3     3     FB1_10  STD  RESET
viccy/pxlhold<5>                                                                    9     9     FB1_11  STD  RESET
viccy/charhold<3>                                                                   3     3     FB1_12  STD  RESET
viccy/pxlhold<6>                                                                    9     9     FB1_13  STD  RESET
is_vid_out                                                                          1     2     FB1_14  STD  RESET
viccy/charhold<4>                                                                   3     3     FB1_15  STD  RESET
viccy/charhold<5>                                                                   3     3     FB1_16  STD  RESET
viccy/charhold<6>                                                                   3     3     FB1_17  STD  RESET
viccy/charhold<7>                                                                   3     3     FB1_18  STD  RESET
viccy/is_10rows_or0000/viccy/is_10rows_or0000_D2                                    1     13    FB2_1   STD  
spi_cs/spi_cs_D2                                                                    1     10    FB2_4   STD  
spi_comp/run_rx                                                                     3     14    FB2_6   STD  RESET
$OpTx$FX_DC$2549756                                                                 1     12    FB2_7   STD  
viccy/crtc_reg<3>                                                                   4     13    FB2_9   STD  RESET
viccy/crtc_reg<2>                                                                   4     13    FB2_10  STD  RESET
viccy/crtc_reg<1>                                                                   4     13    FB2_11  STD  RESET
viccy/crtc_reg<0>                                                                   4     13    FB2_12  STD  RESET
spi_sel<3>                                                                          4     15    FB2_13  STD  RESET
spi_comp/txd<7>                                                                     4     15    FB2_14  STD  RESET
spi_comp/txd<6>                                                                     4     15    FB2_15  STD  RESET
spi_comp/txd<5>                                                                     4     15    FB2_16  STD  RESET
spi_comp/txd<4>                                                                     4     15    FB2_17  STD  RESET
spi_comp/txd<3>                                                                     4     15    FB2_18  STD  RESET
memclk                                                                              2     2     FB3_1   STD  RESET
clk2m                                                                               2     4     FB3_2   STD  RESET
clk1m                                                                               2     5     FB3_3   STD  RESET
viccy/slot_cnt<0>                                                                   3     4     FB3_4   STD  RESET
viccy/rline_cnt<0>                                                                  3     4     FB3_5   STD  RESET
viccy/in_slot                                                                       3     3     FB3_6   STD  RESET
viccy/h_enable                                                                      3     7     FB3_7   STD  RESET
clocky/cpu_cnt1<2>                                                                  3     4     FB3_8   STD  RESET
viccy/slot_cnt<4>                                                                   4     8     FB3_9   STD  RESET

Signal                                                                              Total Total Loc     Pwr  Reg Init
Name                                                                                Pts   Inps          Mode State
viccy/slot_cnt<3>                                                                   4     7     FB3_10  STD  RESET
viccy/slot_cnt<2>                                                                   4     6     FB3_11  STD  RESET
viccy/slot_cnt<1>                                                                   4     5     FB3_12  STD  RESET
clocky/cpu_cnt1<3>                                                                  4     6     FB3_13  STD  RESET
clocky/cpu_cnt1<1>                                                                  4     6     FB3_14  STD  RESET
clk4m                                                                               4     5     FB3_15  STD  RESET
viccy/vid_addr_hold<8>                                                              5     7     FB3_16  STD  RESET
viccy/vid_addr_hold<7>                                                              5     7     FB3_17  STD  RESET
viccy/vid_addr_hold<6>                                                              5     7     FB3_18  STD  RESET
wp_romB                                                                             3     5     FB4_1   STD  RESET
$OpTx$INV$2549688                                                                   3     8     FB4_2   STD  
wp_romA                                                                             4     5     FB4_3   STD  RESET
wp_rom9                                                                             4     5     FB4_4   STD  RESET
vis_hires_in                                                                        4     5     FB4_5   STD  RESET
screenb0                                                                            4     5     FB4_7   STD  RESET
mappy/cfg_mp<6>                                                                     4     5     FB4_9   STD  RESET
mappy/cfg_mp<5>                                                                     4     5     FB4_10  STD  RESET
mappy/cfg_mp<0>                                                                     4     5     FB4_11  STD  RESET
mappy/bankl<0>                                                                      4     5     FB4_13  STD  RESET
lowbank<2>                                                                          4     5     FB4_15  STD  RESET
lowbank<0>                                                                          4     5     FB4_16  STD  RESET
lockb0                                                                              4     5     FB4_17  STD  RESET
$OpTx$INV$2549694                                                                   5     9     FB4_18  STD  
viccy/last_line_of_char                                                             9     10    FB5_1   STD  RESET
viccy/cline_cnt<3>                                                                  6     10    FB5_3   STD  RESET
viccy/rline_cnt<3>                                                                  4     7     FB5_4   STD  RESET
viccy/cline_cnt<0>                                                                  5     7     FB5_5   STD  RESET
viccy/rline_cnt<2>                                                                  4     6     FB5_6   STD  RESET
viccy/rline_cnt<1>                                                                  4     5     FB5_7   STD  RESET
viccy/cline_cnt<2>                                                                  6     9     FB5_8   STD  RESET
viccy/cline_cnt<1>                                                                  6     8     FB5_9   STD  RESET
viccy/pxlhold<3>                                                                    9     9     FB5_11  STD  RESET
ipl_cnt_Madd__add0000__and0003/ipl_cnt_Madd__add0000__and0003_D2                    1     5     FB5_12  STD  
viccy/pxlhold<2>                                                                    9     9     FB5_13  STD  RESET
viccy/pxlhold<1>                                                                    9     9     FB5_16  STD  RESET
viccy/rline_cnt<4>                                                                  4     8     FB5_18  STD  RESET
ipl_next                                                                            4     15    FB6_1   STD  RESET
ipl_cnt<9>                                                                          4     11    FB6_4   STD  RESET
ipl_cnt<8>                                                                          4     10    FB6_7   STD  RESET
ipl_cnt<7>                                                                          4     9     FB6_9   STD  RESET

Signal                                                                              Total Total Loc     Pwr  Reg Init
Name                                                                                Pts   Inps          Mode State
ipl_cnt<6>                                                                          4     8     FB6_10  STD  RESET
ipl_cnt<5>                                                                          4     7     FB6_11  STD  RESET
ipl_cnt<4>                                                                          4     10    FB6_12  STD  RESET
ipl_cnt<3>                                                                          4     9     FB6_13  STD  RESET
ipl_cnt<2>                                                                          4     8     FB6_14  STD  RESET
ipl_cnt<1>                                                                          4     7     FB6_15  STD  RESET
ipl_cnt<11>                                                                         4     13    FB6_16  STD  RESET
ipl_cnt<10>                                                                         4     12    FB6_17  STD  RESET
ipl_out                                                                             6     16    FB6_18  STD  RESET
viccy/last_vis_slot_of_line                                                         2     11    FB7_1   STD  RESET
viccy/last_slot_of_line                                                             2     11    FB7_2   STD  RESET
viccy/last_line_of_screen                                                           2     11    FB7_4   STD  RESET
viccy/slot_cnt<9>                                                                   4     13    FB7_6   STD  RESET
viccy/slot_cnt<8>                                                                   4     12    FB7_7   STD  RESET
viccy/slot_cnt<7>                                                                   4     11    FB7_8   STD  RESET
viccy/slot_cnt<6>                                                                   4     10    FB7_9   STD  RESET
viccy/slot_cnt<5>                                                                   4     9     FB7_10  STD  RESET
viccy/rline_cnt<9>                                                                  4     13    FB7_11  STD  RESET
viccy/rline_cnt<8>                                                                  4     12    FB7_13  STD  RESET
viccy/rline_cnt<7>                                                                  4     11    FB7_14  STD  RESET
viccy/rline_cnt<6>                                                                  4     10    FB7_16  STD  RESET
viccy/rline_cnt<5>                                                                  4     9     FB7_17  STD  RESET
viccy/v_enable                                                                      8     12    FB7_18  STD  RESET
wp_romPET_or0000/wp_romPET_or0000_D2                                                1     12    FB8_1   STD  
vis_hires_in_or0000/vis_hires_in_or0000_D2                                          1     12    FB8_4   STD  
mode_or0000/mode_or0000_D2                                                          1     12    FB8_6   STD  
mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2                                        1     17    FB8_7   STD  
lowbank_or0000/lowbank_or0000_D2                                                    1     12    FB8_9   STD  
D_and0000/D_and0000_D2                                                              3     12    FB8_11  STD  
spi_sel<2>                                                                          4     15    FB8_12  STD  RESET
spi_sel<0>                                                                          4     15    FB8_13  STD  RESET
spi_comp/txd<2>                                                                     4     15    FB8_14  STD  RESET
spi_comp/txd<1>                                                                     4     15    FB8_15  STD  RESET
spi_comp/txd<0>                                                                     4     15    FB8_16  STD  RESET
SFDecomp_66                                                                         4     15    FB8_17  STD  RESET
do_cpu                                                                              7     15    FB8_18  STD  RESET
wait_int_d                                                                          3     4     FB9_1   STD  RESET
ipl                                                                                 3     5     FB9_3   STD  RESET
viccy/vpage<7>                                                                      4     6     FB9_4   STD  RESET
viccy/vpage<6>                                                                      4     6     FB9_6   STD  RESET

Signal                                                                              Total Total Loc     Pwr  Reg Init
Name                                                                                Pts   Inps          Mode State
viccy/vpage<5>                                                                      4     6     FB9_7   STD  RESET
viccy/vpage<4>                                                                      4     6     FB9_9   STD  RESET
viccy/vpage<3>                                                                      4     6     FB9_10  STD  RESET
viccy/vpage<2>                                                                      4     6     FB9_11  STD  RESET
viccy/interlace                                                                     4     6     FB9_12  STD  RESET
mode<0>                                                                             4     5     FB9_13  STD  RESET
ipl_state                                                                           4     5     FB9_15  STD  RESET
ipl_cnt<0>                                                                          4     6     FB9_16  STD  RESET
is_cpu                                                                              8     9     FB9_18  STD  RESET
viccy/vid_addr<8>                                                                   7     16    FB10_1  STD  RESET
viccy/vid_addr<7>                                                                   7     15    FB10_2  STD  RESET
viccy/vid_addr<6>                                                                   7     14    FB10_4  STD  RESET
viccy/vid_addr<5>                                                                   7     13    FB10_7  STD  RESET
viccy/vid_addr<4>                                                                   7     12    FB10_13 STD  RESET
viccy/vid_addr<3>                                                                   7     11    FB10_14 STD  RESET
viccy/vid_addr<2>                                                                   7     10    FB10_16 STD  RESET
viccy/vid_addr<1>                                                                   7     9     FB10_17 STD  RESET
viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2  1     9     FB10_18 STD  
viccy/vid_addr_hold<10>                                                             5     7     FB11_1  STD  RESET
viccy/vid_addr_hold<11>                                                             5     7     FB11_2  STD  RESET
viccy/vid_addr_hold<12>                                                             5     7     FB11_3  STD  RESET
viccy/vid_addr_hold<13>                                                             5     7     FB11_4  STD  RESET
viccy/vid_addr_hold<1>                                                              5     7     FB11_5  STD  RESET
viccy/vid_addr_hold<2>                                                              5     7     FB11_6  STD  RESET
viccy/vid_addr_hold<3>                                                              5     7     FB11_7  STD  RESET
viccy/vid_addr_hold<4>                                                              5     7     FB11_8  STD  RESET
viccy/vid_addr_hold<9>                                                              5     7     FB11_9  STD  RESET
viccy/vid_addr_hold<5>                                                              5     7     FB11_10 STD  RESET
viccy/vid_addr_hold<0>                                                              5     7     FB11_13 STD  RESET
viccy/vid_addr<9>                                                                   7     9     FB11_15 STD  RESET
viccy/vid_addr<11>                                                                  7     11    FB11_16 STD  RESET
viccy/vid_addr<10>                                                                  7     10    FB11_17 STD  RESET
viccy/vid_addr<0>                                                                   6     8     FB11_18 STD  RESET
spi_comp/serin_d                                                                    9     14    FB12_1  STD  RESET
$OpTx$FX_DC$2549698                                                                 1     2     FB12_4  STD  
viccy/is_9rows                                                                      4     12    FB12_6  STD  RESET
viccy/is_10rows                                                                     4     12    FB12_7  STD  RESET
spi_comp/sr<4>                                                                      9     10    FB12_9  STD  RESET
spi_comp/sr<3>                                                                      9     10    FB12_11 STD  RESET
spi_comp/sr<2>                                                                      9     10    FB12_13 STD  RESET

Signal                                                                              Total Total Loc     Pwr  Reg Init
Name                                                                                Pts   Inps          Mode State
spi_comp/sr<1>                                                                      9     10    FB12_16 STD  RESET
spi_comp/sr<0>                                                                      9     10    FB12_17 STD  RESET
viccy/sr_load_d                                                                     1     1     FB12_18 STD  RESET
mappy/SFDecomp_831/mappy/SFDecomp_831_D2                                            1     8     FB13_1  STD  
clocky/clk_cnt_0_0                                                                  1     1     FB13_3  STD  RESET
SFDecomp_66/SFDecomp_66_CE                                                          1     3     FB13_4  STD  
$OpTx$FX_SC$2549761                                                                 1     2     FB13_5  STD  
D_7_IOBUFE/D_7_IOBUFE_TRST                                                          2     3     FB13_6  STD  
spi_comp/run_txd                                                                    3     14    FB13_7  STD  RESET
mappy/cfg_mp<3>                                                                     4     5     FB13_8  STD  RESET
mappy/cfg_mp<2>                                                                     4     5     FB13_9  STD  RESET
mappy/bankl<7>                                                                      4     5     FB13_10 STD  RESET
mappy/bankl<6>                                                                      4     5     FB13_11 STD  RESET
mappy/bankl<5>                                                                      4     5     FB13_12 STD  RESET
mappy/bankl<4>                                                                      4     5     FB13_13 STD  RESET
mappy/bankl<3>                                                                      4     5     FB13_14 STD  RESET
mappy/bankl<2>                                                                      4     5     FB13_16 STD  RESET
mappy/bankl<1>                                                                      4     5     FB13_18 STD  RESET
mappy/SFDecomp_16/mappy/SFDecomp_16_D2                                              1     8     FB14_1  STD  
viccy/is_80                                                                         3     5     FB14_2  STD  RESET
wp_romPET                                                                           4     5     FB14_3  STD  RESET
vis_enable                                                                          4     5     FB14_4  STD  RESET
vis_double_in                                                                       4     5     FB14_5  STD  RESET
vis_80_in                                                                           4     5     FB14_6  STD  RESET
mode<1>                                                                             4     5     FB14_7  STD  RESET
mappy/cfg_mp<7>                                                                     4     5     FB14_8  STD  RESET
mappy/cfg_mp<1>                                                                     4     5     FB14_9  STD  RESET
lowbank<3>                                                                          4     5     FB14_10 STD  RESET
lowbank<1>                                                                          4     5     FB14_12 STD  RESET
is8296                                                                              4     5     FB14_13 STD  RESET
boot                                                                                4     5     FB14_16 STD  RESET
viccy/vid_addr<13>                                                                  7     13    FB14_17 STD  RESET
viccy/vid_addr<12>                                                                  7     12    FB14_18 STD  RESET
spi_comp/sr<5>                                                                      9     10    FB15_1  STD  RESET
spi_comp/ack_rxtx                                                                   2     5     FB15_4  STD  RESET
spi_comp/stat<3>                                                                    3     6     FB15_5  STD  RESET
spi_comp/stat<2>                                                                    3     5     FB15_6  STD  RESET
spi_comp/stat<1>                                                                    3     4     FB15_7  STD  RESET
spi_comp/ack_txd                                                                    3     5     FB15_9  STD  RESET
spi_comp/N01/spi_comp/N01_D2                                                        3     5     FB15_13 STD  

Signal                                                                              Total Total Loc     Pwr  Reg Init
Name                                                                                Pts   Inps          Mode State
spi_comp/run_tx                                                                     6     11    FB15_14 STD  RESET
spi_outx                                                                            9     10    FB15_15 STD  RESET
spi_comp/sr<6>                                                                      9     10    FB15_16 STD  RESET
spi_comp/stat_or0000/spi_comp/stat_or0000_D2                                        2     4     FB15_17 STD  
ipl_state_d                                                                         3     3     FB15_18 STD  RESET
viccy/dot2clk_d                                                                     1     1     FB16_1  STD  RESET
spi_comp/run_txd/spi_comp/run_txd_RSTF                                              1     2     FB16_2  STD  
spi_comp/run_rx/spi_comp/run_rx_RSTF                                                1     2     FB16_3  STD  
reset                                                                               1     1     FB16_4  STD  RESET
is_char_out                                                                         1     1     FB16_5  STD  RESET
sr_load                                                                             2     5     FB16_6  STD  RESET
spi_comp/run_tx_d                                                                   2     2     FB16_7  STD  RESET
spi_comp/run_rx_d                                                                   2     2     FB16_8  STD  RESET
slotclk                                                                             2     2     FB16_9  STD  RESET
memclk_d                                                                            2     2     FB16_10 STD  RESET
dot2clk                                                                             2     2     FB16_11 STD  RESET
clocky/cpu_cnt1<0>                                                                  2     2     FB16_12 STD  RESET
clocky/clk_cnt_0_3                                                                  2     4     FB16_13 STD  RESET
clocky/clk_cnt_0_2                                                                  2     3     FB16_14 STD  RESET
clocky/clk_cnt_0_1                                                                  2     2     FB16_15 STD  RESET
spi_clkx                                                                            3     3     FB16_16 STD  RESET
pxl_window                                                                          3     4     FB16_17 STD  RESET
chr_window                                                                          4     5     FB16_18 STD  RESET

** 27 Inputs **

Signal                                                                              Loc     Pin  Pin     Pin     
Name                                                                                        No.  Type    Use     
rwb                                                                                 FB1_5   20   I/O     I
q50m                                                                                FB3_10  30   GCK/I/O GCK
e                                                                                   FB6_14  142  I/O     I
nres                                                                                FB6_15  143  GSR/I/O I
spi_in4                                                                             FB10_2  117  I/O     I
spi_in3                                                                             FB10_3  118  I/O     I
spi_in2                                                                             FB10_14 128  I/O     I
spi_in1                                                                             FB10_17 129  I/O     I
graphic                                                                             FB11_17 70   I/O     I
vpa                                                                                 FB13_8  74   I/O     I
vda                                                                                 FB13_11 75   I/O     I
A<4>                                                                                FB14_3  100  I/O     I
A<3>                                                                                FB14_5  101  I/O     I
A<2>                                                                                FB14_6  102  I/O     I
A<1>                                                                                FB14_8  103  I/O     I
A<0>                                                                                FB14_10 104  I/O     I
A<15>                                                                               FB15_14 86   I/O     I
A<13>                                                                               FB15_15 87   I/O     I
A<14>                                                                               FB15_17 88   I/O     I
A<12>                                                                               FB16_2  91   I/O     I
A<11>                                                                               FB16_3  92   I/O     I
A<10>                                                                               FB16_5  93   I/O     I
A<9>                                                                                FB16_6  94   I/O     I
A<8>                                                                                FB16_8  95   I/O     I
A<7>                                                                                FB16_10 96   I/O     I
A<6>                                                                                FB16_11 97   I/O     I
A<5>                                                                                FB16_12 98   I/O     I

Legend:
Pin No. - ~ - User Assigned
**************************  Function Block Details  ************************
Legend:
Total Pt     - Total product terms used by the macrocell signal
Imp Pt       - Product terms imported from other macrocells
Exp Pt       - Product terms exported to other macrocells
               in direction shown
Unused Pt    - Unused local product terms remaining in macrocell
Loc          - Location where logic was mapped in device
Pin Type/Use - I  - Input             GCK - Global Clock
               O  - Output            GTS - Global Output Enable
              (b) - Buried macrocell  GSR - Global Set/Reset
X            - Signal used as input to the macrocell logic.
Pin No.      - ~  - User Assigned
*********************************** FB1  ***********************************
Number of function block inputs used/remaining:               32/22
Number of signals used by logic mapping into function block:  32
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0   \/5   0     FB1_1         (b)     (b)
viccy/pxlhold<7>      9       5<- \/1   0     FB1_2         (b)     (b)
clocky/memclk_int     6       1<-   0   0     FB1_3         (b)     (b)
viccy/pxlhold<0>      5       0     0   0     FB1_4         (b)     (b)
viccy/chr_fetch       4       0     0   1     FB1_5   20    I/O     I
viccy/pxl_fetch       4       0     0   1     FB1_6   21    I/O     (b)
viccy/charhold<0>     3       0   \/2   0     FB1_7         (b)     (b)
viccy/pxlhold<4>      9       4<-   0   0     FB1_8   22    I/O     (b)
viccy/charhold<1>     3       0   /\2   0     FB1_9         (b)     (b)
viccy/charhold<2>     3       0   \/2   0     FB1_10  23    I/O     (b)
viccy/pxlhold<5>      9       4<-   0   0     FB1_11        (b)     (b)
viccy/charhold<3>     3       0   /\2   0     FB1_12  24    I/O     (b)
viccy/pxlhold<6>      9       4<-   0   0     FB1_13        (b)     (b)
is_vid_out            1       0   /\4   0     FB1_14  25    I/O     (b)
viccy/charhold<4>     3       0     0   2     FB1_15  26    I/O     (b)
viccy/charhold<5>     3       0     0   2     FB1_16        (b)     (b)
viccy/charhold<6>     3       0     0   2     FB1_17  27    I/O     (b)
viccy/charhold<7>     3       0     0   2     FB1_18        (b)     (b)

Signals Used by Logic in Function Block
  1: VD<6>.PIN           12: clocky/clk_cnt_0_2  23: viccy/pxlhold<0> 
  2: VD<5>.PIN           13: clocky/clk_cnt_0_3  24: viccy/pxlhold<3> 
  3: VD<4>.PIN           14: dclk                25: viccy/pxlhold<4> 
  4: VD<3>.PIN           15: pxl_window          26: viccy/pxlhold<5> 
  5: VD<2>.PIN           16: reset               27: viccy/pxlhold<6> 
  6: VD<1>.PIN           17: viccy/chr_fetch     28: viccy/pxlhold<7> 
  7: VD<0>.PIN           18: viccy/dot2clk_d     29: viccy/rline_cnt<0> 
  8: VD<7>.PIN           19: viccy/in_slot       30: viccy/sr_load_d 
  9: chr_window          20: viccy/interlace     31: vis_enable 
 10: clocky/clk_cnt_0_0  21: viccy/is_80         32: vis_hires_in 
 11: clocky/clk_cnt_0_1  22: viccy/pxl_fetch    

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
viccy/pxlhold<7>     .......X.....X.X.X..XX....XX.X.......... 9
clocky/memclk_int    .........XXXX..X........................ 5
viccy/pxlhold<0>     ......X......X.X.X..XXX......X.......... 8
viccy/chr_fetch      ........X.........XXX.......X.XX........ 7
viccy/pxl_fetch      ..............X...XXX.......X.X......... 6
viccy/charhold<0>    ......X........XX....................... 3
viccy/pxlhold<4>     ..X..........X.X.X..XX.XX....X.......... 9
viccy/charhold<1>    .....X.........XX....................... 3
viccy/charhold<2>    ....X..........XX....................... 3
viccy/pxlhold<5>     .X...........X.X.X..XX..XX...X.......... 9
viccy/charhold<3>    ...X...........XX....................... 3
viccy/pxlhold<6>     X............X.X.X..XX...XX..X.......... 9
is_vid_out           ................X....X.................. 2
viccy/charhold<4>    ..X............XX....................... 3
viccy/charhold<5>    .X.............XX....................... 3
viccy/charhold<6>    X..............XX....................... 3
viccy/charhold<7>    .......X.......XX....................... 3
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB2  ***********************************
Number of function block inputs used/remaining:               54/0
Number of signals used by logic mapping into function block:  54
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
viccy/is_10rows_or0000/viccy/is_10rows_or0000_D2
                      1       0     0   4     FB2_1         (b)     (b)
VA<16>                5       0     0   0     FB2_2   9     I/O     O
VA<15>                6       1<-   0   0     FB2_3   10    I/O     O
spi_cs/spi_cs_D2      1       0   /\1   3     FB2_4         (b)     (b)
VA<18>                5       0     0   0     FB2_5   11    I/O     O
spi_comp/run_rx       3       0   \/1   1     FB2_6   12    I/O     (b)
$OpTx$FX_DC$2549756   1       1<- \/5   0     FB2_7         (b)     (b)
nframsel             11       6<-   0   0     FB2_8   13    I/O     O
viccy/crtc_reg<3>     4       0   /\1   0     FB2_9         (b)     (b)
viccy/crtc_reg<2>     4       0     0   1     FB2_10  14    I/O     (b)
viccy/crtc_reg<1>     4       0     0   1     FB2_11        (b)     (b)
viccy/crtc_reg<0>     4       0     0   1     FB2_12  15    I/O     (b)
spi_sel<3>            4       0     0   1     FB2_13        (b)     (b)
spi_comp/txd<7>       4       0     0   1     FB2_14  16    I/O     (b)
spi_comp/txd<6>       4       0     0   1     FB2_15  17    I/O     (b)
spi_comp/txd<5>       4       0     0   1     FB2_16        (b)     (b)
spi_comp/txd<4>       4       0     0   1     FB2_17  19    I/O     (b)
spi_comp/txd<3>       4       0     0   1     FB2_18        (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$FX_DC$2549698  19: D<2>.PIN                                  37: mappy/cfg_mp<2> 
  2: $OpTx$INV$2549688    20: D<1>.PIN                                  38: mappy/cfg_mp<3> 
  3: $OpTx$INV$2549694    21: D<0>.PIN                                  39: mappy/cfg_mp<6> 
  4: A<0>                 22: SFDecomp_66/SFDecomp_66_CE                40: mappy/cfg_mp<7> 
  5: A<14>                23: boot                                      41: memclk 
  6: A<15>                24: ipl                                       42: phi2 
  7: A<1>                 25: is_char_out                               43: reset 
  8: A<2>                 26: is_vid_out                                44: rwb 
  9: A<3>                 27: lowbank<0>                                45: screenb0 
 10: A<4>                 28: lowbank<1>                                46: spi_comp/run_rx/spi_comp/run_rx_RSTF 
 11: A<5>                 29: lowbank<3>                                47: viccy/chr_fetch 
 12: A<6>                 30: mappy/SFDecomp_16/mappy/SFDecomp_16_D2    48: viccy/crtc_reg<0> 
 13: A<7>                 31: mappy/SFDecomp_831/mappy/SFDecomp_831_D2  49: viccy/crtc_reg<1> 
 14: D<7>.PIN             32: mappy/bankl<0>                            50: viccy/crtc_reg<2> 
 15: D<6>.PIN             33: mappy/bankl<2>                            51: viccy/crtc_reg<3> 
 16: D<5>.PIN             34: mappy/bankl<3>                            52: viccy/pxl_fetch 
 17: D<4>.PIN             35: mappy/cfg_mp<0>                           53: viccy/vpage<7> 
 18: D<3>.PIN             36: mappy/cfg_mp<1>                           54: vis_hires_in 

Signal                        1         2         3         4         5         6 FB
Name                0----+----0----+----0----+----0----+----0----+----0----+----0 Inputs
viccy/is_10rows_or0000/viccy/is_10rows_or0000_D2 
                     XX.X.....XXXX.................X............X...XXXX......... 13
VA<16>               .X...X.................XXX.X.X.X............X............... 9
VA<15>               .X..XX.................X.XX..X......XX........X....XXX...... 13
spi_cs/spi_cs_D2     XX.....XXXXXX.................X..........X.................. 10
VA<18>               .....X.................XXX..XX..X...........X............... 8
spi_comp/run_rx      XX.X..XXXXXXX.................X..........X.X.X.............. 14
$OpTx$FX_DC$2549756  XX.X.....XXXX.................X............X...XX.X......... 12
nframsel             X.X.XX................X......XX..XXX..XXX..X................ 14
viccy/crtc_reg<3>    XX.X.....XXXX....X............X.........X.XX......X......... 13
viccy/crtc_reg<2>    XX.X.....XXXX.....X...........X.........X.XX.....X.......... 13
viccy/crtc_reg<1>    XX.X.....XXXX......X..........X.........X.XX....X........... 13
viccy/crtc_reg<0>    XX.X.....XXXX.......X.........X.........X.XX...X............ 13
spi_sel<3>           XX.X..XXXXXXX....X............X..........XXX................ 15
spi_comp/txd<7>      XX....XXXXXXXX.......X........X..........XXX................ 15
spi_comp/txd<6>      XX....XXXXXXX.X......X........X..........XXX................ 15
spi_comp/txd<5>      XX....XXXXXXX..X.....X........X..........XXX................ 15
spi_comp/txd<4>      XX....XXXXXXX...X....X........X..........XXX................ 15
spi_comp/txd<3>      XX....XXXXXXX....X...X........X..........XXX................ 15
                    0----+----1----+----2----+----3----+----4----+----5----+----6
                              0         0         0         0         0         0
*********************************** FB3  ***********************************
Number of function block inputs used/remaining:               29/25
Number of signals used by logic mapping into function block:  29
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
memclk                2       0     0   3     FB3_1         (b)     (b)
clk2m                 2       0     0   3     FB3_2   28    I/O     (b)
clk1m                 2       0     0   3     FB3_3         (b)     (b)
viccy/slot_cnt<0>     3       0     0   2     FB3_4         (b)     (b)
viccy/rline_cnt<0>    3       0     0   2     FB3_5         (b)     (b)
viccy/in_slot         3       0     0   2     FB3_6         (b)     (b)
viccy/h_enable        3       0     0   2     FB3_7         (b)     (b)
clocky/cpu_cnt1<2>    3       0     0   2     FB3_8         (b)     (b)
viccy/slot_cnt<4>     4       0     0   1     FB3_9         (b)     (b)
viccy/slot_cnt<3>     4       0     0   1     FB3_10  30    GCK/I/O GCK
viccy/slot_cnt<2>     4       0     0   1     FB3_11        (b)     (b)
viccy/slot_cnt<1>     4       0     0   1     FB3_12  31    I/O     (b)
clocky/cpu_cnt1<3>    4       0     0   1     FB3_13        (b)     (b)
clocky/cpu_cnt1<1>    4       0     0   1     FB3_14  32    GCK/I/O (b)
clk4m                 4       0     0   1     FB3_15  33    I/O     (b)
viccy/vid_addr_hold<8>
                      5       0     0   0     FB3_16        (b)     (b)
viccy/vid_addr_hold<7>
                      5       0     0   0     FB3_17        (b)     (b)
viccy/vid_addr_hold<6>
                      5       0     0   0     FB3_18        (b)     (b)

Signals Used by Logic in Function Block
  1: clocky/cpu_cnt1<0>         11: viccy/last_slot_of_line      21: viccy/slot_cnt<7> 
  2: clocky/cpu_cnt1<1>         12: viccy/last_vis_slot_of_line  22: viccy/slot_cnt<8> 
  3: clocky/cpu_cnt1<2>         13: viccy/rline_cnt<0>           23: viccy/slot_cnt<9> 
  4: clocky/cpu_cnt1<3>         14: viccy/slot_cnt<0>            24: viccy/vid_addr<6> 
  5: clocky/memclk_int          15: viccy/slot_cnt<1>            25: viccy/vid_addr<7> 
  6: hsync                      16: viccy/slot_cnt<2>            26: viccy/vid_addr<8> 
  7: reset                      17: viccy/slot_cnt<3>            27: viccy/vid_addr_hold<6> 
  8: slotclk                    18: viccy/slot_cnt<4>            28: viccy/vid_addr_hold<7> 
  9: viccy/last_line_of_char    19: viccy/slot_cnt<5>            29: viccy/vid_addr_hold<8> 
 10: viccy/last_line_of_screen  20: viccy/slot_cnt<6>           

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
memclk               ....X.X................................. 2
clk2m                XX.X..X................................. 4
clk1m                XXXX..X................................. 5
viccy/slot_cnt<0>    ......XX..X..X.......................... 4
viccy/rline_cnt<0>   .....XX..X..X........................... 4
viccy/in_slot        ......XX.....X.......................... 3
viccy/h_enable       .......X.........XXXXXX................. 7
clocky/cpu_cnt1<2>   XX..X.X................................. 4
viccy/slot_cnt<4>    ......XX..X..XXXXX...................... 8
viccy/slot_cnt<3>    ......XX..X..XXXX....................... 7
viccy/slot_cnt<2>    ......XX..X..XXX........................ 6
viccy/slot_cnt<1>    ......XX..X..XX......................... 5
clocky/cpu_cnt1<3>   XXXXX.X................................. 6
clocky/cpu_cnt1<1>   XXXXX.X................................. 6
clk4m                XXXX..X................................. 5
viccy/vid_addr_hold<8> 
                     ......XXXX.X.............X..X........... 7
viccy/vid_addr_hold<7> 
                     ......XXXX.X............X..X............ 7
viccy/vid_addr_hold<6> 
                     ......XXXX.X...........X..X............. 7
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB4  ***********************************
Number of function block inputs used/remaining:               43/11
Number of signals used by logic mapping into function block:  43
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
wp_romB               3       0     0   2     FB4_1         (b)     (b)
$OpTx$INV$2549688     3       0     0   2     FB4_2   2     GTS/I/O (b)
wp_romA               4       0     0   1     FB4_3         (b)     (b)
wp_rom9               4       0     0   1     FB4_4         (b)     (b)
vis_hires_in          4       0     0   1     FB4_5   3     GTS/I/O (b)
VA<17>                5       0     0   0     FB4_6   4     I/O     O
screenb0              4       0     0   1     FB4_7         (b)     (b)
phi2                  2       0     0   3     FB4_8   5     GTS/I/O I/O
mappy/cfg_mp<6>       4       0     0   1     FB4_9         (b)     (b)
mappy/cfg_mp<5>       4       0     0   1     FB4_10        (b)     (b)
mappy/cfg_mp<0>       4       0     0   1     FB4_11        (b)     (b)
phi2_io               2       0     0   3     FB4_12  6     GTS/I/O O
mappy/bankl<0>        4       0     0   1     FB4_13        (b)     (b)
VA<14>                4       0     0   1     FB4_14  7     I/O     O
lowbank<2>            4       0     0   1     FB4_15        (b)     (b)
lowbank<0>            4       0     0   1     FB4_16        (b)     (b)
lockb0                4       0     0   1     FB4_17        (b)     (b)
$OpTx$INV$2549694     5       0     0   0     FB4_18        (b)     (b)

Signals Used by Logic in Function Block
  1: A<12>             16: lockb0                                        30: mode<1> 
  2: A<13>             17: lowbank<0>                                    31: phi2 
  3: A<14>             18: lowbank<2>                                    32: reset 
  4: A<15>             19: lowbank_or0000/lowbank_or0000_D2              33: screenb0 
  5: phi2.PIN          20: mappy/SFDecomp_16/mappy/SFDecomp_16_D2        34: viccy/chr_fetch 
  6: D<6>.PIN          21: mappy/SFDecomp_831/mappy/SFDecomp_831_D2      35: viccy/pxl_fetch 
  7: D<5>.PIN          22: mappy/bankl<1>                                36: viccy/vpage<6> 
  8: D<4>.PIN          23: mappy/cfg_mp<0>                               37: vis_hires_in 
  9: D<2>.PIN          24: mappy/cfg_mp<5>                               38: vis_hires_in_or0000/vis_hires_in_or0000_D2 
 10: D<0>.PIN          25: mappy/cfg_mp<6>                               39: wp_rom9 
 11: do_cpu            26: mappy/cfg_mp<7>                               40: wp_romA 
 12: e                 27: mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2  41: wp_romB 
 13: ipl               28: memclk                                        42: wp_romPET 
 14: is_char_out       29: mode<0>                                       43: wp_romPET_or0000/wp_romPET_or0000_D2 
 15: is_vid_out       

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
wp_romB              .....X........................XX........X.X....... 5
$OpTx$INV$2549688    XXXX................X..XXX........................ 8
wp_romA              ......X.......................XX.......X..X....... 5
wp_rom9              .......X......................XX......X...X....... 5
vis_hires_in         .........X....................XX....XX............ 5
VA<17>               ...X........XXX..X.X.X..........X................. 8
screenb0             ........X.....................XXX....X............ 5
phi2                 ....X.....X................X..X................... 4
mappy/cfg_mp<6>      .....X..................X.X...XX.................. 5
mappy/cfg_mp<5>      ......X................X..X...XX.................. 5
mappy/cfg_mp<0>      .........X............X...X...XX.................. 5
phi2_io              ..........X................XXX.................... 4
mappy/bankl<0>       .........X.X...X..............XX.................. 5
VA<14>               ..X.........X.X..................XXXX............. 7
lowbank<2>           ........X........XX...........XX.................. 5
lowbank<0>           .........X......X.X...........XX.................. 5
lockb0               .........X.....X..............XX..........X....... 5
$OpTx$INV$2549694    XXXX.....................X............XXXX........ 9
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB5  ***********************************
Number of function block inputs used/remaining:               44/10
Number of signals used by logic mapping into function block:  44
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
viccy/last_line_of_char
                      9       4<-   0   0     FB5_1         (b)     (b)
spi_nsel2             1       0   /\3   1     FB5_2   34    I/O     O
viccy/cline_cnt<3>    6       1<-   0   0     FB5_3         (b)     (b)
viccy/rline_cnt<3>    4       0   /\1   0     FB5_4         (b)     (b)
viccy/cline_cnt<0>    5       0     0   0     FB5_5   35    I/O     (b)
viccy/rline_cnt<2>    4       0   \/1   0     FB5_6         (b)     (b)
viccy/rline_cnt<1>    4       1<- \/2   0     FB5_7         (b)     (b)
viccy/cline_cnt<2>    6       2<- \/1   0     FB5_8   38    GCK/I/O (b)
viccy/cline_cnt<1>    6       1<-   0   0     FB5_9         (b)     (b)
spi_nsel3             1       0   \/4   0     FB5_10  39    I/O     O
viccy/pxlhold<3>      9       4<-   0   0     FB5_11        (b)     (b)
ipl_cnt_Madd__add0000__and0003/ipl_cnt_Madd__add0000__and0003_D2
                      1       0   \/4   0     FB5_12  40    I/O     (b)
viccy/pxlhold<2>      9       4<-   0   0     FB5_13        (b)     (b)
dena                  3       0   \/2   0     FB5_14  41    I/O     O
pet_vsync             7       2<-   0   0     FB5_15  43    I/O     O
viccy/pxlhold<1>      9       4<-   0   0     FB5_16        (b)     (b)
spi_nsel4             1       0   /\4   0     FB5_17  44    I/O     O
viccy/rline_cnt<4>    4       0   \/1   0     FB5_18        (b)     (b)

Signals Used by Logic in Function Block
  1: VD<3>.PIN         16: viccy/cline_cnt<0>         31: viccy/pxlhold<3> 
  2: VD<2>.PIN         17: viccy/cline_cnt<1>         32: viccy/rline_cnt<0> 
  3: VD<1>.PIN         18: viccy/cline_cnt<2>         33: viccy/rline_cnt<1> 
  4: SFDecomp_66       19: viccy/cline_cnt<3>         34: viccy/rline_cnt<2> 
  5: dclk              20: viccy/dot2clk_d            35: viccy/rline_cnt<3> 
  6: graphic           21: viccy/h_enable             36: viccy/rline_cnt<4> 
  7: hsync             22: viccy/is_10rows            37: viccy/rline_cnt<5> 
  8: ipl_cnt<0>        23: viccy/is_80                38: viccy/rline_cnt<6> 
  9: ipl_cnt<1>        24: viccy/is_9rows             39: viccy/rline_cnt<7> 
 10: ipl_cnt<2>        25: viccy/last_line_of_char    40: viccy/rline_cnt<8> 
 11: ipl_cnt<3>        26: viccy/last_line_of_screen  41: viccy/rline_cnt<9> 
 12: ipl_cnt<4>        27: viccy/pxl_fetch            42: viccy/sr_load_d 
 13: reset             28: viccy/pxlhold<0>           43: viccy/v_enable 
 14: spi_sel<2>        29: viccy/pxlhold<1>           44: vis_hires_in 
 15: spi_sel<3>        30: viccy/pxlhold<2>          

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
viccy/last_line_of_char 
                     .....XX........XXXX..X.X.......X...........X...... 10
spi_nsel2            ...X........X..................................... 2
viccy/cline_cnt<3>   .....XX.....X..XXXX.....XX.....X.................. 10
viccy/rline_cnt<3>   ......X.....X............X.....XXXX............... 7
viccy/cline_cnt<0>   .....XX.....X..X........XX.....X.................. 7
viccy/rline_cnt<2>   ......X.....X............X.....XXX................ 6
viccy/rline_cnt<1>   ......X.....X............X.....XX................. 5
viccy/cline_cnt<2>   .....XX.....X..XXX......XX.....X.................. 9
viccy/cline_cnt<1>   .....XX.....X..XX.......XX.....X.................. 8
spi_nsel3            ............XX.................................... 2
viccy/pxlhold<3>     X...X.......X......X..X...X..XX..........X........ 9
ipl_cnt_Madd__add0000__and0003/ipl_cnt_Madd__add0000__and0003_D2 
                     .......XXXXX...................................... 5
viccy/pxlhold<2>     .X..X.......X......X..X...X.XX...........X........ 9
dena                 ....X.......X.......X.....X..............XX....... 6
pet_vsync            ......X.....X........X.X.......XXXXXXXXXX......... 14
viccy/pxlhold<1>     ..X.X.......X......X..X...XXX............X........ 9
spi_nsel4            ............X.X................................... 2
viccy/rline_cnt<4>   ......X.....X............X.....XXXXX.............. 8
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB6  ***********************************
Number of function block inputs used/remaining:               41/13
Number of signals used by logic mapping into function block:  41
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
ipl_next              4       0     0   1     FB6_1         (b)     (b)
VA<8>                 4       0     0   1     FB6_2   135   I/O     O
VA<7>                 5       0     0   0     FB6_3   136   I/O     O
ipl_cnt<9>            4       0   \/1   0     FB6_4         (b)     (b)
VA<13>                6       1<-   0   0     FB6_5   137   I/O     O
VA<12>                5       0     0   0     FB6_6   138   I/O     O
ipl_cnt<8>            4       0     0   1     FB6_7         (b)     (b)
ramrwb                3       0     0   2     FB6_8   139   I/O     O
ipl_cnt<7>            4       0     0   1     FB6_9         (b)     (b)
ipl_cnt<6>            4       0     0   1     FB6_10  140   I/O     (b)
ipl_cnt<5>            4       0     0   1     FB6_11        (b)     (b)
ipl_cnt<4>            4       0     0   1     FB6_12        (b)     (b)
ipl_cnt<3>            4       0     0   1     FB6_13        (b)     (b)
ipl_cnt<2>            4       0     0   1     FB6_14  142   I/O     I
ipl_cnt<1>            4       0     0   1     FB6_15  143   GSR/I/O I
ipl_cnt<11>           4       0     0   1     FB6_16        (b)     (b)
ipl_cnt<10>           4       0   \/1   0     FB6_17        (b)     (b)
ipl_out               6       1<-   0   0     FB6_18        (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$FX_DC$2549698  15: ipl_cnt<5>                                                        29: viccy/charhold<3> 
  2: A<12>                16: ipl_cnt<6>                                                        30: viccy/charhold<4> 
  3: A<13>                17: ipl_cnt<7>                                                        31: viccy/chr_fetch 
  4: A<7>                 18: ipl_cnt<8>                                                        32: viccy/is_80 
  5: A<8>                 19: ipl_cnt<9>                                                        33: viccy/pxl_fetch 
  6: boot                 20: ipl_cnt_Madd__add0000__and0003/ipl_cnt_Madd__add0000__and0003_D2  34: viccy/vid_addr<12> 
  7: ipl                  21: ipl_next                                                          35: viccy/vid_addr<13> 
  8: ipl_cnt<0>           22: ipl_state                                                         36: viccy/vid_addr<7> 
  9: ipl_cnt<10>          23: ipl_state_d                                                       37: viccy/vid_addr<8> 
 10: ipl_cnt<11>          24: is_vid_out                                                        38: viccy/vpage<4> 
 11: ipl_cnt<1>           25: mappy/bankl<3>                                                    39: viccy/vpage<5> 
 12: ipl_cnt<2>           26: memclk                                                            40: vis_double_in 
 13: ipl_cnt<3>           27: reset                                                             41: vis_hires_in 
 14: ipl_cnt<4>           28: rwb                                                              

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
ipl_next             .......XXXXXXXXXXXX..X...XX....................... 15
VA<8>                ....X.X................X.....XX.X...X...X......... 8
VA<7>                ...X..X..X.............X....X.X.X..X....X......... 9
ipl_cnt<9>           ......X.......XXXXXXX.X..XX....................... 11
VA<13>               ..X...X................X......XXX.X...X.X......... 9
VA<12>               .X....X................X......X.XX...X.XX......... 9
ipl_cnt<8>           ......X.......XXXX.XX.X..XX....................... 10
ramrwb               X....XX................XXX.X...................... 7
ipl_cnt<7>           ......X.......XXX..XX.X..XX....................... 9
ipl_cnt<6>           ......X.......XX...XX.X..XX....................... 8
ipl_cnt<5>           ......X.......X....XX.X..XX....................... 7
ipl_cnt<4>           ......XX..XXXX......X.X..XX....................... 10
ipl_cnt<3>           ......XX..XXX.......X.X..XX....................... 9
ipl_cnt<2>           ......XX..XX........X.X..XX....................... 8
ipl_cnt<1>           ......XX..X.........X.X..XX....................... 7
ipl_cnt<11>          ......X.XX....XXXXXXX.X..XX....................... 13
ipl_cnt<10>          ......X.X.....XXXXXXX.X..XX....................... 12
ipl_out              ......XXXXXXXXXXXXX...X..XX....................... 16
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB7  ***********************************
Number of function block inputs used/remaining:               31/23
Number of signals used by logic mapping into function block:  31
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
viccy/last_vis_slot_of_line
                      2       0   /\2   1     FB7_1         (b)     (b)
viccy/last_slot_of_line
                      2       0     0   3     FB7_2         (b)     (b)
dclk                  2       0     0   3     FB7_3   45    I/O     O
viccy/last_line_of_screen
                      2       0     0   3     FB7_4         (b)     (b)
pxl                   3       0     0   2     FB7_5   46    I/O     O
viccy/slot_cnt<9>     4       0     0   1     FB7_6         (b)     (b)
viccy/slot_cnt<8>     4       0     0   1     FB7_7         (b)     (b)
viccy/slot_cnt<7>     4       0     0   1     FB7_8         (b)     (b)
viccy/slot_cnt<6>     4       0     0   1     FB7_9         (b)     (b)
viccy/slot_cnt<5>     4       0     0   1     FB7_10        (b)     (b)
viccy/rline_cnt<9>    4       0     0   1     FB7_11        (b)     (b)
hsync                 4       0     0   1     FB7_12  48    I/O     O
viccy/rline_cnt<8>    4       0     0   1     FB7_13        (b)     (b)
viccy/rline_cnt<7>    4       0   \/1   0     FB7_14        (b)     (b)
vsync                 7       2<-   0   0     FB7_15  49    I/O     O
viccy/rline_cnt<6>    4       0   /\1   0     FB7_16        (b)     (b)
viccy/rline_cnt<5>    4       0   \/1   0     FB7_17        (b)     (b)
viccy/v_enable        8       3<-   0   0     FB7_18        (b)     (b)

Signals Used by Logic in Function Block
  1: clocky/clk_cnt_0_0         12: viccy/rline_cnt<0>  22: viccy/slot_cnt<0> 
  2: dclk                       13: viccy/rline_cnt<1>  23: viccy/slot_cnt<1> 
  3: dena                       14: viccy/rline_cnt<2>  24: viccy/slot_cnt<2> 
  4: hsync                      15: viccy/rline_cnt<3>  25: viccy/slot_cnt<3> 
  5: reset                      16: viccy/rline_cnt<4>  26: viccy/slot_cnt<4> 
  6: slotclk                    17: viccy/rline_cnt<5>  27: viccy/slot_cnt<5> 
  7: viccy/is_10rows            18: viccy/rline_cnt<6>  28: viccy/slot_cnt<6> 
  8: viccy/is_9rows             19: viccy/rline_cnt<7>  29: viccy/slot_cnt<7> 
  9: viccy/last_line_of_screen  20: viccy/rline_cnt<8>  30: viccy/slot_cnt<8> 
 10: viccy/last_slot_of_line    21: viccy/rline_cnt<9>  31: viccy/slot_cnt<9> 
 11: viccy/pxlhold<7>          

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
viccy/last_vis_slot_of_line 
                     .....X...............XXXXXXXXXX......... 11
viccy/last_slot_of_line 
                     .....X...............XXXXXXXXXX......... 11
dclk                 X...X................................... 2
viccy/last_line_of_screen 
                     ...X.......XXXXXXXXXX................... 11
pxl                  .XX.X.....X............................. 4
viccy/slot_cnt<9>    ....XX...X...........XXXXXXXXXX......... 13
viccy/slot_cnt<8>    ....XX...X...........XXXXXXXXX.......... 12
viccy/slot_cnt<7>    ....XX...X...........XXXXXXXX........... 11
viccy/slot_cnt<6>    ....XX...X...........XXXXXXX............ 10
viccy/slot_cnt<5>    ....XX...X...........XXXXXX............. 9
viccy/rline_cnt<9>   ...XX...X..XXXXXXXXXX................... 13
hsync                .....X...............XXXXXXXXXX......... 11
viccy/rline_cnt<8>   ...XX...X..XXXXXXXXX.................... 12
viccy/rline_cnt<7>   ...XX...X..XXXXXXXX..................... 11
vsync                ...XX.XX...XXXXXXXXXX................... 14
viccy/rline_cnt<6>   ...XX...X..XXXXXXX...................... 10
viccy/rline_cnt<5>   ...XX...X..XXXXXX....................... 9
viccy/v_enable       ...X..XX....XXXXXXXXX................... 12
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB8  ***********************************
Number of function block inputs used/remaining:               54/0
Number of signals used by logic mapping into function block:  54
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
wp_romPET_or0000/wp_romPET_or0000_D2
                      1       0   /\1   3     FB8_1         (b)     (b)
nvramsel              5       0     0   0     FB8_2   130   I/O     O
VA<5>                 5       0     0   0     FB8_3   131   I/O     O
vis_hires_in_or0000/vis_hires_in_or0000_D2
                      1       0     0   4     FB8_4         (b)     (b)
VA<9>                 4       0     0   1     FB8_5   132   I/O     O
mode_or0000/mode_or0000_D2
                      1       0     0   4     FB8_6         (b)     (b)
mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2
                      1       0     0   4     FB8_7         (b)     (b)
VA<6>                 5       0     0   0     FB8_8   133   I/O     O
lowbank_or0000/lowbank_or0000_D2
                      1       0   \/1   3     FB8_9         (b)     (b)
VA<11>                7       2<-   0   0     FB8_10  134   I/O     O
D_and0000/D_and0000_D2
                      3       0   /\1   1     FB8_11        (b)     (b)
spi_sel<2>            4       0     0   1     FB8_12        (b)     (b)
spi_sel<0>            4       0     0   1     FB8_13        (b)     (b)
spi_comp/txd<2>       4       0     0   1     FB8_14        (b)     (b)
spi_comp/txd<1>       4       0     0   1     FB8_15        (b)     (b)
spi_comp/txd<0>       4       0     0   1     FB8_16        (b)     (b)
SFDecomp_66           4       0   \/1   0     FB8_17        (b)     (b)
do_cpu                7       2<-   0   0     FB8_18        (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$FX_DC$2549698  19: A<9>                                      37: phi2 
  2: $OpTx$FX_SC$2549761  20: D<2>.PIN                                  38: reset 
  3: $OpTx$INV$2549688    21: D<1>.PIN                                  39: rwb 
  4: A<0>                 22: D<0>.PIN                                  40: screenb0 
  5: A<10>                23: SFDecomp_66/SFDecomp_66_CE                41: viccy/charhold<1> 
  6: A<11>                24: boot                                      42: viccy/charhold<2> 
  7: A<12>                25: graphic                                   43: viccy/charhold<5> 
  8: A<13>                26: ipl                                       44: viccy/charhold<7> 
  9: A<14>                27: ipl_cnt<10>                               45: viccy/chr_fetch 
 10: A<15>                28: ipl_cnt<9>                                46: viccy/is_80 
 11: A<1>                 29: is8296                                    47: viccy/pxl_fetch 
 12: A<2>                 30: is_cpu                                    48: viccy/vid_addr<11> 
 13: A<3>                 31: is_vid_out                                49: viccy/vid_addr<5> 
 14: A<4>                 32: mappy/SFDecomp_16/mappy/SFDecomp_16_D2    50: viccy/vid_addr<6> 
 15: A<5>                 33: mappy/SFDecomp_831/mappy/SFDecomp_831_D2  51: viccy/vid_addr<9> 
 16: A<6>                 34: mappy/bankl<3>                            52: viccy/vpage<3> 
 17: A<7>                 35: memclk                                    53: vis_hires_in 
 18: A<8>                 36: memclk_d                                  54: wait_int_d 

Signal                        1         2         3         4         5         6 FB
Name                0----+----0----+----0----+----0----+----0----+----0----+----0 Inputs
wp_romPET_or0000/wp_romPET_or0000_D2 
                     X.XX......XXXXXXX...............X.....X..................... 12
nvramsel             X.....XXXX.............X.X....XX.XX...XX.............X...... 14
VA<5>                ..............X..........X.X..X.........X...X.X.X...X....... 9
vis_hires_in_or0000/vis_hires_in_or0000_D2 
                     X.XX......XXXXXXX...............X.....X..................... 12
VA<9>                ..................X......X....X...........X.X.X...X.X....... 8
mode_or0000/mode_or0000_D2 
                     X.XX......XXXXXXX...............X.....X..................... 12
mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2 
                     XX..XXXX...XXXXXXXX...X.....X..X............................ 17
VA<6>                ...............X.........XX...X..........X..X.X..X..X....... 9
lowbank_or0000/lowbank_or0000_D2 
                     X.XX......XXXXXXX...............X.....X..................... 12
VA<11>               .....X..................XX....X............XXXXX...XX....... 11
D_and0000/D_and0000_D2 
                     X.....XXXX.............X......XX.X..X.XX.................... 12
spi_sel<2>           X.XX......XXXXXXX..X............X...XXX..................... 15
spi_sel<0>           X.XX......XXXXXXX....X..........X...XXX..................... 15
spi_comp/txd<2>      X.X.......XXXXXXX..X..X.........X...XXX..................... 15
spi_comp/txd<1>      X.X.......XXXXXXX...X.X.........X...XXX..................... 15
spi_comp/txd<0>      X.X.......XXXXXXX....XX.........X...XXX..................... 15
SFDecomp_66          X.XX......XXXXXXX...X...........X...XXX..................... 15
do_cpu               X.....XXXX.............X.X...XXX.X.X.XXX.................... 15
                    0----+----1----+----2----+----3----+----4----+----5----+----6
                              0         0         0         0         0         0
*********************************** FB9  ***********************************
Number of function block inputs used/remaining:               46/8
Number of signals used by logic mapping into function block:  46
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
wait_int_d            3       0   /\2   0     FB9_1         (b)     (b)
spi_clk               3       0     0   2     FB9_2   50    I/O     O
ipl                   3       0     0   2     FB9_3   51    I/O     (b)
viccy/vpage<7>        4       0     0   1     FB9_4         (b)     (b)
nflash                2       0     0   3     FB9_5   52    I/O     O
viccy/vpage<6>        4       0     0   1     FB9_6   53    I/O     (b)
viccy/vpage<5>        4       0     0   1     FB9_7         (b)     (b)
spi_out               2       0     0   3     FB9_8   54    I/O     O
viccy/vpage<4>        4       0     0   1     FB9_9         (b)     (b)
viccy/vpage<3>        4       0     0   1     FB9_10        (b)     (b)
viccy/vpage<2>        4       0     0   1     FB9_11  56    I/O     (b)
viccy/interlace       4       0     0   1     FB9_12  57    I/O     (b)
mode<0>               4       0     0   1     FB9_13        (b)     (b)
VD<6>                 4       0     0   1     FB9_14  58    I/O     I/O
ipl_state             4       0     0   1     FB9_15        (b)     (b)
ipl_cnt<0>            4       0   \/1   0     FB9_16        (b)     (b)
VD<7>                 5       1<- \/1   0     FB9_17  59    I/O     I/O
is_cpu                8       3<-   0   0     FB9_18        (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$FX_DC$2549756  17: ipl_next                      32: spi_comp/run_rx 
  2: A<0>                 18: ipl_out                       33: spi_comp/run_tx 
  3: A<1>                 19: ipl_state                     34: spi_comp/run_txd 
  4: D<7>.PIN             20: ipl_state_d                   35: spi_comp/sr<6> 
  5: D<6>.PIN             21: is_cpu                        36: spi_cs/spi_cs_D2 
  6: D<5>.PIN             22: memclk                        37: spi_outx 
  7: D<4>.PIN             23: mode<0>                       38: spi_sel<0> 
  8: D<3>.PIN             24: mode<1>                       39: viccy/crtc_reg<2> 
  9: D<2>.PIN             25: mode_or0000/mode_or0000_D2    40: viccy/interlace 
 10: D<0>.PIN             26: phi2                          41: viccy/vpage<2> 
 11: clk1m                27: ramrwb                        42: viccy/vpage<3> 
 12: clk2m                28: reset                         43: viccy/vpage<4> 
 13: clk4m                29: rwb                           44: viccy/vpage<5> 
 14: do_cpu               30: spi_clkx                      45: viccy/vpage<6> 
 15: ipl                  31: spi_comp/N01/spi_comp/N01_D2  46: viccy/vpage<7> 
 16: ipl_cnt<0>          

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
wait_int_d           ..............X.....XX.....X...................... 4
spi_clk              ..............XX..X..........X.................... 4
ipl                  ..............X.X..X.X.....X...................... 5
viccy/vpage<7>       X..X.................X.....X..........X......X.... 6
nflash               ..............X............X.........X............ 3
viccy/vpage<6>       X...X................X.....X..........X.....X..... 6
viccy/vpage<5>       X....X...............X.....X..........X....X...... 6
spi_out              ..............X..X..................X............. 3
viccy/vpage<4>       X.....X..............X.....X..........X...X....... 6
viccy/vpage<3>       X......X.............X.....X..........X..X........ 6
viccy/vpage<2>       X.......X............X.....X..........X.X......... 6
viccy/interlace      X........X...........X.....X..........XX.......... 6
mode<0>              .........X............X.XX.X...................... 5
VD<6>                .XX.X.........X...X.......X.X.X..XXX.............. 11
ipl_state            ..............X.X..X.X.....X...................... 5
ipl_cnt<0>           ..............XXX..X.X.....X...................... 6
VD<7>                .XXX..........X...X.......X.X.XXX..XX............. 12
is_cpu               ..........XXXX......XXXX...X...................... 9
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB10 ***********************************
Number of function block inputs used/remaining:               48/6
Number of signals used by logic mapping into function block:  48
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
viccy/vid_addr<8>     7       4<- \/2   0     FB10_1        (b)     (b)
viccy/vid_addr<7>     7       2<-   0   0     FB10_2  117   I/O     I
(unused)              0       0   \/5   0     FB10_3  118   I/O     I
viccy/vid_addr<6>     7       5<- \/3   0     FB10_4        (b)     (b)
VA<0>                 5       3<- \/3   0     FB10_5  119   I/O     O
VA<1>                 5       3<- \/3   0     FB10_6  120   I/O     O
viccy/vid_addr<5>     7       3<- \/1   0     FB10_7        (b)     (b)
VA<2>                 5       1<- \/1   0     FB10_8  121   I/O     O
(unused)              0       0   \/5   0     FB10_9        (b)     (b)
VA<10>                7       6<- \/4   0     FB10_10 124   I/O     O
VA<3>                 5       4<- \/4   0     FB10_11 125   I/O     O
VA<4>                 5       4<- \/4   0     FB10_12 126   I/O     O
viccy/vid_addr<4>     7       4<- \/2   0     FB10_13       (b)     (b)
viccy/vid_addr<3>     7       2<-   0   0     FB10_14 128   I/O     I
(unused)              0       0   \/4   1     FB10_15       (b)     (b)
viccy/vid_addr<2>     7       4<- \/2   0     FB10_16       (b)     (b)
viccy/vid_addr<1>     7       2<-   0   0     FB10_17 129   I/O     I
viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2
                      1       0   \/4   0     FB10_18       (b)     (b)

Signals Used by Logic in Function Block
  1: A<0>              17: viccy/charhold<0>          33: viccy/vid_addr<3> 
  2: A<10>             18: viccy/charhold<6>          34: viccy/vid_addr<4> 
  3: A<1>              19: viccy/chr_fetch            35: viccy/vid_addr<5> 
  4: A<2>              20: viccy/cline_cnt<0>         36: viccy/vid_addr<6> 
  5: A<3>              21: viccy/cline_cnt<1>         37: viccy/vid_addr<7> 
  6: A<4>              22: viccy/cline_cnt<2>         38: viccy/vid_addr<8> 
  7: graphic           23: viccy/cline_cnt<3>         39: viccy/vid_addr_hold<1> 
  8: ipl               24: viccy/in_slot              40: viccy/vid_addr_hold<2> 
  9: ipl_cnt<4>        25: viccy/is_80                41: viccy/vid_addr_hold<3> 
 10: ipl_cnt<5>        26: viccy/last_line_of_screen  42: viccy/vid_addr_hold<4> 
 11: ipl_cnt<6>        27: viccy/last_slot_of_line    43: viccy/vid_addr_hold<5> 
 12: ipl_cnt<7>        28: viccy/pxl_fetch            44: viccy/vid_addr_hold<6> 
 13: ipl_cnt<8>        29: viccy/vid_addr<0>          45: viccy/vid_addr_hold<7> 
 14: is_vid_out        30: viccy/vid_addr<10>         46: viccy/vid_addr_hold<8> 
 15: reset             31: viccy/vid_addr<1>          47: viccy/vpage<2> 
 16: slotclk           32: viccy/vid_addr<2>          48: vis_hires_in 

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
viccy/vid_addr<8>    ..............XX.......XXXX.X.XXXXXXXX.......X.... 16
viccy/vid_addr<7>    ..............XX.......XXXX.X.XXXXXXX.......X..... 15
viccy/vid_addr<6>    ..............XX.......XXXX.X.XXXXXX.......X...... 14
VA<0>                X......XX....X....XX.......XX..................X.. 9
VA<1>                ..X....X.X...X....X.X......X..X................X.. 9
viccy/vid_addr<5>    ..............XX.......XXXX.X.XXXXX.......X....... 13
VA<2>                ...X...X..X..X....X..X.....X...X...............X.. 9
VA<10>               .X....XX.....X...XX.....X..X.X................XX.. 11
VA<3>                ....X..X...X.X....X...X....X....X..............X.. 9
VA<4>                .....X.X....XX..X.X........X.....X.............X.. 9
viccy/vid_addr<4>    ..............XX.......XXXX.X.XXXX.......X........ 12
viccy/vid_addr<3>    ..............XX.......XXXX.X.XXX.......X......... 11
viccy/vid_addr<2>    ..............XX.......XXXX.X.XX.......X.......... 10
viccy/vid_addr<1>    ..............XX.......XXXX.X.X.......X........... 9
viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2 
                     ............................X.XXXXXXXX............ 9
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB11 ***********************************
Number of function block inputs used/remaining:               38/16
Number of signals used by logic mapping into function block:  38
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
viccy/vid_addr_hold<10>
                      5       2<- /\2   0     FB11_1        (b)     (b)
viccy/vid_addr_hold<11>
                      5       2<- /\2   0     FB11_2        (b)     (b)
viccy/vid_addr_hold<12>
                      5       2<- /\2   0     FB11_3  60    I/O     (b)
viccy/vid_addr_hold<13>
                      5       2<- /\2   0     FB11_4        (b)     (b)
viccy/vid_addr_hold<1>
                      5       2<- /\2   0     FB11_5  61    I/O     (b)
viccy/vid_addr_hold<2>
                      5       2<- /\2   0     FB11_6        (b)     (b)
viccy/vid_addr_hold<3>
                      5       2<- /\2   0     FB11_7        (b)     (b)
viccy/vid_addr_hold<4>
                      5       2<- /\2   0     FB11_8        (b)     (b)
viccy/vid_addr_hold<9>
                      5       2<- /\2   0     FB11_9        (b)     (b)
viccy/vid_addr_hold<5>
                      5       2<- /\2   0     FB11_10 64    I/O     (b)
nsel4                 1       0   /\2   2     FB11_11 66    I/O     O
nsel2                 1       0   \/1   3     FB11_12 68    I/O     O
viccy/vid_addr_hold<0>
                      5       1<- \/1   0     FB11_13       (b)     (b)
nsel1                 1       1<- \/5   0     FB11_14 69    I/O     O
viccy/vid_addr<9>     7       5<- \/3   0     FB11_15       (b)     (b)
viccy/vid_addr<11>    7       3<- \/1   0     FB11_16       (b)     (b)
viccy/vid_addr<10>    7       2<-   0   0     FB11_17 70    I/O     I
viccy/vid_addr<0>     6       2<- /\1   0     FB11_18       (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$FX_DC$2549698                                                                 14: viccy/last_line_of_screen    27: viccy/vid_addr<9> 
  2: $OpTx$INV$2549688                                                                   15: viccy/last_slot_of_line      28: viccy/vid_addr_hold<0> 
  3: A<4>                                                                                16: viccy/last_vis_slot_of_line  29: viccy/vid_addr_hold<10> 
  4: A<5>                                                                                17: viccy/vid_addr<0>            30: viccy/vid_addr_hold<11> 
  5: A<6>                                                                                18: viccy/vid_addr<10>           31: viccy/vid_addr_hold<12> 
  6: A<7>                                                                                19: viccy/vid_addr<11>           32: viccy/vid_addr_hold<13> 
  7: mappy/SFDecomp_831/mappy/SFDecomp_831_D2                                            20: viccy/vid_addr<12>           33: viccy/vid_addr_hold<1> 
  8: reset                                                                               21: viccy/vid_addr<13>           34: viccy/vid_addr_hold<2> 
  9: slotclk                                                                             22: viccy/vid_addr<1>            35: viccy/vid_addr_hold<3> 
 10: viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2  23: viccy/vid_addr<2>            36: viccy/vid_addr_hold<4> 
 11: viccy/in_slot                                                                       24: viccy/vid_addr<3>            37: viccy/vid_addr_hold<5> 
 12: viccy/is_80                                                                         25: viccy/vid_addr<4>            38: viccy/vid_addr_hold<9> 
 13: viccy/last_line_of_char                                                             26: viccy/vid_addr<5>           

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
viccy/vid_addr_hold<10> 
                     .......XX...XX.X.X..........X........... 7
viccy/vid_addr_hold<11> 
                     .......XX...XX.X..X..........X.......... 7
viccy/vid_addr_hold<12> 
                     .......XX...XX.X...X..........X......... 7
viccy/vid_addr_hold<13> 
                     .......XX...XX.X....X..........X........ 7
viccy/vid_addr_hold<1> 
                     .......XX...XX.X.....X..........X....... 7
viccy/vid_addr_hold<2> 
                     .......XX...XX.X......X..........X...... 7
viccy/vid_addr_hold<3> 
                     .......XX...XX.X.......X..........X..... 7
viccy/vid_addr_hold<4> 
                     .......XX...XX.X........X..........X.... 7
viccy/vid_addr_hold<9> 
                     .......XX...XX.X..........X..........X.. 7
viccy/vid_addr_hold<5> 
                     .......XX...XX.X.........X..........X... 7
nsel4                XXXXXXX................................. 7
nsel2                XXXXXXX................................. 7
viccy/vid_addr_hold<0> 
                     .......XX...XX.XX..........X............ 7
nsel1                XXXXXXX................................. 7
viccy/vid_addr<9>    .......XXXXX.XX...........X..........X.. 9
viccy/vid_addr<11>   .......XXXXX.XX..XX.......X..X.......... 11
viccy/vid_addr<10>   .......XXXXX.XX..X........X.X........... 10
viccy/vid_addr<0>    .......XX.XX.XX.X..........X............ 8
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB12 ***********************************
Number of function block inputs used/remaining:               49/5
Number of signals used by logic mapping into function block:  49
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
spi_comp/serin_d      9       4<-   0   0     FB12_1        (b)     (b)
VD<3>                 4       3<- /\4   0     FB12_2  110   I/O     I/O
VD<2>                 4       2<- /\3   0     FB12_3  111   I/O     I/O
$OpTx$FX_DC$2549698   1       0   /\2   2     FB12_4        (b)     (b)
VD<4>                 3       0   \/1   1     FB12_5  112   I/O     I/O
viccy/is_9rows        4       1<- \/2   0     FB12_6        (b)     (b)
viccy/is_10rows       4       2<- \/3   0     FB12_7        (b)     (b)
VD<1>                 4       3<- \/4   0     FB12_8  113   I/O     I/O
spi_comp/sr<4>        9       4<-   0   0     FB12_9        (b)     (b)
VD<5>                 3       0   \/2   0     FB12_10 115   I/O     I/O
spi_comp/sr<3>        9       4<-   0   0     FB12_11       (b)     (b)
VD<0>                 4       1<- /\2   0     FB12_12 116   I/O     I/O
spi_comp/sr<2>        9       5<- /\1   0     FB12_13       (b)     (b)
(unused)              0       0   /\5   0     FB12_14       (b)     (b)
(unused)              0       0   \/4   1     FB12_15       (b)     (b)
spi_comp/sr<1>        9       4<-   0   0     FB12_16       (b)     (b)
spi_comp/sr<0>        9       4<-   0   0     FB12_17       (b)     (b)
viccy/sr_load_d       1       0   /\4   0     FB12_18       (b)     (b)

Signals Used by Logic in Function Block
  1: A<0>              18: spi_clkx                                      34: spi_comp/txd<3> 
  2: A<1>              19: spi_comp/N01/spi_comp/N01_D2                  35: spi_comp/txd<4> 
  3: D<7>.PIN          20: spi_comp/run_rx_d                             36: spi_cs/spi_cs_D2 
  4: D<6>.PIN          21: spi_comp/run_tx_d                             37: spi_in1 
  5: D<5>.PIN          22: spi_comp/run_txd                              38: spi_in2 
  6: D<4>.PIN          23: spi_comp/serin_d                              39: spi_in3 
  7: D<3>.PIN          24: spi_comp/sr<0>                                40: spi_in4 
  8: D<2>.PIN          25: spi_comp/sr<1>                                41: spi_sel<0> 
  9: D<1>.PIN          26: spi_comp/sr<2>                                42: spi_sel<2> 
 10: D<0>.PIN          27: spi_comp/sr<3>                                43: spi_sel<3> 
 11: SFDecomp_66       28: spi_comp/sr<4>                                44: sr_load 
 12: ipl               29: spi_comp/sr<5>                                45: vda 
 13: ipl_state         30: spi_comp/stat_or0000/spi_comp/stat_or0000_D2  46: viccy/is_10rows 
 14: memclk            31: spi_comp/txd<0>                               47: viccy/is_10rows_or0000/viccy/is_10rows_or0000_D2 
 15: ramrwb            32: spi_comp/txd<1>                               48: viccy/is_9rows 
 16: reset             33: spi_comp/txd<2>                               49: vpa 
 17: rwb              

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
spi_comp/serin_d     ..........XX.X.X.X....X......X......XXXXXXX....... 14
VD<3>                XX....X....XX.X.X.X.......X........X......X....... 11
VD<2>                XX.....X...XX.X.X.X......X.........X.....X........ 11
$OpTx$FX_DC$2549698  ............................................X...X. 2
VD<4>                .....X.....X..X...X........X...................... 5
viccy/is_9rows       ..XXXXXXXX...X.X..............................XX.. 12
viccy/is_10rows      ..XXXXXXXX...X.X.............................XX... 12
VD<1>                XX......X.XXX.X.X.X.....X..........X.............. 11
spi_comp/sr<4>       ............XX.X.X.XXX....XX......X............... 10
VD<5>                ....X......X..X...X.........X..................... 5
spi_comp/sr<3>       ............XX.X.X.XXX...XX......X................ 10
VD<0>                XX.......X.XX.X.X.X....X...........X....X......... 11
spi_comp/sr<2>       ............XX.X.X.XXX..XX......X................. 10
spi_comp/sr<1>       ............XX.X.X.XXX.XX......X.................. 10
spi_comp/sr<0>       ............XX.X.X.XXXXX......X................... 10
viccy/sr_load_d      ...........................................X...... 1
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB13 ***********************************
Number of function block inputs used/remaining:               51/3
Number of signals used by logic mapping into function block:  51
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
mappy/SFDecomp_831/mappy/SFDecomp_831_D2
                      1       0     0   4     FB13_1        (b)     (b)
FA<15>                4       0     0   1     FB13_2  71    I/O     O
clocky/clk_cnt_0_0    1       0     0   4     FB13_3        (b)     (b)
SFDecomp_66/SFDecomp_66_CE
                      1       0     0   4     FB13_4        (b)     (b)
$OpTx$FX_SC$2549761   1       0     0   4     FB13_5        (b)     (b)
D_7_IOBUFE/D_7_IOBUFE_TRST
                      2       0     0   3     FB13_6        (b)     (b)
spi_comp/run_txd      3       0     0   2     FB13_7        (b)     (b)
mappy/cfg_mp<3>       4       0     0   1     FB13_8  74    I/O     I
mappy/cfg_mp<2>       4       0     0   1     FB13_9        (b)     (b)
mappy/bankl<7>        4       0     0   1     FB13_10       (b)     (b)
mappy/bankl<6>        4       0     0   1     FB13_11 75    I/O     I
mappy/bankl<5>        4       0     0   1     FB13_12       (b)     (b)
mappy/bankl<4>        4       0     0   1     FB13_13       (b)     (b)
mappy/bankl<3>        4       0     0   1     FB13_14 76    I/O     (b)
D<7>                  5       0     0   0     FB13_15 77    I/O     I/O
mappy/bankl<2>        4       0     0   1     FB13_16       (b)     (b)
D<6>                  4       0     0   1     FB13_17 78    I/O     I/O
mappy/bankl<1>        4       0     0   1     FB13_18       (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$FX_DC$2549698  18: A<8>                        35: lowbank<0> 
  2: $OpTx$FX_SC$2549761  19: A<9>                        36: mappy/SFDecomp_16/mappy/SFDecomp_16_D2 
  3: $OpTx$INV$2549688    20: D_7_IOBUFE/D_7_IOBUFE_TRST  37: mappy/SFDecomp_831/mappy/SFDecomp_831_D2 
  4: A<0>                 21: D_and0000/D_and0000_D2      38: mappy/cfg_mp<2> 
  5: A<10>                22: VD<6>.PIN                   39: mappy/cfg_mp<3> 
  6: A<11>                23: D<7>.PIN                    40: mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2 
  7: A<12>                24: D<6>.PIN                    41: phi2 
  8: A<13>                25: D<5>.PIN                    42: reset 
  9: A<14>                26: D<4>.PIN                    43: rwb 
 10: A<15>                27: D<3>.PIN                    44: spi_comp/N01/spi_comp/N01_D2 
 11: A<1>                 28: D<2>.PIN                    45: spi_comp/run_rx 
 12: A<2>                 29: D<1>.PIN                    46: spi_comp/run_tx 
 13: A<3>                 30: VD<7>.PIN                   47: spi_comp/run_txd 
 14: A<4>                 31: SFDecomp_66/SFDecomp_66_CE  48: spi_comp/run_txd/spi_comp/run_txd_RSTF 
 15: A<5>                 32: e                           49: spi_comp/sr<6> 
 16: A<6>                 33: ipl_state                   50: spi_cs/spi_cs_D2 
 17: A<7>                 34: lockb0                      51: spi_outx 

Signal                        1         2         3         4         5         6 FB
Name                0----+----0----+----0----+----0----+----0----+----0----+----0 Inputs
mappy/SFDecomp_831/mappy/SFDecomp_831_D2 
                     .X..XXXX.........XX................X........................ 8
FA<15>               ..X.....XX........................XX.XX..................... 7
clocky/clk_cnt_0_0   .........................................X.................. 1
SFDecomp_66/SFDecomp_66_CE 
                     ...X......X...............................X................. 3
$OpTx$FX_SC$2549761  ........XX.................................................. 2
D_7_IOBUFE/D_7_IOBUFE_TRST 
                     ....................X.....................X......X.......... 3
spi_comp/run_txd     X.X.......XXXXXXX.............X.....X...X.X....X............ 14
mappy/cfg_mp<3>      ..........................X...........XXXX.................. 5
mappy/cfg_mp<2>      ...........................X.........X.XXX.................. 5
mappy/bankl<7>       ......................X........X.X......XX.................. 5
mappy/bankl<6>       .......................X.......X.X......XX.................. 5
mappy/bankl<5>       ........................X......X.X......XX.................. 5
mappy/bankl<4>       .........................X.....X.X......XX.................. 5
mappy/bankl<3>       ..........................X....X.X......XX.................. 5
D<7>                 ...X......X........XX........X..X.........XXXX...XX......... 12
mappy/bankl<2>       ...........................X...X.X......XX.................. 5
D<6>                 ...X......X........XXX..........X.........XX..X.XX.......... 11
mappy/bankl<1>       ............................X..X.X......XX.................. 5
                    0----+----1----+----2----+----3----+----4----+----5----+----6
                              0         0         0         0         0         0
*********************************** FB14 ***********************************
Number of function block inputs used/remaining:               46/8
Number of signals used by logic mapping into function block:  46
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
mappy/SFDecomp_16/mappy/SFDecomp_16_D2
                      1       0   /\3   1     FB14_1        (b)     (b)
viccy/is_80           3       0     0   2     FB14_2        (b)     (b)
wp_romPET             4       0     0   1     FB14_3  100   I/O     I
vis_enable            4       0     0   1     FB14_4        (b)     (b)
vis_double_in         4       0     0   1     FB14_5  101   I/O     I
vis_80_in             4       0     0   1     FB14_6  102   I/O     I
mode<1>               4       0     0   1     FB14_7        (b)     (b)
mappy/cfg_mp<7>       4       0     0   1     FB14_8  103   I/O     I
mappy/cfg_mp<1>       4       0     0   1     FB14_9        (b)     (b)
lowbank<3>            4       0     0   1     FB14_10 104   I/O     I
FA<16>                3       0     0   2     FB14_11 105   I/O     O
lowbank<1>            4       0     0   1     FB14_12       (b)     (b)
is8296                4       0     0   1     FB14_13       (b)     (b)
FA<17>                3       0     0   2     FB14_14 106   I/O     O
FA<18>                3       0     0   2     FB14_15 107   I/O     O
boot                  4       0   \/1   0     FB14_16       (b)     (b)
viccy/vid_addr<13>    7       2<-   0   0     FB14_17       (b)     (b)
viccy/vid_addr<12>    7       3<- /\1   0     FB14_18       (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$INV$2549688                       17: mappy/bankl<4>                                                                      32: viccy/last_line_of_screen 
  2: A<15>                                   18: mappy/bankl<5>                                                                      33: viccy/last_slot_of_line 
  3: D<7>.PIN                                19: mappy/bankl<6>                                                                      34: viccy/vid_addr<10> 
  4: D<3>.PIN                                20: mappy/bankl<7>                                                                      35: viccy/vid_addr<11> 
  5: D<1>.PIN                                21: mappy/cfg_mp<1>                                                                     36: viccy/vid_addr<12> 
  6: boot                                    22: mappy/cfg_mp<7>                                                                     37: viccy/vid_addr<13> 
  7: is8296                                  23: mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2                                        38: viccy/vid_addr<9> 
  8: lowbank<1>                              24: mode<1>                                                                             39: viccy/vid_addr_hold<12> 
  9: lowbank<2>                              25: mode_or0000/mode_or0000_D2                                                          40: viccy/vid_addr_hold<13> 
 10: lowbank<3>                              26: phi2                                                                                41: vis_80_in 
 11: lowbank_or0000/lowbank_or0000_D2        27: reset                                                                               42: vis_double_in 
 12: mappy/SFDecomp_16/mappy/SFDecomp_16_D2  28: slotclk                                                                             43: vis_enable 
 13: mappy/bankl<0>                          29: viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2  44: vis_hires_in_or0000/vis_hires_in_or0000_D2 
 14: mappy/bankl<1>                          30: viccy/in_slot                                                                       45: wp_romPET 
 15: mappy/bankl<2>                          31: viccy/is_80                                                                         46: wp_romPET_or0000/wp_romPET_or0000_D2 
 16: mappy/bankl<3>                         

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
mappy/SFDecomp_16/mappy/SFDecomp_16_D2 
                     ............XXXXXXXX.............................. 8
viccy/is_80          ..........................XX...XX.......X......... 5
wp_romPET            ..X......................XX.................XX.... 5
vis_enable           ..X......................XX...............XX...... 5
vis_double_in        ...X.....................XX..............X.X...... 5
vis_80_in            ....X....................XX.............X..X...... 5
mode<1>              ....X..................XXXX....................... 5
mappy/cfg_mp<7>      ..X..................XX..XX....................... 5
mappy/cfg_mp<1>      ....X...............X.X..XX....................... 5
lowbank<3>           ...X.....XX..............XX....................... 5
FA<16>               XX.....X...XX..................................... 5
lowbank<1>           ....X..X..X..............XX....................... 5
is8296               ...X..X..................XX..................X.... 5
FA<17>               .X......X..X.X.................................... 4
FA<18>               .X.......X.X..X................................... 4
boot                 ....XX...................XX..................X.... 5
viccy/vid_addr<13>   ..........................XXXXXXXXXXXX.X.......... 13
viccy/vid_addr<12>   ..........................XXXXXXXXXX.XX........... 12
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB15 ***********************************
Number of function block inputs used/remaining:               40/14
Number of signals used by logic mapping into function block:  40
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
spi_comp/sr<5>        9       4<-   0   0     FB15_1        (b)     (b)
D<5>                  3       2<- /\4   0     FB15_2  79    I/O     I/O
D<4>                  3       0   /\2   0     FB15_3  80    I/O     I/O
spi_comp/ack_rxtx     2       0     0   3     FB15_4        (b)     (b)
spi_comp/stat<3>      3       0     0   2     FB15_5        (b)     (b)
spi_comp/stat<2>      3       0     0   2     FB15_6        (b)     (b)
spi_comp/stat<1>      3       0     0   2     FB15_7        (b)     (b)
D<3>                  4       0     0   1     FB15_8  81    I/O     I/O
spi_comp/ack_txd      3       0     0   2     FB15_9        (b)     (b)
D<2>                  4       0     0   1     FB15_10 82    I/O     I/O
D<1>                  4       0   \/1   0     FB15_11 83    I/O     I/O
D<0>                  4       1<- \/2   0     FB15_12 85    I/O     I/O
spi_comp/N01/spi_comp/N01_D2
                      3       2<- \/4   0     FB15_13       (b)     (b)
spi_comp/run_tx       6       4<- \/3   0     FB15_14 86    I/O     I
spi_outx              9       4<-   0   0     FB15_15 87    I/O     I
spi_comp/sr<6>        9       5<- /\1   0     FB15_16       (b)     (b)
spi_comp/stat_or0000/spi_comp/stat_or0000_D2
                      2       2<- /\5   0     FB15_17 88    I/O     I
ipl_state_d           3       0   /\2   0     FB15_18       (b)     (b)

Signals Used by Logic in Function Block
  1: A<0>                        15: rwb                           28: spi_comp/sr<6> 
  2: A<1>                        16: spi_clkx                      29: spi_comp/stat<1> 
  3: D_7_IOBUFE/D_7_IOBUFE_TRST  17: spi_comp/N01/spi_comp/N01_D2  30: spi_comp/stat<2> 
  4: D_and0000/D_and0000_D2      18: spi_comp/run_rx_d             31: spi_comp/stat<3> 
  5: VD<5>.PIN                   19: spi_comp/run_tx               32: spi_comp/stat_or0000/spi_comp/stat_or0000_D2 
  6: VD<4>.PIN                   20: spi_comp/run_tx_d             33: spi_comp/txd<5> 
  7: VD<3>.PIN                   21: spi_comp/run_txd              34: spi_comp/txd<6> 
  8: VD<2>.PIN                   22: spi_comp/sr<0>                35: spi_comp/txd<7> 
  9: VD<1>.PIN                   23: spi_comp/sr<1>                36: spi_cs/spi_cs_D2 
 10: VD<0>.PIN                   24: spi_comp/sr<2>                37: spi_outx 
 11: SFDecomp_66                 25: spi_comp/sr<3>                38: spi_sel<0> 
 12: ipl_state                   26: spi_comp/sr<4>                39: spi_sel<2> 
 13: memclk                      27: spi_comp/sr<5>                40: spi_sel<3> 
 14: reset                      

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
spi_comp/sr<5>       ...........XXX.X.X.XX....XX.....X................. 10
D<5>                 ..XXX...........X.........X....................... 5
D<4>                 ..XX.X..........X........X........................ 5
spi_comp/ack_rxtx    ............X..X............XXX................... 5
spi_comp/stat<3>     ............XX.X............XX.X.................. 6
spi_comp/stat<2>     ............XX.X............X..X.................. 5
spi_comp/stat<1>     ............XX.X...............X.................. 4
D<3>                 XXXX..X....X..X.X.......X..........X...X.......... 11
spi_comp/ack_txd     ............XX...X.XX............................. 5
D<2>                 XXXX...X...X..X.X......X...........X..X........... 11
D<1>                 XXXX....X.XX..X.X.....X............X.............. 11
D<0>                 XXXX.....X.X..X.X....X.............X.X............ 11
spi_comp/N01/spi_comp/N01_D2 
                     XX.........X..X....................X.............. 5
spi_comp/run_tx      ...........XXX.X.XXXX.......XXX................... 11
spi_outx             ...........XXX.X.X.XX......X......X.X............. 10
spi_comp/sr<6>       ...........XXX.X.X.XX.....XX.....X................ 10
spi_comp/stat_or0000/spi_comp/stat_or0000_D2 
                     ...........X.....X.XX............................. 4
ipl_state_d          ...........XXX.................................... 3
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB16 ***********************************
Number of function block inputs used/remaining:               15/39
Number of signals used by logic mapping into function block:  15
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
viccy/dot2clk_d       1       0     0   4     FB16_1        (b)     (b)
spi_comp/run_txd/spi_comp/run_txd_RSTF
                      1       0     0   4     FB16_2  91    I/O     I
spi_comp/run_rx/spi_comp/run_rx_RSTF
                      1       0     0   4     FB16_3  92    I/O     I
reset                 1       0     0   4     FB16_4        (b)     (b)
is_char_out           1       0     0   4     FB16_5  93    I/O     I
sr_load               2       0     0   3     FB16_6  94    I/O     I
spi_comp/run_tx_d     2       0     0   3     FB16_7        (b)     (b)
spi_comp/run_rx_d     2       0     0   3     FB16_8  95    I/O     I
slotclk               2       0     0   3     FB16_9        (b)     (b)
memclk_d              2       0     0   3     FB16_10 96    I/O     I
dot2clk               2       0     0   3     FB16_11 97    I/O     I
clocky/cpu_cnt1<0>    2       0     0   3     FB16_12 98    I/O     I
clocky/clk_cnt_0_3    2       0     0   3     FB16_13       (b)     (b)
clocky/clk_cnt_0_2    2       0     0   3     FB16_14       (b)     (b)
clocky/clk_cnt_0_1    2       0     0   3     FB16_15       (b)     (b)
spi_clkx              3       0     0   2     FB16_16       (b)     (b)
pxl_window            3       0     0   2     FB16_17       (b)     (b)
chr_window            4       0     0   1     FB16_18       (b)     (b)

Signals Used by Logic in Function Block
  1: clocky/clk_cnt_0_0   6: dot2clk            11: spi_comp/ack_txd 
  2: clocky/clk_cnt_0_1   7: memclk             12: spi_comp/run_rx 
  3: clocky/clk_cnt_0_2   8: nres               13: spi_comp/run_tx 
  4: clocky/clk_cnt_0_3   9: reset              14: spi_comp/stat_or0000/spi_comp/stat_or0000_D2 
  5: clocky/memclk_int   10: spi_comp/ack_rxtx  15: viccy/chr_fetch 

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
viccy/dot2clk_d      .....X.................................. 1
spi_comp/run_txd/spi_comp/run_txd_RSTF 
                     ........X.X............................. 2
spi_comp/run_rx/spi_comp/run_rx_RSTF 
                     ........XX.............................. 2
reset                .......X................................ 1
is_char_out          ..............X......................... 1
sr_load              XXXX....X............................... 5
spi_comp/run_tx_d    ......X.....X........................... 2
spi_comp/run_rx_d    ......X....X............................ 2
slotclk              ...X....X............................... 2
memclk_d             ......X.X............................... 2
dot2clk              .X......X............................... 2
clocky/cpu_cnt1<0>   ....X...X............................... 2
clocky/clk_cnt_0_3   XXX.....X............................... 4
clocky/clk_cnt_0_2   XX......X............................... 3
clocky/clk_cnt_0_1   X.......X............................... 2
spi_clkx             ......X.X....X.......................... 3
pxl_window           .XXX....X............................... 4
chr_window           XXXX....X............................... 5
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*******************************  Equations  ********************************

********** Mapped Logic **********


$OpTx$FX_DC$2549698 <= (NOT vpa AND NOT vda);


$OpTx$FX_DC$2549756 <= (NOT rwb AND A(0) AND A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND 
	NOT viccy/crtc_reg(0) AND NOT viccy/crtc_reg(1) AND viccy/crtc_reg(3) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688);


$OpTx$FX_SC$2549761 <= (A(15) AND A(14));


$OpTx$INV$2549688 <= ((NOT mappy/cfg_mp(7))
	OR (mappy/cfg_mp(6) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2)
	OR (A(15) AND NOT A(14) AND NOT A(13) AND NOT A(12) AND 
	mappy/cfg_mp(5)));


$OpTx$INV$2549694 <= ((mappy/cfg_mp(7))
	OR (A(15) AND A(14) AND wp_romPET)
	OR (A(15) AND NOT A(14) AND A(13) AND A(12) AND wp_romB)
	OR (A(15) AND NOT A(14) AND A(13) AND NOT A(12) AND wp_romA)
	OR (A(15) AND NOT A(14) AND NOT A(13) AND A(12) AND wp_rom9));


D_I(0) <= ((NOT ipl_state AND spi_sel(0) AND rwb AND NOT A(0) AND NOT A(1) AND 
	spi_cs/spi_cs_D2 AND NOT D_and0000/D_and0000_D2)
	OR (VD(0).PIN AND D_and0000/D_and0000_D2)
	OR (spi_comp/sr(0) AND NOT D_and0000/D_and0000_D2 AND 
	spi_comp/N01/spi_comp/N01_D2));
D(0) <= D_I(0) when D_OE(0) = '1' else 'Z';
D_OE(0) <= NOT D_7_IOBUFE/D_7_IOBUFE_TRST;


D_I(1) <= ((VD(1).PIN AND D_and0000/D_and0000_D2)
	OR (spi_comp/sr(1) AND NOT D_and0000/D_and0000_D2 AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND rwb AND NOT A(0) AND NOT A(1) AND SFDecomp_66 AND 
	spi_cs/spi_cs_D2 AND NOT D_and0000/D_and0000_D2));
D(1) <= D_I(1) when D_OE(1) = '1' else 'Z';
D_OE(1) <= NOT D_7_IOBUFE/D_7_IOBUFE_TRST;


D_I(2) <= ((VD(2).PIN AND D_and0000/D_and0000_D2)
	OR (spi_comp/sr(2) AND NOT D_and0000/D_and0000_D2 AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND rwb AND NOT A(0) AND NOT A(1) AND spi_sel(2) AND 
	spi_cs/spi_cs_D2 AND NOT D_and0000/D_and0000_D2));
D(2) <= D_I(2) when D_OE(2) = '1' else 'Z';
D_OE(2) <= NOT D_7_IOBUFE/D_7_IOBUFE_TRST;


D_I(3) <= ((VD(3).PIN AND D_and0000/D_and0000_D2)
	OR (spi_comp/sr(3) AND NOT D_and0000/D_and0000_D2 AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND rwb AND NOT A(0) AND NOT A(1) AND spi_sel(3) AND 
	spi_cs/spi_cs_D2 AND NOT D_and0000/D_and0000_D2));
D(3) <= D_I(3) when D_OE(3) = '1' else 'Z';
D_OE(3) <= NOT D_7_IOBUFE/D_7_IOBUFE_TRST;


D_I(4) <= ((VD(4).PIN AND D_and0000/D_and0000_D2)
	OR (spi_comp/sr(4) AND NOT D_and0000/D_and0000_D2 AND 
	spi_comp/N01/spi_comp/N01_D2));
D(4) <= D_I(4) when D_OE(4) = '1' else 'Z';
D_OE(4) <= NOT D_7_IOBUFE/D_7_IOBUFE_TRST;


D_I(5) <= ((VD(5).PIN AND D_and0000/D_and0000_D2)
	OR (spi_comp/sr(5) AND NOT D_and0000/D_and0000_D2 AND 
	spi_comp/N01/spi_comp/N01_D2));
D(5) <= D_I(5) when D_OE(5) = '1' else 'Z';
D_OE(5) <= NOT D_7_IOBUFE/D_7_IOBUFE_TRST;


D_I(6) <= ((VD(6).PIN AND D_and0000/D_and0000_D2)
	OR (spi_comp/sr(6) AND NOT D_and0000/D_and0000_D2 AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND rwb AND NOT A(0) AND NOT A(1) AND 
	spi_comp/run_txd AND spi_cs/spi_cs_D2 AND NOT D_and0000/D_and0000_D2));
D(6) <= D_I(6) when D_OE(6) = '1' else 'Z';
D_OE(6) <= NOT D_7_IOBUFE/D_7_IOBUFE_TRST;


D_I(7) <= ((VD(7).PIN AND D_and0000/D_and0000_D2)
	OR (spi_outx AND NOT D_and0000/D_and0000_D2 AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND rwb AND NOT A(0) AND NOT A(1) AND 
	spi_comp/run_tx AND spi_cs/spi_cs_D2 AND NOT D_and0000/D_and0000_D2)
	OR (NOT ipl_state AND rwb AND NOT A(0) AND NOT A(1) AND 
	spi_comp/run_rx AND spi_cs/spi_cs_D2 AND NOT D_and0000/D_and0000_D2));
D(7) <= D_I(7) when D_OE(7) = '1' else 'Z';
D_OE(7) <= NOT D_7_IOBUFE/D_7_IOBUFE_TRST;


D_7_IOBUFE/D_7_IOBUFE_TRST <= ((NOT rwb AND NOT D_and0000/D_and0000_D2)
	OR (NOT spi_cs/spi_cs_D2 AND NOT D_and0000/D_and0000_D2));


D_and0000/D_and0000_D2 <= ((rwb AND mappy/bankl(3) AND NOT boot AND phi2 AND 
	NOT is_vid_out AND NOT $OpTx$FX_DC$2549698)
	OR (rwb AND NOT mappy/bankl(3) AND boot AND phi2 AND 
	NOT is_vid_out AND NOT $OpTx$FX_DC$2549698)
	OR (rwb AND A(15) AND NOT A(14) AND NOT A(13) AND NOT A(12) AND 
	screenb0 AND phi2 AND NOT is_vid_out AND 
	mappy/SFDecomp_16/mappy/SFDecomp_16_D2 AND NOT $OpTx$FX_DC$2549698));














FA(15) <= NOT (((NOT A(15) AND NOT lowbank(0))
	OR (NOT A(15) AND NOT mappy/SFDecomp_16/mappy/SFDecomp_16_D2)
	OR (A(15) AND A(14) AND NOT mappy/cfg_mp(3) AND 
	mappy/SFDecomp_16/mappy/SFDecomp_16_D2 AND NOT $OpTx$INV$2549688)
	OR (A(15) AND NOT A(14) AND NOT mappy/cfg_mp(2) AND 
	mappy/SFDecomp_16/mappy/SFDecomp_16_D2 AND NOT $OpTx$INV$2549688)));


FA(16) <= ((mappy/bankl(0))
	OR (A(15) AND mappy/SFDecomp_16/mappy/SFDecomp_16_D2 AND 
	NOT $OpTx$INV$2549688)
	OR (NOT A(15) AND lowbank(1) AND 
	mappy/SFDecomp_16/mappy/SFDecomp_16_D2));


FA(17) <= ((A(15) AND mappy/bankl(1))
	OR (mappy/bankl(1) AND 
	NOT mappy/SFDecomp_16/mappy/SFDecomp_16_D2)
	OR (NOT A(15) AND lowbank(2) AND 
	mappy/SFDecomp_16/mappy/SFDecomp_16_D2));


FA(18) <= ((A(15) AND mappy/bankl(2))
	OR (mappy/bankl(2) AND 
	NOT mappy/SFDecomp_16/mappy/SFDecomp_16_D2)
	OR (NOT A(15) AND lowbank(3) AND 
	mappy/SFDecomp_16/mappy/SFDecomp_16_D2));

FDCPE_SFDecomp_66: FDCPE port map (SFDecomp_66,D(1).PIN,SFDecomp_66_C,reset,'0',SFDecomp_66_CE);
SFDecomp_66_C <= NOT ((NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND A(3) AND NOT A(2) AND 
	phi2 AND mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND 
	NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));
SFDecomp_66_CE <= (NOT rwb AND NOT A(0) AND NOT A(1));


SFDecomp_66/SFDecomp_66_CE <= (NOT rwb AND NOT A(0) AND NOT A(1));


VA(0) <= NOT (((NOT viccy/vid_addr(0) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (vis_hires_in AND NOT viccy/vid_addr(0) AND NOT ipl AND 
	is_vid_out AND viccy/pxl_fetch)
	OR (NOT vis_hires_in AND NOT viccy/cline_cnt(0) AND NOT ipl AND 
	is_vid_out AND NOT viccy/chr_fetch AND viccy/pxl_fetch)
	OR (NOT ipl_cnt(4) AND ipl)
	OR (NOT A(0) AND NOT ipl AND NOT is_vid_out)));


VA(1) <= NOT (((NOT viccy/vid_addr(1) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (vis_hires_in AND NOT viccy/vid_addr(1) AND NOT ipl AND 
	is_vid_out AND viccy/pxl_fetch)
	OR (NOT vis_hires_in AND NOT viccy/cline_cnt(1) AND NOT ipl AND 
	is_vid_out AND NOT viccy/chr_fetch AND viccy/pxl_fetch)
	OR (NOT ipl_cnt(5) AND ipl)
	OR (NOT A(1) AND NOT ipl AND NOT is_vid_out)));


VA(2) <= NOT (((NOT vis_hires_in AND NOT viccy/cline_cnt(2) AND NOT ipl AND 
	is_vid_out AND NOT viccy/chr_fetch AND viccy/pxl_fetch)
	OR (NOT ipl_cnt(6) AND ipl)
	OR (NOT A(2) AND NOT ipl AND NOT is_vid_out)
	OR (NOT viccy/vid_addr(2) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (vis_hires_in AND NOT viccy/vid_addr(2) AND NOT ipl AND 
	is_vid_out AND viccy/pxl_fetch)));


VA(3) <= NOT (((NOT A(3) AND NOT ipl AND NOT is_vid_out)
	OR (NOT viccy/vid_addr(3) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (vis_hires_in AND NOT viccy/vid_addr(3) AND NOT ipl AND 
	is_vid_out AND viccy/pxl_fetch)
	OR (NOT vis_hires_in AND NOT viccy/cline_cnt(3) AND NOT ipl AND 
	is_vid_out AND NOT viccy/chr_fetch AND viccy/pxl_fetch)
	OR (NOT ipl_cnt(7) AND ipl)));


VA(4) <= NOT (((NOT A(4) AND NOT ipl AND NOT is_vid_out)
	OR (NOT viccy/vid_addr(4) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (vis_hires_in AND NOT viccy/vid_addr(4) AND NOT ipl AND 
	is_vid_out AND viccy/pxl_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND NOT viccy/charhold(0) AND 
	is_vid_out AND NOT viccy/chr_fetch AND viccy/pxl_fetch)
	OR (NOT ipl_cnt(8) AND ipl)));


VA(5) <= NOT (((NOT ipl_cnt(9) AND ipl)
	OR (NOT A(5) AND NOT ipl AND NOT is_vid_out)
	OR (NOT viccy/vid_addr(5) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (vis_hires_in AND NOT viccy/vid_addr(5) AND NOT ipl AND 
	is_vid_out AND viccy/pxl_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND NOT viccy/charhold(1) AND 
	is_vid_out AND NOT viccy/chr_fetch AND viccy/pxl_fetch)));


VA(6) <= NOT (((NOT ipl_cnt(10) AND ipl)
	OR (NOT A(6) AND NOT ipl AND NOT is_vid_out)
	OR (NOT viccy/vid_addr(6) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (vis_hires_in AND NOT viccy/vid_addr(6) AND NOT ipl AND 
	is_vid_out AND viccy/pxl_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND NOT viccy/charhold(2) AND 
	is_vid_out AND NOT viccy/chr_fetch AND viccy/pxl_fetch)));


VA(7) <= NOT (((NOT ipl_cnt(11) AND ipl)
	OR (NOT A(7) AND NOT ipl AND NOT is_vid_out)
	OR (NOT viccy/vid_addr(7) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (vis_hires_in AND NOT viccy/vid_addr(7) AND NOT ipl AND 
	is_vid_out AND viccy/pxl_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND NOT viccy/charhold(3) AND 
	is_vid_out AND NOT viccy/chr_fetch AND viccy/pxl_fetch)));


VA(8) <= NOT (((NOT ipl AND NOT A(8) AND NOT is_vid_out)
	OR (NOT viccy/vid_addr(8) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (vis_hires_in AND NOT viccy/vid_addr(8) AND NOT ipl AND 
	is_vid_out AND viccy/pxl_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND NOT viccy/charhold(4) AND 
	is_vid_out AND NOT viccy/chr_fetch AND viccy/pxl_fetch)));


VA(9) <= NOT (((NOT ipl AND NOT A(9) AND NOT is_vid_out)
	OR (NOT viccy/vid_addr(9) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (vis_hires_in AND NOT viccy/vid_addr(9) AND NOT ipl AND 
	is_vid_out AND viccy/pxl_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND NOT viccy/charhold(5) AND 
	is_vid_out AND NOT viccy/chr_fetch AND viccy/pxl_fetch)));


VA(10) <= NOT (((VA_2_OBUF.EXP)
	OR (vis_hires_in AND NOT viccy/vid_addr(10) AND NOT ipl AND 
	is_vid_out AND viccy/chr_fetch)
	OR (vis_hires_in AND NOT viccy/vid_addr(10) AND NOT ipl AND 
	is_vid_out AND viccy/pxl_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND NOT viccy/charhold(6) AND 
	is_vid_out AND viccy/pxl_fetch)
	OR (NOT viccy/vid_addr(10) AND NOT ipl AND viccy/is_80 AND 
	is_vid_out AND viccy/chr_fetch AND NOT viccy/pxl_fetch)
	OR (NOT viccy/vid_addr(10) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch AND NOT viccy/pxl_fetch AND graphic)
	OR (NOT ipl AND NOT A(10) AND NOT is_vid_out)));


VA(11) <= NOT (((NOT vis_hires_in AND NOT viccy/vpage(3) AND NOT ipl AND 
	is_vid_out AND viccy/chr_fetch AND NOT viccy/pxl_fetch AND NOT graphic)
	OR (NOT vis_hires_in AND NOT viccy/vpage(3) AND NOT ipl AND 
	NOT viccy/is_80 AND is_vid_out AND viccy/chr_fetch AND NOT viccy/pxl_fetch)
	OR (NOT A(11) AND NOT ipl AND NOT is_vid_out)
	OR (vis_hires_in AND NOT viccy/vid_addr(11) AND NOT ipl AND 
	is_vid_out AND viccy/chr_fetch)
	OR (vis_hires_in AND NOT viccy/vid_addr(11) AND NOT ipl AND 
	is_vid_out AND viccy/pxl_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND NOT viccy/charhold(7) AND 
	is_vid_out AND viccy/pxl_fetch)
	OR (NOT viccy/vid_addr(11) AND NOT ipl AND viccy/is_80 AND 
	is_vid_out AND viccy/chr_fetch AND NOT viccy/pxl_fetch AND graphic)));


VA(12) <= NOT (((NOT A(12) AND NOT ipl AND NOT is_vid_out)
	OR (vis_hires_in AND NOT viccy/vid_addr(12) AND NOT ipl AND 
	is_vid_out AND viccy/chr_fetch)
	OR (vis_hires_in AND NOT viccy/vid_addr(12) AND NOT ipl AND 
	is_vid_out AND viccy/pxl_fetch)
	OR (NOT vis_hires_in AND NOT vis_double_in AND NOT ipl AND is_vid_out AND 
	viccy/pxl_fetch)
	OR (NOT vis_hires_in AND NOT viccy/vpage(4) AND NOT ipl AND 
	is_vid_out AND viccy/chr_fetch AND NOT viccy/pxl_fetch)));


VA(13) <= ((ipl)
	OR (NOT vis_hires_in AND viccy/vpage(5) AND is_vid_out AND 
	viccy/pxl_fetch)
	OR (A(13) AND NOT is_vid_out)
	OR (is_vid_out AND NOT viccy/chr_fetch AND NOT viccy/pxl_fetch)
	OR (vis_hires_in AND viccy/vid_addr(13) AND viccy/is_80 AND 
	is_vid_out)
	OR (vis_hires_in AND viccy/vpage(5) AND NOT viccy/is_80 AND 
	is_vid_out));


VA(14) <= NOT (((NOT A(14) AND NOT ipl AND NOT is_vid_out)
	OR (NOT viccy/vpage(6) AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch)
	OR (NOT viccy/vpage(6) AND NOT ipl AND is_vid_out AND 
	viccy/pxl_fetch)
	OR (NOT vis_hires_in AND NOT ipl AND is_vid_out AND 
	viccy/chr_fetch AND NOT viccy/pxl_fetch)));


VA(15) <= NOT (((A(15) AND A(14) AND NOT mappy/cfg_mp(3) AND NOT ipl AND 
	NOT is_vid_out AND mappy/SFDecomp_16/mappy/SFDecomp_16_D2 AND 
	NOT $OpTx$INV$2549688)
	OR (NOT A(15) AND NOT lowbank(0) AND NOT ipl AND NOT is_vid_out)
	OR (NOT A(15) AND NOT ipl AND NOT is_vid_out AND 
	NOT mappy/SFDecomp_16/mappy/SFDecomp_16_D2)
	OR (NOT viccy/vpage(7) AND NOT ipl AND is_vid_out AND 
	viccy/pxl_fetch)
	OR (vis_hires_in AND NOT viccy/vpage(7) AND NOT ipl AND 
	is_vid_out AND viccy/chr_fetch)
	OR (A(15) AND NOT A(14) AND NOT mappy/cfg_mp(2) AND NOT ipl AND 
	NOT is_vid_out AND mappy/SFDecomp_16/mappy/SFDecomp_16_D2 AND 
	NOT $OpTx$INV$2549688)));


VA(16) <= ((NOT screenb0 AND NOT ipl AND is_vid_out)
	OR (mappy/bankl(0) AND NOT ipl AND NOT is_vid_out)
	OR (NOT ipl AND is_vid_out AND NOT is_char_out)
	OR (A(15) AND NOT ipl AND NOT is_vid_out AND 
	mappy/SFDecomp_16/mappy/SFDecomp_16_D2 AND NOT $OpTx$INV$2549688)
	OR (NOT A(15) AND lowbank(1) AND NOT ipl AND NOT is_vid_out AND 
	mappy/SFDecomp_16/mappy/SFDecomp_16_D2));


VA(17) <= ((NOT screenb0 AND NOT ipl AND is_vid_out)
	OR (NOT ipl AND is_vid_out AND NOT is_char_out)
	OR (A(15) AND mappy/bankl(1) AND NOT ipl AND NOT is_vid_out)
	OR (mappy/bankl(1) AND NOT ipl AND NOT is_vid_out AND 
	NOT mappy/SFDecomp_16/mappy/SFDecomp_16_D2)
	OR (NOT A(15) AND lowbank(2) AND NOT ipl AND NOT is_vid_out AND 
	mappy/SFDecomp_16/mappy/SFDecomp_16_D2));


VA(18) <= ((NOT screenb0 AND NOT ipl AND is_vid_out)
	OR (NOT ipl AND is_vid_out AND NOT is_char_out)
	OR (A(15) AND mappy/bankl(2) AND NOT ipl AND NOT is_vid_out)
	OR (mappy/bankl(2) AND NOT ipl AND NOT is_vid_out AND 
	NOT mappy/SFDecomp_16/mappy/SFDecomp_16_D2)
	OR (NOT A(15) AND lowbank(3) AND NOT ipl AND NOT is_vid_out AND 
	mappy/SFDecomp_16/mappy/SFDecomp_16_D2));


VD_I(0) <= ((NOT ipl_state AND spi_sel(0) AND rwb AND NOT A(0) AND NOT A(1) AND 
	ipl AND spi_cs/spi_cs_D2)
	OR (D(0).PIN AND NOT ipl)
	OR (ipl AND spi_comp/sr(0) AND 
	spi_comp/N01/spi_comp/N01_D2));
VD(0) <= VD_I(0) when VD_OE(0) = '1' else 'Z';
VD_OE(0) <= NOT ramrwb;


VD_I(1) <= ((D(1).PIN AND NOT ipl)
	OR (ipl AND spi_comp/sr(1) AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND rwb AND NOT A(0) AND NOT A(1) AND SFDecomp_66 AND 
	ipl AND spi_cs/spi_cs_D2));
VD(1) <= VD_I(1) when VD_OE(1) = '1' else 'Z';
VD_OE(1) <= NOT ramrwb;


VD_I(2) <= ((ipl AND spi_comp/sr(2) AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND rwb AND NOT A(0) AND NOT A(1) AND spi_sel(2) AND 
	ipl AND spi_cs/spi_cs_D2)
	OR (D(2).PIN AND NOT ipl));
VD(2) <= VD_I(2) when VD_OE(2) = '1' else 'Z';
VD_OE(2) <= NOT ramrwb;


VD_I(3) <= ((D(3).PIN AND NOT ipl)
	OR (ipl AND spi_comp/sr(3) AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND rwb AND NOT A(0) AND NOT A(1) AND spi_sel(3) AND 
	ipl AND spi_cs/spi_cs_D2));
VD(3) <= VD_I(3) when VD_OE(3) = '1' else 'Z';
VD_OE(3) <= NOT ramrwb;


VD_I(4) <= ((D(4).PIN AND NOT ipl)
	OR (ipl AND spi_comp/sr(4) AND 
	spi_comp/N01/spi_comp/N01_D2));
VD(4) <= VD_I(4) when VD_OE(4) = '1' else 'Z';
VD_OE(4) <= NOT ramrwb;


VD_I(5) <= ((D(5).PIN AND NOT ipl)
	OR (ipl AND spi_comp/sr(5) AND 
	spi_comp/N01/spi_comp/N01_D2));
VD(5) <= VD_I(5) when VD_OE(5) = '1' else 'Z';
VD_OE(5) <= NOT ramrwb;


VD_I(6) <= ((D(6).PIN AND NOT ipl)
	OR (ipl AND spi_comp/sr(6) AND 
	spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND rwb AND NOT A(0) AND NOT A(1) AND ipl AND 
	spi_comp/run_txd AND spi_cs/spi_cs_D2));
VD(6) <= VD_I(6) when VD_OE(6) = '1' else 'Z';
VD_OE(6) <= NOT ramrwb;


VD_I(7) <= ((NOT ipl_state AND rwb AND NOT A(0) AND NOT A(1) AND 
	spi_comp/run_tx AND ipl AND spi_cs/spi_cs_D2)
	OR (D(7).PIN AND NOT ipl)
	OR (ipl AND spi_outx AND spi_comp/N01/spi_comp/N01_D2)
	OR (NOT ipl_state AND rwb AND NOT A(0) AND NOT A(1) AND ipl AND 
	spi_comp/run_rx AND spi_cs/spi_cs_D2));
VD(7) <= VD_I(7) when VD_OE(7) = '1' else 'Z';
VD_OE(7) <= NOT ramrwb;

FDCPE_boot: FDCPE port map (boot,boot_D,NOT phi2,'0',reset);
boot_D <= ((D(1).PIN AND wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (boot AND NOT wp_romPET_or0000/wp_romPET_or0000_D2));

FDCPE_chr_window: FDCPE port map (chr_window,chr_window_D,NOT q50m,reset,'0');
chr_window_D <= ((clocky/clk_cnt_0_1 AND clocky/clk_cnt_0_2 AND 
	NOT clocky/clk_cnt_0_3)
	OR (NOT clocky/clk_cnt_0_1 AND NOT clocky/clk_cnt_0_2 AND 
	clocky/clk_cnt_0_3)
	OR (clocky/clk_cnt_0_2 AND NOT clocky/clk_cnt_0_3 AND 
	clocky/clk_cnt_0_0));

FDCPE_clk1m: FDCPE port map (clk1m,clk1m_D,q50m,reset,'0');
clk1m_D <= (NOT clocky/cpu_cnt1(0) AND NOT clocky/cpu_cnt1(1) AND 
	NOT clocky/cpu_cnt1(2) AND NOT clocky/cpu_cnt1(3));

FDCPE_clk2m: FDCPE port map (clk2m,clk2m_D,q50m,reset,'0');
clk2m_D <= (NOT clocky/cpu_cnt1(0) AND NOT clocky/cpu_cnt1(1) AND 
	NOT clocky/cpu_cnt1(3));

FDCPE_clk4m: FDCPE port map (clk4m,clk4m_D,q50m,reset,'0');
clk4m_D <= ((NOT clocky/cpu_cnt1(0) AND NOT clocky/cpu_cnt1(1) AND 
	NOT clocky/cpu_cnt1(2))
	OR (NOT clocky/cpu_cnt1(0) AND NOT clocky/cpu_cnt1(2) AND 
	NOT clocky/cpu_cnt1(3))
	OR (clocky/cpu_cnt1(0) AND NOT clocky/cpu_cnt1(1) AND 
	clocky/cpu_cnt1(2) AND NOT clocky/cpu_cnt1(3)));

FTCPE_clocky/clk_cnt_0_0: FTCPE port map (clocky/clk_cnt_0_0,'1',q50m,reset,'0');

FTCPE_clocky/clk_cnt_0_1: FTCPE port map (clocky/clk_cnt_0_1,clocky/clk_cnt_0_0,q50m,reset,'0');

FTCPE_clocky/clk_cnt_0_2: FTCPE port map (clocky/clk_cnt_0_2,clocky/clk_cnt_0_2_T,q50m,reset,'0');
clocky/clk_cnt_0_2_T <= (clocky/clk_cnt_0_1 AND clocky/clk_cnt_0_0);

FTCPE_clocky/clk_cnt_0_3: FTCPE port map (clocky/clk_cnt_0_3,clocky/clk_cnt_0_3_T,q50m,reset,'0');
clocky/clk_cnt_0_3_T <= (clocky/clk_cnt_0_1 AND clocky/clk_cnt_0_2 AND 
	clocky/clk_cnt_0_0);

FTCPE_clocky/cpu_cnt10: FTCPE port map (clocky/cpu_cnt1(0),'1',clocky/memclk_int,reset,'0');

FTCPE_clocky/cpu_cnt11: FTCPE port map (clocky/cpu_cnt1(1),clocky/cpu_cnt1_T(1),clocky/memclk_int,reset,'0');
clocky/cpu_cnt1_T(1) <= ((NOT clocky/cpu_cnt1(0))
	OR (NOT clocky/cpu_cnt1(1) AND NOT clocky/cpu_cnt1(2) AND 
	clocky/cpu_cnt1(3)));

FTCPE_clocky/cpu_cnt12: FTCPE port map (clocky/cpu_cnt1(2),clocky/cpu_cnt1_T(2),clocky/memclk_int,reset,'0');
clocky/cpu_cnt1_T(2) <= (clocky/cpu_cnt1(0) AND clocky/cpu_cnt1(1));

FTCPE_clocky/cpu_cnt13: FTCPE port map (clocky/cpu_cnt1(3),clocky/cpu_cnt1_T(3),clocky/memclk_int,reset,'0');
clocky/cpu_cnt1_T(3) <= ((clocky/cpu_cnt1(0) AND clocky/cpu_cnt1(1) AND 
	clocky/cpu_cnt1(2))
	OR (clocky/cpu_cnt1(0) AND NOT clocky/cpu_cnt1(1) AND 
	NOT clocky/cpu_cnt1(2) AND clocky/cpu_cnt1(3)));

FDCPE_clocky/memclk_int: FDCPE port map (clocky/memclk_int,clocky/memclk_int_D,NOT q50m,'0','0',NOT reset);
clocky/memclk_int_D <= ((clocky/clk_cnt_0_1 AND clocky/clk_cnt_0_2 AND 
	NOT clocky/clk_cnt_0_3 AND NOT clocky/clk_cnt_0_0)
	OR (clocky/clk_cnt_0_1 AND NOT clocky/clk_cnt_0_2 AND 
	clocky/clk_cnt_0_3)
	OR (NOT clocky/clk_cnt_0_1 AND NOT clocky/clk_cnt_0_2 AND 
	NOT clocky/clk_cnt_0_3)
	OR (NOT clocky/clk_cnt_0_1 AND NOT clocky/clk_cnt_0_3 AND 
	clocky/clk_cnt_0_0)
	OR (NOT clocky/clk_cnt_0_1 AND clocky/clk_cnt_0_2 AND 
	clocky/clk_cnt_0_3 AND NOT clocky/clk_cnt_0_0));

FDCPE_dclk: FDCPE port map (dclk,clocky/clk_cnt_0_0,NOT q50m,'0','0',NOT reset);

FDCPE_dena: FDCPE port map (dena,dena_D,NOT dclk,'0','0',dena_CE);
dena_D <= (viccy/h_enable AND viccy/v_enable);
dena_CE <= (NOT reset AND viccy/pxl_fetch AND viccy/sr_load_d);

FDCPE_do_cpu: FDCPE port map (do_cpu,do_cpu_D,memclk_d,reset,'0');
do_cpu_D <= ((NOT is_cpu)
	OR (ipl)
	OR (rwb AND A(15) AND NOT A(14) AND NOT A(13) AND NOT A(12) AND 
	screenb0 AND is_vid_out AND 
	mappy/SFDecomp_16/mappy/SFDecomp_16_D2 AND NOT $OpTx$FX_DC$2549698)
	OR (NOT mappy/bankl(3) AND boot AND is_vid_out AND 
	NOT $OpTx$FX_DC$2549698)
	OR (mappy/bankl(3) AND NOT boot AND is_vid_out AND 
	NOT $OpTx$FX_DC$2549698));

FDCPE_dot2clk: FDCPE port map (dot2clk,clocky/clk_cnt_0_1,NOT q50m,'0','0',NOT reset);

FDCPE_hsync: FDCPE port map (hsync,hsync_D,NOT slotclk,'0','0');
hsync_D <= ((viccy/slot_cnt(4) AND NOT viccy/slot_cnt(5) AND 
	viccy/slot_cnt(6) AND viccy/slot_cnt(2) AND NOT viccy/slot_cnt(7) AND 
	NOT viccy/slot_cnt(8) AND NOT viccy/slot_cnt(9))
	OR (viccy/slot_cnt(4) AND NOT viccy/slot_cnt(5) AND 
	viccy/slot_cnt(6) AND viccy/slot_cnt(3) AND NOT viccy/slot_cnt(7) AND 
	NOT viccy/slot_cnt(8) AND NOT viccy/slot_cnt(9))
	OR (NOT viccy/slot_cnt(0) AND NOT viccy/slot_cnt(4) AND 
	viccy/slot_cnt(5) AND viccy/slot_cnt(6) AND NOT viccy/slot_cnt(2) AND 
	NOT viccy/slot_cnt(1) AND NOT viccy/slot_cnt(3) AND NOT viccy/slot_cnt(7) AND 
	NOT viccy/slot_cnt(8) AND NOT viccy/slot_cnt(9)));

FDCPE_ipl: FDCPE port map (ipl,'0',NOT memclk,'0',reset,ipl_CE);
ipl_CE <= (ipl AND ipl_next AND ipl_state_d);

FTCPE_ipl_cnt0: FTCPE port map (ipl_cnt(0),ipl_cnt_T(0),NOT memclk,reset,'0');
ipl_cnt_T(0) <= ((ipl AND NOT ipl_next)
	OR (ipl_cnt(0) AND ipl AND NOT ipl_state_d));

FTCPE_ipl_cnt1: FTCPE port map (ipl_cnt(1),ipl_cnt_T(1),NOT memclk,reset,'0');
ipl_cnt_T(1) <= ((ipl_cnt(0) AND ipl AND NOT ipl_next)
	OR (ipl_cnt(1) AND ipl AND ipl_next AND NOT ipl_state_d));

FTCPE_ipl_cnt2: FTCPE port map (ipl_cnt(2),ipl_cnt_T(2),NOT memclk,reset,'0');
ipl_cnt_T(2) <= ((ipl_cnt(0) AND ipl_cnt(1) AND ipl AND NOT ipl_next)
	OR (ipl_cnt(2) AND ipl AND ipl_next AND NOT ipl_state_d));

FTCPE_ipl_cnt3: FTCPE port map (ipl_cnt(3),ipl_cnt_T(3),NOT memclk,reset,'0');
ipl_cnt_T(3) <= ((ipl_cnt(3) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(0) AND ipl_cnt(1) AND ipl_cnt(2) AND ipl AND 
	NOT ipl_next));

FTCPE_ipl_cnt4: FTCPE port map (ipl_cnt(4),ipl_cnt_T(4),NOT memclk,reset,'0');
ipl_cnt_T(4) <= ((ipl_cnt(4) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(0) AND ipl_cnt(3) AND ipl_cnt(1) AND 
	ipl_cnt(2) AND ipl AND NOT ipl_next));

FTCPE_ipl_cnt5: FTCPE port map (ipl_cnt(5),ipl_cnt_T(5),NOT memclk,reset,'0');
ipl_cnt_T(5) <= ((ipl AND NOT ipl_next AND 
	ipl_cnt_Madd__add0000__and0003/ipl_cnt_Madd__add0000__and0003_D2)
	OR (ipl_cnt(5) AND ipl AND ipl_next AND NOT ipl_state_d));

FTCPE_ipl_cnt6: FTCPE port map (ipl_cnt(6),ipl_cnt_T(6),NOT memclk,reset,'0');
ipl_cnt_T(6) <= ((ipl_cnt(5) AND ipl AND NOT ipl_next AND 
	ipl_cnt_Madd__add0000__and0003/ipl_cnt_Madd__add0000__and0003_D2)
	OR (ipl_cnt(6) AND ipl AND ipl_next AND NOT ipl_state_d));

FTCPE_ipl_cnt7: FTCPE port map (ipl_cnt(7),ipl_cnt_T(7),NOT memclk,reset,'0');
ipl_cnt_T(7) <= ((ipl_cnt(7) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(5) AND ipl_cnt(6) AND ipl AND NOT ipl_next AND 
	ipl_cnt_Madd__add0000__and0003/ipl_cnt_Madd__add0000__and0003_D2));

FTCPE_ipl_cnt8: FTCPE port map (ipl_cnt(8),ipl_cnt_T(8),NOT memclk,reset,'0');
ipl_cnt_T(8) <= ((ipl_cnt(8) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(7) AND ipl_cnt(5) AND ipl_cnt(6) AND ipl AND 
	NOT ipl_next AND 
	ipl_cnt_Madd__add0000__and0003/ipl_cnt_Madd__add0000__and0003_D2));

FTCPE_ipl_cnt9: FTCPE port map (ipl_cnt(9),ipl_cnt_T(9),NOT memclk,reset,'0');
ipl_cnt_T(9) <= ((ipl_cnt(9) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(7) AND ipl_cnt(5) AND ipl_cnt(6) AND 
	ipl_cnt(8) AND ipl AND NOT ipl_next AND 
	ipl_cnt_Madd__add0000__and0003/ipl_cnt_Madd__add0000__and0003_D2));

FTCPE_ipl_cnt10: FTCPE port map (ipl_cnt(10),ipl_cnt_T(10),NOT memclk,reset,'0');
ipl_cnt_T(10) <= ((ipl_cnt(10) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(7) AND ipl_cnt(5) AND ipl_cnt(6) AND 
	ipl_cnt(8) AND ipl_cnt(9) AND ipl AND NOT ipl_next AND 
	ipl_cnt_Madd__add0000__and0003/ipl_cnt_Madd__add0000__and0003_D2));

FTCPE_ipl_cnt11: FTCPE port map (ipl_cnt(11),ipl_cnt_T(11),NOT memclk,reset,'0');
ipl_cnt_T(11) <= ((ipl_cnt(11) AND ipl AND ipl_next AND NOT ipl_state_d)
	OR (ipl_cnt(7) AND ipl_cnt(5) AND ipl_cnt(6) AND 
	ipl_cnt(10) AND ipl_cnt(8) AND ipl_cnt(9) AND ipl AND NOT ipl_next AND 
	ipl_cnt_Madd__add0000__and0003/ipl_cnt_Madd__add0000__and0003_D2));


ipl_cnt_Madd__add0000__and0003/ipl_cnt_Madd__add0000__and0003_D2 <= (ipl_cnt(0) AND ipl_cnt(3) AND ipl_cnt(4) AND 
	ipl_cnt(1) AND ipl_cnt(2));

FDCPE_ipl_next: FDCPE port map (ipl_next,ipl_next_D,memclk,'0','0',NOT reset);
ipl_next_D <= ((ipl_state AND ipl_cnt(0) AND ipl_cnt(7) AND 
	ipl_cnt(3) AND ipl_cnt(4) AND ipl_cnt(5) AND ipl_cnt(6) AND 
	ipl_cnt(10) AND ipl_cnt(11) AND ipl_cnt(1) AND ipl_cnt(2) AND 
	ipl_cnt(8) AND ipl_cnt(9))
	OR (NOT ipl_state AND NOT ipl_cnt(0) AND NOT ipl_cnt(7) AND 
	NOT ipl_cnt(3) AND NOT ipl_cnt(4) AND NOT ipl_cnt(5) AND ipl_cnt(6) AND 
	NOT ipl_cnt(10) AND NOT ipl_cnt(11) AND NOT ipl_cnt(1) AND NOT ipl_cnt(2) AND 
	NOT ipl_cnt(8) AND NOT ipl_cnt(9)));

FDCPE_ipl_out: FDCPE port map (ipl_out,ipl_out_D,NOT memclk,reset,'0',ipl);
ipl_out_D <= ((ipl_cnt(0) AND NOT ipl_cnt(7) AND ipl_cnt(3) AND 
	NOT ipl_cnt(4) AND NOT ipl_cnt(5) AND NOT ipl_cnt(6) AND NOT ipl_cnt(10) AND 
	NOT ipl_cnt(11) AND ipl_cnt(1) AND NOT ipl_cnt(2) AND NOT ipl_cnt(8) AND 
	NOT ipl_cnt(9) AND NOT ipl_state_d)
	OR (NOT ipl_cnt(0) AND NOT ipl_cnt(7) AND ipl_cnt(3) AND 
	NOT ipl_cnt(4) AND NOT ipl_cnt(5) AND NOT ipl_cnt(6) AND NOT ipl_cnt(10) AND 
	NOT ipl_cnt(11) AND ipl_cnt(2) AND NOT ipl_cnt(8) AND NOT ipl_cnt(9) AND 
	NOT ipl_state_d)
	OR (NOT ipl_cnt(7) AND ipl_cnt(3) AND NOT ipl_cnt(4) AND 
	NOT ipl_cnt(5) AND NOT ipl_cnt(6) AND NOT ipl_cnt(10) AND NOT ipl_cnt(11) AND 
	NOT ipl_cnt(1) AND ipl_cnt(2) AND NOT ipl_cnt(8) AND NOT ipl_cnt(9) AND 
	NOT ipl_state_d));

FDCPE_ipl_state: FDCPE port map (ipl_state,NOT ipl_state_d,NOT memclk,reset,'0',ipl_state_CE);
ipl_state_CE <= (ipl AND ipl_next);

FDCPE_ipl_state_d: FDCPE port map (ipl_state_d,ipl_state,memclk,reset,'0');

FDCPE_is8296: FDCPE port map (is8296,is8296_D,NOT phi2,reset,'0');
is8296_D <= ((D(3).PIN AND wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (is8296 AND NOT wp_romPET_or0000/wp_romPET_or0000_D2));

FDCPE_is_char_out: FDCPE port map (is_char_out,viccy/chr_fetch,q50m,'0','0');

FDCPE_is_cpu: FDCPE port map (is_cpu,is_cpu_D,NOT memclk,reset,is_cpu_PRE);
is_cpu_D <= ((is_cpu AND NOT do_cpu)
	OR (NOT mode(0) AND NOT mode(1) AND clk1m)
	OR (mode(1) AND clk4m)
	OR (mode(0) AND mode(1))
	OR (mode(0) AND clk2m));
is_cpu_PRE <= (mode(0) AND mode(1));

FDCPE_is_vid_out: FDCPE port map (is_vid_out,is_vid_out_D,q50m,'0','0');
is_vid_out_D <= (NOT viccy/chr_fetch AND NOT viccy/pxl_fetch);

FDCPE_lockb0: FDCPE port map (lockb0,lockb0_D,NOT phi2,reset,'0');
lockb0_D <= ((D(0).PIN AND wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (lockb0 AND NOT wp_romPET_or0000/wp_romPET_or0000_D2));

FDCPE_lowbank0: FDCPE port map (lowbank(0),lowbank_D(0),NOT phi2,reset,'0');
lowbank_D(0) <= ((D(0).PIN AND lowbank_or0000/lowbank_or0000_D2)
	OR (lowbank(0) AND NOT lowbank_or0000/lowbank_or0000_D2));

FDCPE_lowbank1: FDCPE port map (lowbank(1),lowbank_D(1),NOT phi2,reset,'0');
lowbank_D(1) <= ((D(1).PIN AND lowbank_or0000/lowbank_or0000_D2)
	OR (lowbank(1) AND NOT lowbank_or0000/lowbank_or0000_D2));

FDCPE_lowbank2: FDCPE port map (lowbank(2),lowbank_D(2),NOT phi2,reset,'0');
lowbank_D(2) <= ((D(2).PIN AND lowbank_or0000/lowbank_or0000_D2)
	OR (lowbank(2) AND NOT lowbank_or0000/lowbank_or0000_D2));

FDCPE_lowbank3: FDCPE port map (lowbank(3),lowbank_D(3),NOT phi2,reset,'0');
lowbank_D(3) <= ((D(3).PIN AND lowbank_or0000/lowbank_or0000_D2)
	OR (lowbank(3) AND NOT lowbank_or0000/lowbank_or0000_D2));


lowbank_or0000/lowbank_or0000_D2 <= (NOT rwb AND NOT A(0) AND A(1) AND NOT A(7) AND NOT A(6) AND NOT A(5) AND 
	NOT A(4) AND NOT A(3) AND NOT A(2) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688);


mappy/SFDecomp_16/mappy/SFDecomp_16_D2 <= (NOT mappy/bankl(0) AND NOT mappy/bankl(1) AND NOT mappy/bankl(2) AND 
	NOT mappy/bankl(3) AND NOT mappy/bankl(4) AND NOT mappy/bankl(5) AND NOT mappy/bankl(6) AND 
	NOT mappy/bankl(7));


mappy/SFDecomp_831/mappy/SFDecomp_831_D2 <= (A(13) AND NOT A(12) AND A(11) AND NOT A(9) AND NOT A(8) AND NOT A(10) AND 
	mappy/SFDecomp_16/mappy/SFDecomp_16_D2 AND $OpTx$FX_SC$2549761);

FDCPE_mappy/bankl0: FDCPE port map (mappy/bankl(0),mappy/bankl_D(0),q50m,reset,'0',NOT phi2);
mappy/bankl_D(0) <= ((D(0).PIN AND NOT lockb0)
	OR (D(0).PIN AND NOT e));

FDCPE_mappy/bankl1: FDCPE port map (mappy/bankl(1),mappy/bankl_D(1),q50m,reset,'0',NOT phi2);
mappy/bankl_D(1) <= ((D(1).PIN AND NOT lockb0)
	OR (D(1).PIN AND NOT e));

FDCPE_mappy/bankl2: FDCPE port map (mappy/bankl(2),mappy/bankl_D(2),q50m,reset,'0',NOT phi2);
mappy/bankl_D(2) <= ((D(2).PIN AND NOT lockb0)
	OR (D(2).PIN AND NOT e));

FDCPE_mappy/bankl3: FDCPE port map (mappy/bankl(3),mappy/bankl_D(3),q50m,reset,'0',NOT phi2);
mappy/bankl_D(3) <= ((D(3).PIN AND NOT lockb0)
	OR (D(3).PIN AND NOT e));

FDCPE_mappy/bankl4: FDCPE port map (mappy/bankl(4),mappy/bankl_D(4),q50m,reset,'0',NOT phi2);
mappy/bankl_D(4) <= ((NOT lockb0 AND D(4).PIN)
	OR (D(4).PIN AND NOT e));

FDCPE_mappy/bankl5: FDCPE port map (mappy/bankl(5),mappy/bankl_D(5),q50m,reset,'0',NOT phi2);
mappy/bankl_D(5) <= ((D(5).PIN AND NOT lockb0)
	OR (D(5).PIN AND NOT e));

FDCPE_mappy/bankl6: FDCPE port map (mappy/bankl(6),mappy/bankl_D(6),q50m,reset,'0',NOT phi2);
mappy/bankl_D(6) <= ((D(6).PIN AND NOT lockb0)
	OR (D(6).PIN AND NOT e));

FDCPE_mappy/bankl7: FDCPE port map (mappy/bankl(7),mappy/bankl_D(7),q50m,reset,'0',NOT phi2);
mappy/bankl_D(7) <= ((D(7).PIN AND NOT lockb0)
	OR (D(7).PIN AND NOT e));

FDCPE_mappy/cfg_mp0: FDCPE port map (mappy/cfg_mp(0),mappy/cfg_mp_D(0),NOT phi2,reset,'0');
mappy/cfg_mp_D(0) <= ((D(0).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(0) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));

FDCPE_mappy/cfg_mp1: FDCPE port map (mappy/cfg_mp(1),mappy/cfg_mp_D(1),NOT phi2,reset,'0');
mappy/cfg_mp_D(1) <= ((D(1).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(1) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));

FDCPE_mappy/cfg_mp2: FDCPE port map (mappy/cfg_mp(2),mappy/cfg_mp_D(2),NOT phi2,reset,'0');
mappy/cfg_mp_D(2) <= ((D(2).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(2) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));

FDCPE_mappy/cfg_mp3: FDCPE port map (mappy/cfg_mp(3),mappy/cfg_mp_D(3),NOT phi2,reset,'0');
mappy/cfg_mp_D(3) <= ((D(3).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(3) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));

FDCPE_mappy/cfg_mp5: FDCPE port map (mappy/cfg_mp(5),mappy/cfg_mp_D(5),NOT phi2,reset,'0');
mappy/cfg_mp_D(5) <= ((D(5).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(5) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));

FDCPE_mappy/cfg_mp6: FDCPE port map (mappy/cfg_mp(6),mappy/cfg_mp_D(6),NOT phi2,reset,'0');
mappy/cfg_mp_D(6) <= ((D(6).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(6) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));

FDCPE_mappy/cfg_mp7: FDCPE port map (mappy/cfg_mp(7),mappy/cfg_mp_D(7),NOT phi2,reset,'0');
mappy/cfg_mp_D(7) <= ((D(7).PIN AND 
	mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2)
	OR (mappy/cfg_mp(7) AND 
	NOT mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2));


mappy/cfg_mp_and0000/mappy/cfg_mp_and0000_D2 <= (A(7) AND A(6) AND A(5) AND A(4) AND A(13) AND A(12) AND 
	is8296 AND NOT A(3) AND NOT A(2) AND A(11) AND A(9) AND A(8) AND A(10) AND 
	mappy/SFDecomp_16/mappy/SFDecomp_16_D2 AND $OpTx$FX_SC$2549761 AND NOT $OpTx$FX_DC$2549698 AND 
	SFDecomp_66/SFDecomp_66_CE);

FDCPE_memclk: FDCPE port map (memclk,clocky/memclk_int,NOT q50m,reset,'0');

FDCPE_memclk_d: FDCPE port map (memclk_d,memclk,NOT q50m,reset,'0');

FDCPE_mode0: FDCPE port map (mode(0),mode_D(0),NOT phi2,reset,'0');
mode_D(0) <= ((D(0).PIN AND mode_or0000/mode_or0000_D2)
	OR (mode(0) AND NOT mode_or0000/mode_or0000_D2));

FDCPE_mode1: FDCPE port map (mode(1),mode_D(1),NOT phi2,reset,'0');
mode_D(1) <= ((D(1).PIN AND mode_or0000/mode_or0000_D2)
	OR (mode(1) AND NOT mode_or0000/mode_or0000_D2));


mode_or0000/mode_or0000_D2 <= (NOT rwb AND A(0) AND A(1) AND NOT A(7) AND NOT A(6) AND NOT A(5) AND 
	NOT A(4) AND NOT A(3) AND NOT A(2) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688);


nflash <= ((reset)
	OR (NOT spi_sel(0) AND NOT ipl));


nframsel <= NOT (((NOT memclk)
	OR ($OpTx$FX_DC$2549698)
	OR (NOT mappy/cfg_mp(7) AND A(15) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND mappy/SFDecomp_16/mappy/SFDecomp_16_D2)
	OR (NOT rwb AND NOT mappy/cfg_mp(7) AND A(15) AND 
	mappy/SFDecomp_16/mappy/SFDecomp_16_D2 AND $OpTx$INV$2549694)
	OR (NOT rwb AND A(15) AND A(14) AND mappy/cfg_mp(1) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND mappy/SFDecomp_16/mappy/SFDecomp_16_D2)
	OR (NOT rwb AND A(15) AND NOT A(14) AND mappy/cfg_mp(0) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND mappy/SFDecomp_16/mappy/SFDecomp_16_D2)
	OR (NOT rwb AND A(15) AND NOT A(14) AND mappy/cfg_mp(0) AND 
	mappy/SFDecomp_16/mappy/SFDecomp_16_D2 AND $OpTx$INV$2549694)
	OR (NOT rwb AND A(15) AND A(14) AND mappy/cfg_mp(1) AND 
	mappy/SFDecomp_16/mappy/SFDecomp_16_D2 AND $OpTx$INV$2549694)
	OR (mappy/bankl(3) AND NOT boot)
	OR (NOT mappy/bankl(3) AND boot)
	OR (A(15) AND mappy/cfg_mp(6) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND mappy/SFDecomp_16/mappy/SFDecomp_16_D2)));


nsel1 <= NOT ((NOT A(7) AND NOT A(6) AND NOT A(5) AND A(4) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));


nsel2 <= NOT ((NOT A(7) AND NOT A(6) AND A(5) AND NOT A(4) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));


nsel4 <= NOT ((NOT A(7) AND A(6) AND NOT A(5) AND NOT A(4) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));


nvramsel <= NOT (((ipl AND memclk)
	OR (memclk AND is_vid_out)
	OR (mappy/bankl(3) AND NOT boot AND memclk AND NOT wait_int_d AND 
	NOT $OpTx$FX_DC$2549698)
	OR (NOT mappy/bankl(3) AND boot AND memclk AND NOT wait_int_d AND 
	NOT $OpTx$FX_DC$2549698)
	OR (rwb AND A(15) AND NOT A(14) AND NOT A(13) AND NOT A(12) AND 
	screenb0 AND memclk AND NOT wait_int_d AND 
	mappy/SFDecomp_16/mappy/SFDecomp_16_D2 AND NOT $OpTx$FX_DC$2549698)));

FDCPE_pet_vsync: FDCPE port map (pet_vsync,pet_vsync_D,NOT hsync,'0','0',NOT reset);
pet_vsync_D <= ((NOT viccy/is_10rows AND NOT viccy/is_9rows AND 
	NOT viccy/rline_cnt(4) AND NOT viccy/rline_cnt(5) AND viccy/rline_cnt(1) AND 
	NOT viccy/rline_cnt(2) AND NOT viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (viccy/is_9rows AND viccy/rline_cnt(4) AND 
	NOT viccy/rline_cnt(0) AND NOT viccy/rline_cnt(5) AND NOT viccy/rline_cnt(1) AND 
	viccy/rline_cnt(2) AND NOT viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (viccy/is_10rows AND viccy/rline_cnt(4) AND 
	viccy/rline_cnt(0) AND NOT viccy/rline_cnt(5) AND viccy/rline_cnt(1) AND 
	NOT viccy/rline_cnt(2) AND NOT viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (viccy/is_10rows AND viccy/rline_cnt(4) AND 
	NOT viccy/rline_cnt(0) AND NOT viccy/rline_cnt(5) AND NOT viccy/rline_cnt(1) AND 
	viccy/rline_cnt(2) AND NOT viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (viccy/is_9rows AND viccy/rline_cnt(4) AND 
	viccy/rline_cnt(0) AND NOT viccy/rline_cnt(5) AND viccy/rline_cnt(1) AND 
	NOT viccy/rline_cnt(2) AND NOT viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9)));


phi2_I <= NOT ((NOT memclk AND do_cpu));
phi2 <= phi2_I when phi2_OE = '1' else 'Z';
phi2_OE <= NOT ((phi2 AND phi2.PIN));


phi2_io <= NOT (((NOT memclk AND do_cpu)
	OR (mode(0) AND mode(1) AND NOT memclk)));

FDCPE_pxl: FDCPE port map (pxl,pxl_D,NOT dclk,reset,'0');
pxl_D <= (viccy/pxlhold(7) AND dena);

FDCPE_pxl_window: FDCPE port map (pxl_window,pxl_window_D,NOT q50m,reset,'0');
pxl_window_D <= ((clocky/clk_cnt_0_1 AND clocky/clk_cnt_0_3)
	OR (clocky/clk_cnt_0_2 AND clocky/clk_cnt_0_3));


ramrwb <= NOT (((ipl)
	OR (NOT rwb AND mappy/bankl(3) AND NOT boot AND memclk AND 
	NOT is_vid_out AND NOT $OpTx$FX_DC$2549698)
	OR (NOT rwb AND NOT mappy/bankl(3) AND boot AND memclk AND 
	NOT is_vid_out AND NOT $OpTx$FX_DC$2549698)));

FDCPE_reset: FDCPE port map (reset,NOT nres,q50m,'0','0');

FDCPE_screenb0: FDCPE port map (screenb0,screenb0_D,NOT phi2,'0',reset);
screenb0_D <= ((NOT D(2).PIN AND 
	vis_hires_in_or0000/vis_hires_in_or0000_D2)
	OR (screenb0 AND 
	NOT vis_hires_in_or0000/vis_hires_in_or0000_D2));

FDCPE_slotclk: FDCPE port map (slotclk,clocky/clk_cnt_0_3,NOT q50m,'0','0',NOT reset);


spi_clk <= ((ipl_state AND spi_clkx)
	OR (spi_clkx AND NOT ipl)
	OR (NOT ipl_state AND ipl_cnt(0) AND ipl));

FTCPE_spi_clkx: FTCPE port map (spi_clkx,spi_comp/stat_or0000/spi_comp/stat_or0000_D2,memclk,reset,'0');


spi_comp/N01/spi_comp/N01_D2 <= ((ipl_state)
	OR (rwb AND A(0) AND NOT A(1) AND spi_cs/spi_cs_D2)
	OR (rwb AND NOT A(0) AND A(1) AND spi_cs/spi_cs_D2));

FDCPE_spi_comp/ack_rxtx: FDCPE port map (spi_comp/ack_rxtx,spi_comp/ack_rxtx_D,NOT memclk,'0','0');
spi_comp/ack_rxtx_D <= (spi_clkx AND spi_comp/stat(1) AND spi_comp/stat(2) AND 
	spi_comp/stat(3));

FDCPE_spi_comp/ack_txd: FDCPE port map (spi_comp/ack_txd,spi_comp/ack_txd_D,memclk,reset,'0');
spi_comp/ack_txd_D <= (spi_comp/run_txd AND NOT spi_comp/run_rx_d AND 
	NOT spi_comp/run_tx_d);

FDCPE_spi_comp/run_rx: FDCPE port map (spi_comp/run_rx,'1',spi_comp/run_rx_C,NOT spi_comp/run_rx/spi_comp/run_rx_RSTF,'0',spi_comp/run_rx_CE);
spi_comp/run_rx_C <= NOT ((NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND A(3) AND NOT A(2) AND 
	phi2 AND mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND 
	NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));
spi_comp/run_rx_CE <= (rwb AND A(0) AND NOT A(1));


spi_comp/run_rx/spi_comp/run_rx_RSTF <= (NOT reset AND NOT spi_comp/ack_rxtx);

FDCPE_spi_comp/run_rx_d: FDCPE port map (spi_comp/run_rx_d,spi_comp/run_rx,NOT memclk,'0','0');

FTCPE_spi_comp/run_tx: FTCPE port map (spi_comp/run_tx,spi_comp/run_tx_T,memclk,reset,'0');
spi_comp/run_tx_T <= ((NOT spi_comp/run_tx AND spi_comp/run_txd AND 
	NOT spi_comp/run_rx_d AND NOT spi_comp/run_tx_d)
	OR (spi_clkx AND spi_comp/stat(1) AND spi_comp/stat(2) AND 
	spi_comp/run_tx AND spi_comp/stat(3) AND spi_comp/run_rx_d)
	OR (spi_clkx AND spi_comp/stat(1) AND spi_comp/stat(2) AND 
	spi_comp/run_tx AND spi_comp/stat(3) AND spi_comp/run_tx_d)
	OR (ipl_state AND spi_clkx AND spi_comp/stat(1) AND 
	spi_comp/stat(2) AND spi_comp/run_tx AND spi_comp/stat(3) AND 
	NOT spi_comp/run_txd));

FDCPE_spi_comp/run_tx_d: FDCPE port map (spi_comp/run_tx_d,spi_comp/run_tx,NOT memclk,'0','0');

FDCPE_spi_comp/run_txd: FDCPE port map (spi_comp/run_txd,'1',spi_comp/run_txd_C,NOT spi_comp/run_txd/spi_comp/run_txd_RSTF,'0',spi_comp/run_txd_CE);
spi_comp/run_txd_C <= NOT ((NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND A(3) AND NOT A(2) AND 
	phi2 AND mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND 
	NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));
spi_comp/run_txd_CE <= (NOT rwb AND NOT A(1) AND NOT SFDecomp_66/SFDecomp_66_CE);


spi_comp/run_txd/spi_comp/run_txd_RSTF <= (NOT spi_comp/ack_txd AND NOT reset);

FDCPE_spi_comp/serin_d: FDCPE port map (spi_comp/serin_d,spi_comp/serin_d_D,memclk,'0','0');
spi_comp/serin_d_D <= ((NOT spi_clkx AND ipl AND NOT reset AND spi_in1 AND 
	NOT spi_comp/stat_or0000/spi_comp/stat_or0000_D2)
	OR (NOT spi_clkx AND NOT spi_sel(0) AND SFDecomp_66 AND NOT ipl AND 
	NOT reset AND spi_in2 AND 
	NOT spi_comp/stat_or0000/spi_comp/stat_or0000_D2)
	OR (NOT spi_clkx AND NOT spi_sel(0) AND NOT SFDecomp_66 AND 
	spi_sel(2) AND NOT ipl AND NOT reset AND spi_in3 AND 
	NOT spi_comp/stat_or0000/spi_comp/stat_or0000_D2)
	OR (NOT spi_clkx AND NOT spi_sel(0) AND NOT SFDecomp_66 AND 
	NOT spi_sel(2) AND spi_sel(3) AND NOT ipl AND NOT reset AND spi_in4 AND 
	NOT spi_comp/stat_or0000/spi_comp/stat_or0000_D2)
	OR (spi_clkx AND spi_comp/serin_d)
	OR (spi_comp/serin_d AND reset)
	OR (spi_comp/serin_d AND 
	spi_comp/stat_or0000/spi_comp/stat_or0000_D2)
	OR (NOT spi_clkx AND spi_sel(0) AND NOT reset AND spi_in1 AND 
	NOT spi_comp/stat_or0000/spi_comp/stat_or0000_D2));

FTCPE_spi_comp/sr0: FTCPE port map (spi_comp/sr(0),spi_comp/sr_T(0),memclk,'0','0');
spi_comp/sr_T(0) <= ((ipl_state AND spi_clkx AND NOT spi_comp/run_txd AND 
	spi_comp/sr(0) AND NOT spi_comp/serin_d AND NOT reset)
	OR (ipl_state AND spi_clkx AND NOT spi_comp/run_txd AND 
	NOT spi_comp/sr(0) AND spi_comp/serin_d AND NOT reset)
	OR (spi_comp/txd(0) AND spi_comp/run_txd AND 
	NOT spi_comp/sr(0) AND NOT reset AND NOT spi_comp/run_rx_d AND NOT spi_comp/run_tx_d)
	OR (NOT spi_comp/txd(0) AND spi_comp/run_txd AND 
	spi_comp/sr(0) AND NOT reset AND NOT spi_comp/run_rx_d AND NOT spi_comp/run_tx_d)
	OR (spi_clkx AND spi_comp/sr(0) AND NOT spi_comp/serin_d AND 
	NOT reset AND spi_comp/run_rx_d)
	OR (spi_clkx AND spi_comp/sr(0) AND NOT spi_comp/serin_d AND 
	NOT reset AND spi_comp/run_tx_d)
	OR (spi_clkx AND NOT spi_comp/sr(0) AND spi_comp/serin_d AND 
	NOT reset AND spi_comp/run_rx_d)
	OR (spi_clkx AND NOT spi_comp/sr(0) AND spi_comp/serin_d AND 
	NOT reset AND spi_comp/run_tx_d));

FTCPE_spi_comp/sr1: FTCPE port map (spi_comp/sr(1),spi_comp/sr_T(1),memclk,'0','0');
spi_comp/sr_T(1) <= ((ipl_state AND spi_clkx AND NOT spi_comp/run_txd AND 
	spi_comp/sr(0) AND NOT spi_comp/sr(1) AND NOT reset)
	OR (ipl_state AND spi_clkx AND NOT spi_comp/run_txd AND 
	NOT spi_comp/sr(0) AND spi_comp/sr(1) AND NOT reset)
	OR (spi_comp/txd(1) AND spi_comp/run_txd AND 
	NOT spi_comp/sr(1) AND NOT reset AND NOT spi_comp/run_rx_d AND NOT spi_comp/run_tx_d)
	OR (NOT spi_comp/txd(1) AND spi_comp/run_txd AND 
	spi_comp/sr(1) AND NOT reset AND NOT spi_comp/run_rx_d AND NOT spi_comp/run_tx_d)
	OR (spi_clkx AND spi_comp/sr(0) AND NOT spi_comp/sr(1) AND 
	NOT reset AND spi_comp/run_rx_d)
	OR (spi_clkx AND spi_comp/sr(0) AND NOT spi_comp/sr(1) AND 
	NOT reset AND spi_comp/run_tx_d)
	OR (spi_clkx AND NOT spi_comp/sr(0) AND spi_comp/sr(1) AND 
	NOT reset AND spi_comp/run_rx_d)
	OR (spi_clkx AND NOT spi_comp/sr(0) AND spi_comp/sr(1) AND 
	NOT reset AND spi_comp/run_tx_d));

FTCPE_spi_comp/sr2: FTCPE port map (spi_comp/sr(2),spi_comp/sr_T(2),memclk,'0','0');
spi_comp/sr_T(2) <= ((spi_clkx AND spi_comp/sr(1) AND NOT spi_comp/sr(2) AND 
	NOT reset AND spi_comp/run_tx_d)
	OR (ipl_state AND spi_clkx AND NOT spi_comp/run_txd AND 
	spi_comp/sr(1) AND NOT spi_comp/sr(2) AND NOT reset)
	OR (ipl_state AND spi_clkx AND NOT spi_comp/run_txd AND 
	NOT spi_comp/sr(1) AND spi_comp/sr(2) AND NOT reset)
	OR (spi_comp/txd(2) AND spi_comp/run_txd AND 
	NOT spi_comp/sr(2) AND NOT reset AND NOT spi_comp/run_rx_d AND NOT spi_comp/run_tx_d)
	OR (NOT spi_comp/txd(2) AND spi_comp/run_txd AND 
	spi_comp/sr(2) AND NOT reset AND NOT spi_comp/run_rx_d AND NOT spi_comp/run_tx_d)
	OR (spi_clkx AND spi_comp/sr(1) AND NOT spi_comp/sr(2) AND 
	NOT reset AND spi_comp/run_rx_d)
	OR (spi_clkx AND NOT spi_comp/sr(1) AND spi_comp/sr(2) AND 
	NOT reset AND spi_comp/run_rx_d)
	OR (spi_clkx AND NOT spi_comp/sr(1) AND spi_comp/sr(2) AND 
	NOT reset AND spi_comp/run_tx_d));

FTCPE_spi_comp/sr3: FTCPE port map (spi_comp/sr(3),spi_comp/sr_T(3),memclk,'0','0');
spi_comp/sr_T(3) <= ((ipl_state AND spi_clkx AND NOT spi_comp/run_txd AND 
	NOT spi_comp/sr(2) AND spi_comp/sr(3) AND NOT reset)
	OR (NOT spi_comp/txd(3) AND spi_comp/run_txd AND 
	spi_comp/sr(3) AND NOT reset AND NOT spi_comp/run_rx_d AND NOT spi_comp/run_tx_d)
	OR (ipl_state AND spi_clkx AND NOT spi_comp/run_txd AND 
	spi_comp/sr(2) AND NOT spi_comp/sr(3) AND NOT reset)
	OR (spi_comp/txd(3) AND spi_comp/run_txd AND 
	NOT spi_comp/sr(3) AND NOT reset AND NOT spi_comp/run_rx_d AND NOT spi_comp/run_tx_d)
	OR (spi_clkx AND spi_comp/sr(2) AND NOT spi_comp/sr(3) AND 
	NOT reset AND spi_comp/run_rx_d)
	OR (spi_clkx AND spi_comp/sr(2) AND NOT spi_comp/sr(3) AND 
	NOT reset AND spi_comp/run_tx_d)
	OR (spi_clkx AND NOT spi_comp/sr(2) AND spi_comp/sr(3) AND 
	NOT reset AND spi_comp/run_rx_d)
	OR (spi_clkx AND NOT spi_comp/sr(2) AND spi_comp/sr(3) AND 
	NOT reset AND spi_comp/run_tx_d));

FTCPE_spi_comp/sr4: FTCPE port map (spi_comp/sr(4),spi_comp/sr_T(4),memclk,'0','0');
spi_comp/sr_T(4) <= ((ipl_state AND spi_clkx AND NOT spi_comp/run_txd AND 
	spi_comp/sr(3) AND NOT spi_comp/sr(4) AND NOT reset)
	OR (ipl_state AND spi_clkx AND NOT spi_comp/run_txd AND 
	NOT spi_comp/sr(3) AND spi_comp/sr(4) AND NOT reset)
	OR (spi_comp/txd(4) AND spi_comp/run_txd AND 
	NOT spi_comp/sr(4) AND NOT reset AND NOT spi_comp/run_rx_d AND NOT spi_comp/run_tx_d)
	OR (NOT spi_comp/txd(4) AND spi_comp/run_txd AND 
	spi_comp/sr(4) AND NOT reset AND NOT spi_comp/run_rx_d AND NOT spi_comp/run_tx_d)
	OR (spi_clkx AND spi_comp/sr(3) AND NOT spi_comp/sr(4) AND 
	NOT reset AND spi_comp/run_rx_d)
	OR (spi_clkx AND spi_comp/sr(3) AND NOT spi_comp/sr(4) AND 
	NOT reset AND spi_comp/run_tx_d)
	OR (spi_clkx AND NOT spi_comp/sr(3) AND spi_comp/sr(4) AND 
	NOT reset AND spi_comp/run_rx_d)
	OR (spi_clkx AND NOT spi_comp/sr(3) AND spi_comp/sr(4) AND 
	NOT reset AND spi_comp/run_tx_d));

FTCPE_spi_comp/sr5: FTCPE port map (spi_comp/sr(5),spi_comp/sr_T(5),memclk,'0','0');
spi_comp/sr_T(5) <= ((ipl_state AND spi_clkx AND NOT spi_comp/run_txd AND 
	spi_comp/sr(4) AND NOT spi_comp/sr(5) AND NOT reset)
	OR (ipl_state AND spi_clkx AND NOT spi_comp/run_txd AND 
	NOT spi_comp/sr(4) AND spi_comp/sr(5) AND NOT reset)
	OR (spi_comp/txd(5) AND spi_comp/run_txd AND 
	NOT spi_comp/sr(5) AND NOT reset AND NOT spi_comp/run_rx_d AND NOT spi_comp/run_tx_d)
	OR (NOT spi_comp/txd(5) AND spi_comp/run_txd AND 
	spi_comp/sr(5) AND NOT reset AND NOT spi_comp/run_rx_d AND NOT spi_comp/run_tx_d)
	OR (spi_clkx AND spi_comp/sr(4) AND NOT spi_comp/sr(5) AND 
	NOT reset AND spi_comp/run_rx_d)
	OR (spi_clkx AND spi_comp/sr(4) AND NOT spi_comp/sr(5) AND 
	NOT reset AND spi_comp/run_tx_d)
	OR (spi_clkx AND NOT spi_comp/sr(4) AND spi_comp/sr(5) AND 
	NOT reset AND spi_comp/run_rx_d)
	OR (spi_clkx AND NOT spi_comp/sr(4) AND spi_comp/sr(5) AND 
	NOT reset AND spi_comp/run_tx_d));

FTCPE_spi_comp/sr6: FTCPE port map (spi_comp/sr(6),spi_comp/sr_T(6),memclk,'0','0');
spi_comp/sr_T(6) <= ((spi_clkx AND spi_comp/sr(5) AND NOT spi_comp/sr(6) AND 
	NOT reset AND spi_comp/run_tx_d)
	OR (ipl_state AND spi_clkx AND NOT spi_comp/run_txd AND 
	spi_comp/sr(5) AND NOT spi_comp/sr(6) AND NOT reset)
	OR (ipl_state AND spi_clkx AND NOT spi_comp/run_txd AND 
	NOT spi_comp/sr(5) AND spi_comp/sr(6) AND NOT reset)
	OR (spi_comp/txd(6) AND spi_comp/run_txd AND 
	NOT spi_comp/sr(6) AND NOT reset AND NOT spi_comp/run_rx_d AND NOT spi_comp/run_tx_d)
	OR (NOT spi_comp/txd(6) AND spi_comp/run_txd AND 
	spi_comp/sr(6) AND NOT reset AND NOT spi_comp/run_rx_d AND NOT spi_comp/run_tx_d)
	OR (spi_clkx AND spi_comp/sr(5) AND NOT spi_comp/sr(6) AND 
	NOT reset AND spi_comp/run_rx_d)
	OR (spi_clkx AND NOT spi_comp/sr(5) AND spi_comp/sr(6) AND 
	NOT reset AND spi_comp/run_rx_d)
	OR (spi_clkx AND NOT spi_comp/sr(5) AND spi_comp/sr(6) AND 
	NOT reset AND spi_comp/run_tx_d));

FTCPE_spi_comp/stat1: FTCPE port map (spi_comp/stat(1),spi_comp/stat_T(1),memclk,reset,'0');
spi_comp/stat_T(1) <= (spi_clkx AND 
	NOT spi_comp/stat_or0000/spi_comp/stat_or0000_D2);

FTCPE_spi_comp/stat2: FTCPE port map (spi_comp/stat(2),spi_comp/stat_T(2),memclk,reset,'0');
spi_comp/stat_T(2) <= (spi_clkx AND spi_comp/stat(1) AND 
	NOT spi_comp/stat_or0000/spi_comp/stat_or0000_D2);

FTCPE_spi_comp/stat3: FTCPE port map (spi_comp/stat(3),spi_comp/stat_T(3),memclk,reset,'0');
spi_comp/stat_T(3) <= (spi_clkx AND spi_comp/stat(1) AND spi_comp/stat(2) AND 
	NOT spi_comp/stat_or0000/spi_comp/stat_or0000_D2);


spi_comp/stat_or0000/spi_comp/stat_or0000_D2 <= ((NOT ipl_state AND NOT spi_comp/run_rx_d AND 
	NOT spi_comp/run_tx_d)
	OR (spi_comp/run_txd AND NOT spi_comp/run_rx_d AND 
	NOT spi_comp/run_tx_d));

FDCPE_spi_comp/txd0: FDCPE port map (spi_comp/txd(0),D(0).PIN,spi_comp/txd_C(0),reset,'0',spi_comp/txd_CE(0));
spi_comp/txd_C(0) <= NOT ((NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND A(3) AND NOT A(2) AND 
	phi2 AND mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND 
	NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));
spi_comp/txd_CE(0) <= (NOT rwb AND NOT A(1) AND NOT SFDecomp_66/SFDecomp_66_CE);

FDCPE_spi_comp/txd1: FDCPE port map (spi_comp/txd(1),D(1).PIN,spi_comp/txd_C(1),reset,'0',spi_comp/txd_CE(1));
spi_comp/txd_C(1) <= NOT ((NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND A(3) AND NOT A(2) AND 
	phi2 AND mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND 
	NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));
spi_comp/txd_CE(1) <= (NOT rwb AND NOT A(1) AND NOT SFDecomp_66/SFDecomp_66_CE);

FDCPE_spi_comp/txd2: FDCPE port map (spi_comp/txd(2),D(2).PIN,spi_comp/txd_C(2),reset,'0',spi_comp/txd_CE(2));
spi_comp/txd_C(2) <= NOT ((NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND A(3) AND NOT A(2) AND 
	phi2 AND mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND 
	NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));
spi_comp/txd_CE(2) <= (NOT rwb AND NOT A(1) AND NOT SFDecomp_66/SFDecomp_66_CE);

FDCPE_spi_comp/txd3: FDCPE port map (spi_comp/txd(3),D(3).PIN,spi_comp/txd_C(3),reset,'0',spi_comp/txd_CE(3));
spi_comp/txd_C(3) <= NOT ((NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND A(3) AND NOT A(2) AND 
	phi2 AND mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND 
	NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));
spi_comp/txd_CE(3) <= (NOT rwb AND NOT A(1) AND NOT SFDecomp_66/SFDecomp_66_CE);

FDCPE_spi_comp/txd4: FDCPE port map (spi_comp/txd(4),D(4).PIN,spi_comp/txd_C(4),reset,'0',spi_comp/txd_CE(4));
spi_comp/txd_C(4) <= NOT ((NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND A(3) AND NOT A(2) AND 
	phi2 AND mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND 
	NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));
spi_comp/txd_CE(4) <= (NOT rwb AND NOT A(1) AND NOT SFDecomp_66/SFDecomp_66_CE);

FDCPE_spi_comp/txd5: FDCPE port map (spi_comp/txd(5),D(5).PIN,spi_comp/txd_C(5),reset,'0',spi_comp/txd_CE(5));
spi_comp/txd_C(5) <= NOT ((NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND A(3) AND NOT A(2) AND 
	phi2 AND mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND 
	NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));
spi_comp/txd_CE(5) <= (NOT rwb AND NOT A(1) AND NOT SFDecomp_66/SFDecomp_66_CE);

FDCPE_spi_comp/txd6: FDCPE port map (spi_comp/txd(6),D(6).PIN,spi_comp/txd_C(6),reset,'0',spi_comp/txd_CE(6));
spi_comp/txd_C(6) <= NOT ((NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND A(3) AND NOT A(2) AND 
	phi2 AND mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND 
	NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));
spi_comp/txd_CE(6) <= (NOT rwb AND NOT A(1) AND NOT SFDecomp_66/SFDecomp_66_CE);

FDCPE_spi_comp/txd7: FDCPE port map (spi_comp/txd(7),D(7).PIN,spi_comp/txd_C(7),reset,'0',spi_comp/txd_CE(7));
spi_comp/txd_C(7) <= NOT ((NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND A(3) AND NOT A(2) AND 
	phi2 AND mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND 
	NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));
spi_comp/txd_CE(7) <= (NOT rwb AND NOT A(1) AND NOT SFDecomp_66/SFDecomp_66_CE);


spi_cs/spi_cs_D2 <= (NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND A(3) AND NOT A(2) AND 
	phi2 AND mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND 
	NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688);


spi_nsel2 <= NOT ((SFDecomp_66 AND NOT reset));


spi_nsel3 <= NOT ((spi_sel(2) AND NOT reset));


spi_nsel4 <= NOT ((spi_sel(3) AND NOT reset));


spi_out <= ((ipl_out AND ipl)
	OR (NOT ipl AND spi_outx));

FTCPE_spi_outx: FTCPE port map (spi_outx,spi_outx_T,memclk,'0','0');
spi_outx_T <= ((ipl_state AND spi_clkx AND NOT spi_comp/run_txd AND 
	NOT spi_comp/sr(6) AND spi_outx AND NOT reset)
	OR (spi_comp/txd(7) AND spi_comp/run_txd AND NOT spi_outx AND 
	NOT reset AND NOT spi_comp/run_rx_d AND NOT spi_comp/run_tx_d)
	OR (NOT spi_comp/txd(7) AND spi_comp/run_txd AND spi_outx AND 
	NOT reset AND NOT spi_comp/run_rx_d AND NOT spi_comp/run_tx_d)
	OR (ipl_state AND spi_clkx AND NOT spi_comp/run_txd AND 
	spi_comp/sr(6) AND NOT spi_outx AND NOT reset)
	OR (spi_clkx AND spi_comp/sr(6) AND NOT spi_outx AND NOT reset AND 
	spi_comp/run_rx_d)
	OR (spi_clkx AND spi_comp/sr(6) AND NOT spi_outx AND NOT reset AND 
	spi_comp/run_tx_d)
	OR (spi_clkx AND NOT spi_comp/sr(6) AND spi_outx AND NOT reset AND 
	spi_comp/run_rx_d)
	OR (spi_clkx AND NOT spi_comp/sr(6) AND spi_outx AND NOT reset AND 
	spi_comp/run_tx_d));

FDCPE_spi_sel0: FDCPE port map (spi_sel(0),D(0).PIN,spi_sel_C(0),reset,'0',spi_sel_CE(0));
spi_sel_C(0) <= NOT ((NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND A(3) AND NOT A(2) AND 
	phi2 AND mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND 
	NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));
spi_sel_CE(0) <= (NOT rwb AND NOT A(0) AND NOT A(1));

FDCPE_spi_sel2: FDCPE port map (spi_sel(2),D(2).PIN,spi_sel_C(2),reset,'0',spi_sel_CE(2));
spi_sel_C(2) <= NOT ((NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND A(3) AND NOT A(2) AND 
	phi2 AND mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND 
	NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));
spi_sel_CE(2) <= (NOT rwb AND NOT A(0) AND NOT A(1));

FDCPE_spi_sel3: FDCPE port map (spi_sel(3),D(3).PIN,spi_sel_C(3),reset,'0',spi_sel_CE(3));
spi_sel_C(3) <= NOT ((NOT A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND A(3) AND NOT A(2) AND 
	phi2 AND mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND 
	NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));
spi_sel_CE(3) <= (NOT rwb AND NOT A(0) AND NOT A(1));

FDCPE_sr_load: FDCPE port map (sr_load,sr_load_D,NOT q50m,reset,'0');
sr_load_D <= (clocky/clk_cnt_0_1 AND clocky/clk_cnt_0_2 AND 
	clocky/clk_cnt_0_3 AND clocky/clk_cnt_0_0);


viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2 <= (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/vid_addr(6) AND viccy/vid_addr(7) AND 
	viccy/vid_addr(8));

FDCPE_viccy/charhold0: FDCPE port map (viccy/charhold(0),VD(0).PIN,NOT viccy/chr_fetch,reset,'0');

FDCPE_viccy/charhold1: FDCPE port map (viccy/charhold(1),VD(1).PIN,NOT viccy/chr_fetch,reset,'0');

FDCPE_viccy/charhold2: FDCPE port map (viccy/charhold(2),VD(2).PIN,NOT viccy/chr_fetch,reset,'0');

FDCPE_viccy/charhold3: FDCPE port map (viccy/charhold(3),VD(3).PIN,NOT viccy/chr_fetch,reset,'0');

FDCPE_viccy/charhold4: FDCPE port map (viccy/charhold(4),VD(4).PIN,NOT viccy/chr_fetch,reset,'0');

FDCPE_viccy/charhold5: FDCPE port map (viccy/charhold(5),VD(5).PIN,NOT viccy/chr_fetch,reset,'0');

FDCPE_viccy/charhold6: FDCPE port map (viccy/charhold(6),VD(6).PIN,NOT viccy/chr_fetch,reset,'0');

FDCPE_viccy/charhold7: FDCPE port map (viccy/charhold(7),VD(7).PIN,NOT viccy/chr_fetch,reset,'0');

FDCPE_viccy/chr_fetch: FDCPE port map (viccy/chr_fetch,viccy/chr_fetch_D,q50m,'0','0');
viccy/chr_fetch_D <= ((NOT vis_hires_in AND vis_enable AND viccy/interlace AND 
	viccy/is_80 AND chr_window)
	OR (NOT vis_hires_in AND vis_enable AND viccy/interlace AND 
	NOT viccy/in_slot AND chr_window)
	OR (NOT vis_hires_in AND vis_enable AND viccy/is_80 AND 
	NOT viccy/rline_cnt(0) AND chr_window)
	OR (NOT vis_hires_in AND vis_enable AND NOT viccy/rline_cnt(0) AND 
	NOT viccy/in_slot AND chr_window));

FDCPE_viccy/cline_cnt0: FDCPE port map (viccy/cline_cnt(0),viccy/cline_cnt_D(0),NOT hsync,reset,'0');
viccy/cline_cnt_D(0) <= ((NOT viccy/cline_cnt(0) AND viccy/rline_cnt(0) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (NOT viccy/cline_cnt(0) AND NOT viccy/last_line_of_screen AND 
	graphic AND NOT viccy/last_line_of_char)
	OR (viccy/cline_cnt(0) AND NOT viccy/rline_cnt(0) AND 
	NOT viccy/last_line_of_screen AND NOT graphic AND NOT viccy/last_line_of_char));

FDCPE_viccy/cline_cnt1: FDCPE port map (viccy/cline_cnt(1),viccy/cline_cnt_D(1),NOT hsync,reset,'0');
viccy/cline_cnt_D(1) <= ((viccy/cline_cnt(0) AND NOT viccy/cline_cnt(1) AND 
	NOT viccy/last_line_of_screen AND graphic AND NOT viccy/last_line_of_char)
	OR (NOT viccy/cline_cnt(0) AND viccy/cline_cnt(1) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/cline_cnt(0) AND NOT viccy/cline_cnt(1) AND 
	viccy/rline_cnt(0) AND NOT viccy/last_line_of_screen AND 
	NOT viccy/last_line_of_char)
	OR (viccy/cline_cnt(1) AND NOT viccy/rline_cnt(0) AND 
	NOT viccy/last_line_of_screen AND NOT graphic AND NOT viccy/last_line_of_char));

FTCPE_viccy/cline_cnt2: FTCPE port map (viccy/cline_cnt(2),viccy/cline_cnt_T(2),NOT hsync,reset,'0');
viccy/cline_cnt_T(2) <= ((viccy/cline_cnt(2) AND viccy/last_line_of_screen)
	OR (viccy/cline_cnt(2) AND viccy/last_line_of_char)
	OR (viccy/cline_cnt(0) AND viccy/cline_cnt(1) AND 
	viccy/rline_cnt(0) AND NOT viccy/last_line_of_screen AND 
	NOT viccy/last_line_of_char)
	OR (viccy/cline_cnt(0) AND viccy/cline_cnt(1) AND 
	NOT viccy/last_line_of_screen AND graphic AND NOT viccy/last_line_of_char));

FTCPE_viccy/cline_cnt3: FTCPE port map (viccy/cline_cnt(3),viccy/cline_cnt_T(3),NOT hsync,reset,'0');
viccy/cline_cnt_T(3) <= ((viccy/cline_cnt(3) AND viccy/last_line_of_screen)
	OR (viccy/cline_cnt(3) AND viccy/last_line_of_char)
	OR (viccy/cline_cnt(0) AND viccy/cline_cnt(1) AND 
	viccy/cline_cnt(2) AND viccy/rline_cnt(0) AND NOT viccy/last_line_of_screen AND 
	NOT viccy/last_line_of_char)
	OR (viccy/cline_cnt(0) AND viccy/cline_cnt(1) AND 
	viccy/cline_cnt(2) AND NOT viccy/last_line_of_screen AND graphic AND 
	NOT viccy/last_line_of_char));

FTCPE_viccy/crtc_reg0: FTCPE port map (viccy/crtc_reg(0),viccy/crtc_reg_T(0),NOT memclk,reset,'0');
viccy/crtc_reg_T(0) <= ((D(0).PIN AND NOT rwb AND NOT A(0) AND A(7) AND NOT A(6) AND NOT A(5) AND 
	NOT A(4) AND NOT viccy/crtc_reg(0) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688)
	OR (NOT D(0).PIN AND NOT rwb AND NOT A(0) AND A(7) AND NOT A(6) AND NOT A(5) AND 
	NOT A(4) AND viccy/crtc_reg(0) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));

FTCPE_viccy/crtc_reg1: FTCPE port map (viccy/crtc_reg(1),viccy/crtc_reg_T(1),NOT memclk,reset,'0');
viccy/crtc_reg_T(1) <= ((NOT rwb AND NOT A(0) AND A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND 
	D(1).PIN AND NOT viccy/crtc_reg(1) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688)
	OR (NOT rwb AND NOT A(0) AND A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND 
	NOT D(1).PIN AND viccy/crtc_reg(1) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));

FTCPE_viccy/crtc_reg2: FTCPE port map (viccy/crtc_reg(2),viccy/crtc_reg_T(2),NOT memclk,reset,'0');
viccy/crtc_reg_T(2) <= ((NOT rwb AND NOT A(0) AND A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND 
	D(2).PIN AND NOT viccy/crtc_reg(2) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688)
	OR (NOT rwb AND NOT A(0) AND A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND 
	NOT D(2).PIN AND viccy/crtc_reg(2) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));

FTCPE_viccy/crtc_reg3: FTCPE port map (viccy/crtc_reg(3),viccy/crtc_reg_T(3),NOT memclk,reset,'0');
viccy/crtc_reg_T(3) <= ((NOT rwb AND NOT A(0) AND A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND 
	D(3).PIN AND NOT viccy/crtc_reg(3) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688)
	OR (NOT rwb AND NOT A(0) AND A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND 
	NOT D(3).PIN AND viccy/crtc_reg(3) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688));

FDCPE_viccy/dot2clk_d: FDCPE port map (viccy/dot2clk_d,dot2clk,q50m,'0','0');

FDCPE_viccy/h_enable: FDCPE port map (viccy/h_enable,viccy/h_enable_D,NOT slotclk,'0','0');
viccy/h_enable_D <= ((NOT viccy/slot_cnt(6) AND NOT viccy/slot_cnt(7) AND 
	NOT viccy/slot_cnt(8) AND NOT viccy/slot_cnt(9))
	OR (NOT viccy/slot_cnt(4) AND NOT viccy/slot_cnt(5) AND 
	NOT viccy/slot_cnt(7) AND NOT viccy/slot_cnt(8) AND NOT viccy/slot_cnt(9)));

FDCPE_viccy/in_slot: FDCPE port map (viccy/in_slot,viccy/slot_cnt(0),NOT slotclk,reset,'0');

FTCPE_viccy/interlace: FTCPE port map (viccy/interlace,viccy/interlace_T,NOT memclk,reset,'0');
viccy/interlace_T <= ((D(0).PIN AND NOT viccy/crtc_reg(2) AND NOT viccy/interlace AND 
	$OpTx$FX_DC$2549756)
	OR (NOT D(0).PIN AND NOT viccy/crtc_reg(2) AND viccy/interlace AND 
	$OpTx$FX_DC$2549756));

FDCPE_viccy/is_10rows: FDCPE port map (viccy/is_10rows,viccy/is_10rows_D,NOT memclk,reset,'0');
viccy/is_10rows_D <= ((viccy/is_10rows AND 
	NOT viccy/is_10rows_or0000/viccy/is_10rows_or0000_D2)
	OR (D(0).PIN AND NOT D(7).PIN AND NOT D(1).PIN AND NOT D(2).PIN AND 
	NOT D(5).PIN AND NOT D(6).PIN AND D(3).PIN AND NOT D(4).PIN AND 
	viccy/is_10rows_or0000/viccy/is_10rows_or0000_D2));


viccy/is_10rows_or0000/viccy/is_10rows_or0000_D2 <= (NOT rwb AND A(0) AND A(7) AND NOT A(6) AND NOT A(5) AND NOT A(4) AND 
	viccy/crtc_reg(0) AND NOT viccy/crtc_reg(1) AND NOT viccy/crtc_reg(2) AND 
	viccy/crtc_reg(3) AND mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND 
	NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688);

FDCPE_viccy/is_80: FDCPE port map (viccy/is_80,vis_80_in,NOT slotclk,'0','0',viccy/is_80_CE);
viccy/is_80_CE <= (NOT reset AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line);

FDCPE_viccy/is_9rows: FDCPE port map (viccy/is_9rows,viccy/is_9rows_D,NOT memclk,reset,'0');
viccy/is_9rows_D <= ((NOT D(0).PIN AND NOT D(7).PIN AND NOT D(1).PIN AND NOT D(2).PIN AND 
	NOT D(5).PIN AND NOT D(6).PIN AND D(3).PIN AND NOT D(4).PIN AND 
	viccy/is_10rows_or0000/viccy/is_10rows_or0000_D2)
	OR (viccy/is_9rows AND 
	NOT viccy/is_10rows_or0000/viccy/is_10rows_or0000_D2));

FDCPE_viccy/last_line_of_char: FDCPE port map (viccy/last_line_of_char,viccy/last_line_of_char_D,hsync,'0','0');
viccy/last_line_of_char_D <= ((NOT viccy/cline_cnt(0) AND NOT viccy/cline_cnt(1) AND 
	NOT viccy/cline_cnt(2) AND viccy/cline_cnt(3) AND viccy/is_9rows AND 
	viccy/rline_cnt(0))
	OR (viccy/cline_cnt(0) AND viccy/cline_cnt(1) AND 
	viccy/cline_cnt(2) AND NOT viccy/cline_cnt(3) AND NOT viccy/is_10rows AND 
	NOT viccy/is_9rows AND viccy/rline_cnt(0))
	OR (viccy/cline_cnt(0) AND viccy/cline_cnt(1) AND 
	viccy/cline_cnt(2) AND NOT viccy/cline_cnt(3) AND NOT viccy/is_10rows AND 
	NOT viccy/is_9rows AND graphic)
	OR (NOT viccy/cline_cnt(0) AND NOT viccy/cline_cnt(1) AND 
	NOT viccy/cline_cnt(2) AND viccy/cline_cnt(3) AND viccy/is_9rows AND graphic)
	OR (vis_hires_in AND viccy/rline_cnt(0))
	OR (vis_hires_in AND graphic)
	OR (NOT viccy/cline_cnt(0) AND NOT viccy/cline_cnt(1) AND 
	NOT viccy/cline_cnt(2) AND viccy/cline_cnt(3) AND viccy/is_10rows AND 
	viccy/rline_cnt(0))
	OR (NOT viccy/cline_cnt(0) AND NOT viccy/cline_cnt(1) AND 
	NOT viccy/cline_cnt(2) AND viccy/cline_cnt(3) AND viccy/is_10rows AND graphic));

FDCPE_viccy/last_line_of_screen: FDCPE port map (viccy/last_line_of_screen,viccy/last_line_of_screen_D,hsync,'0','0');
viccy/last_line_of_screen_D <= (NOT viccy/rline_cnt(4) AND NOT viccy/rline_cnt(0) AND 
	NOT viccy/rline_cnt(5) AND NOT viccy/rline_cnt(1) AND viccy/rline_cnt(2) AND 
	viccy/rline_cnt(3) AND NOT viccy/rline_cnt(6) AND NOT viccy/rline_cnt(7) AND 
	NOT viccy/rline_cnt(8) AND viccy/rline_cnt(9));

FDCPE_viccy/last_slot_of_line: FDCPE port map (viccy/last_slot_of_line,viccy/last_slot_of_line_D,NOT slotclk,'0','0');
viccy/last_slot_of_line_D <= (viccy/slot_cnt(0) AND NOT viccy/slot_cnt(4) AND 
	viccy/slot_cnt(5) AND viccy/slot_cnt(6) AND NOT viccy/slot_cnt(2) AND 
	viccy/slot_cnt(1) AND NOT viccy/slot_cnt(3) AND NOT viccy/slot_cnt(7) AND 
	NOT viccy/slot_cnt(8) AND NOT viccy/slot_cnt(9));

FDCPE_viccy/last_vis_slot_of_line: FDCPE port map (viccy/last_vis_slot_of_line,viccy/last_vis_slot_of_line_D,NOT slotclk,'0','0');
viccy/last_vis_slot_of_line_D <= (NOT viccy/slot_cnt(0) AND viccy/slot_cnt(4) AND 
	NOT viccy/slot_cnt(5) AND viccy/slot_cnt(6) AND NOT viccy/slot_cnt(2) AND 
	NOT viccy/slot_cnt(1) AND NOT viccy/slot_cnt(3) AND NOT viccy/slot_cnt(7) AND 
	NOT viccy/slot_cnt(8) AND NOT viccy/slot_cnt(9));

FDCPE_viccy/pxl_fetch: FDCPE port map (viccy/pxl_fetch,viccy/pxl_fetch_D,q50m,'0','0');
viccy/pxl_fetch_D <= ((vis_enable AND viccy/interlace AND viccy/is_80 AND 
	pxl_window)
	OR (vis_enable AND viccy/interlace AND NOT viccy/in_slot AND 
	pxl_window)
	OR (vis_enable AND viccy/is_80 AND NOT viccy/rline_cnt(0) AND 
	pxl_window)
	OR (vis_enable AND NOT viccy/rline_cnt(0) AND NOT viccy/in_slot AND 
	pxl_window));

FDCPE_viccy/pxlhold0: FDCPE port map (viccy/pxlhold(0),viccy/pxlhold_D(0),NOT dclk,reset,'0');
viccy/pxlhold_D(0) <= ((VD(0).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(0) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(0) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d));

FDCPE_viccy/pxlhold1: FDCPE port map (viccy/pxlhold(1),viccy/pxlhold_D(1),NOT dclk,reset,'0');
viccy/pxlhold_D(1) <= ((viccy/pxlhold(0) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (VD(1).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(1) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(1) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(0) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(0) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(0) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d));

FDCPE_viccy/pxlhold2: FDCPE port map (viccy/pxlhold(2),viccy/pxlhold_D(2),NOT dclk,reset,'0');
viccy/pxlhold_D(2) <= ((viccy/pxlhold(1) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (VD(2).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(2) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(2) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(1) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(1) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(1) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d));

FDCPE_viccy/pxlhold3: FDCPE port map (viccy/pxlhold(3),viccy/pxlhold_D(3),NOT dclk,reset,'0');
viccy/pxlhold_D(3) <= ((viccy/pxlhold(2) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (VD(3).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(3) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(3) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(2) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(2) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(2) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d));

FDCPE_viccy/pxlhold4: FDCPE port map (viccy/pxlhold(4),viccy/pxlhold_D(4),NOT dclk,reset,'0');
viccy/pxlhold_D(4) <= ((viccy/pxlhold(3) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (VD(4).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(4) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(4) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(3) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(3) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(3) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d));

FDCPE_viccy/pxlhold5: FDCPE port map (viccy/pxlhold(5),viccy/pxlhold_D(5),NOT dclk,reset,'0');
viccy/pxlhold_D(5) <= ((viccy/pxlhold(4) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (VD(5).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(5) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(5) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(4) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(4) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(4) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d));

FDCPE_viccy/pxlhold6: FDCPE port map (viccy/pxlhold(6),viccy/pxlhold_D(6),NOT dclk,reset,'0');
viccy/pxlhold_D(6) <= ((viccy/pxlhold(5) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (VD(6).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(6) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(6) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(5) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(5) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(5) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d));

FDCPE_viccy/pxlhold7: FDCPE port map (viccy/pxlhold(7),viccy/pxlhold_D(7),NOT dclk,reset,'0');
viccy/pxlhold_D(7) <= ((viccy/pxlhold(6) AND viccy/is_80 AND NOT viccy/sr_load_d)
	OR (viccy/pxlhold(6) AND viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (VD(7).PIN AND viccy/pxl_fetch AND viccy/sr_load_d)
	OR (viccy/pxlhold(7) AND NOT viccy/is_80 AND NOT viccy/pxl_fetch AND 
	NOT viccy/dot2clk_d)
	OR (viccy/pxlhold(7) AND NOT viccy/is_80 AND NOT viccy/dot2clk_d AND 
	NOT viccy/sr_load_d)
	OR (viccy/pxlhold(6) AND viccy/is_80 AND NOT viccy/pxl_fetch)
	OR (viccy/pxlhold(6) AND NOT viccy/pxl_fetch AND 
	viccy/dot2clk_d));

FDCPE_viccy/rline_cnt0: FDCPE port map (viccy/rline_cnt(0),viccy/rline_cnt_D(0),NOT hsync,reset,'0');
viccy/rline_cnt_D(0) <= (NOT viccy/rline_cnt(0) AND NOT viccy/last_line_of_screen);

FDCPE_viccy/rline_cnt1: FDCPE port map (viccy/rline_cnt(1),viccy/rline_cnt_D(1),NOT hsync,reset,'0');
viccy/rline_cnt_D(1) <= ((viccy/rline_cnt(0) AND NOT viccy/rline_cnt(1) AND 
	NOT viccy/last_line_of_screen)
	OR (NOT viccy/rline_cnt(0) AND viccy/rline_cnt(1) AND 
	NOT viccy/last_line_of_screen));

FTCPE_viccy/rline_cnt2: FTCPE port map (viccy/rline_cnt(2),viccy/rline_cnt_T(2),NOT hsync,reset,'0');
viccy/rline_cnt_T(2) <= ((viccy/rline_cnt(2) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(0) AND viccy/rline_cnt(1) AND 
	NOT viccy/last_line_of_screen));

FTCPE_viccy/rline_cnt3: FTCPE port map (viccy/rline_cnt(3),viccy/rline_cnt_T(3),NOT hsync,reset,'0');
viccy/rline_cnt_T(3) <= ((viccy/rline_cnt(3) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(0) AND viccy/rline_cnt(1) AND 
	viccy/rline_cnt(2) AND NOT viccy/last_line_of_screen));

FTCPE_viccy/rline_cnt4: FTCPE port map (viccy/rline_cnt(4),viccy/rline_cnt_T(4),NOT hsync,reset,'0');
viccy/rline_cnt_T(4) <= ((viccy/rline_cnt(4) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(0) AND viccy/rline_cnt(1) AND 
	viccy/rline_cnt(2) AND viccy/rline_cnt(3) AND NOT viccy/last_line_of_screen));

FTCPE_viccy/rline_cnt5: FTCPE port map (viccy/rline_cnt(5),viccy/rline_cnt_T(5),NOT hsync,reset,'0');
viccy/rline_cnt_T(5) <= ((viccy/rline_cnt(5) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(4) AND viccy/rline_cnt(0) AND 
	viccy/rline_cnt(1) AND viccy/rline_cnt(2) AND viccy/rline_cnt(3) AND 
	NOT viccy/last_line_of_screen));

FTCPE_viccy/rline_cnt6: FTCPE port map (viccy/rline_cnt(6),viccy/rline_cnt_T(6),NOT hsync,reset,'0');
viccy/rline_cnt_T(6) <= ((viccy/rline_cnt(6) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(4) AND viccy/rline_cnt(0) AND 
	viccy/rline_cnt(5) AND viccy/rline_cnt(1) AND viccy/rline_cnt(2) AND 
	viccy/rline_cnt(3) AND NOT viccy/last_line_of_screen));

FTCPE_viccy/rline_cnt7: FTCPE port map (viccy/rline_cnt(7),viccy/rline_cnt_T(7),NOT hsync,reset,'0');
viccy/rline_cnt_T(7) <= ((viccy/rline_cnt(7) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(4) AND viccy/rline_cnt(0) AND 
	viccy/rline_cnt(5) AND viccy/rline_cnt(1) AND viccy/rline_cnt(2) AND 
	viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND NOT viccy/last_line_of_screen));

FTCPE_viccy/rline_cnt8: FTCPE port map (viccy/rline_cnt(8),viccy/rline_cnt_T(8),NOT hsync,reset,'0');
viccy/rline_cnt_T(8) <= ((viccy/rline_cnt(8) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(4) AND viccy/rline_cnt(0) AND 
	viccy/rline_cnt(5) AND viccy/rline_cnt(1) AND viccy/rline_cnt(2) AND 
	viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND viccy/rline_cnt(7) AND 
	NOT viccy/last_line_of_screen));

FTCPE_viccy/rline_cnt9: FTCPE port map (viccy/rline_cnt(9),viccy/rline_cnt_T(9),NOT hsync,reset,'0');
viccy/rline_cnt_T(9) <= ((viccy/rline_cnt(9) AND viccy/last_line_of_screen)
	OR (viccy/rline_cnt(4) AND viccy/rline_cnt(0) AND 
	viccy/rline_cnt(5) AND viccy/rline_cnt(1) AND viccy/rline_cnt(2) AND 
	viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND viccy/rline_cnt(7) AND 
	viccy/rline_cnt(8) AND NOT viccy/last_line_of_screen));

FDCPE_viccy/slot_cnt0: FDCPE port map (viccy/slot_cnt(0),viccy/slot_cnt_D(0),slotclk,reset,'0');
viccy/slot_cnt_D(0) <= (NOT viccy/slot_cnt(0) AND NOT viccy/last_slot_of_line);

FDCPE_viccy/slot_cnt1: FDCPE port map (viccy/slot_cnt(1),viccy/slot_cnt_D(1),slotclk,reset,'0');
viccy/slot_cnt_D(1) <= ((viccy/slot_cnt(0) AND NOT viccy/slot_cnt(1) AND 
	NOT viccy/last_slot_of_line)
	OR (NOT viccy/slot_cnt(0) AND viccy/slot_cnt(1) AND 
	NOT viccy/last_slot_of_line));

FTCPE_viccy/slot_cnt2: FTCPE port map (viccy/slot_cnt(2),viccy/slot_cnt_T(2),slotclk,reset,'0');
viccy/slot_cnt_T(2) <= ((viccy/slot_cnt(2) AND viccy/last_slot_of_line)
	OR (viccy/slot_cnt(0) AND viccy/slot_cnt(1) AND 
	NOT viccy/last_slot_of_line));

FTCPE_viccy/slot_cnt3: FTCPE port map (viccy/slot_cnt(3),viccy/slot_cnt_T(3),slotclk,reset,'0');
viccy/slot_cnt_T(3) <= ((viccy/slot_cnt(3) AND viccy/last_slot_of_line)
	OR (viccy/slot_cnt(0) AND viccy/slot_cnt(2) AND 
	viccy/slot_cnt(1) AND NOT viccy/last_slot_of_line));

FTCPE_viccy/slot_cnt4: FTCPE port map (viccy/slot_cnt(4),viccy/slot_cnt_T(4),slotclk,reset,'0');
viccy/slot_cnt_T(4) <= ((viccy/slot_cnt(4) AND viccy/last_slot_of_line)
	OR (viccy/slot_cnt(0) AND viccy/slot_cnt(2) AND 
	viccy/slot_cnt(1) AND viccy/slot_cnt(3) AND NOT viccy/last_slot_of_line));

FTCPE_viccy/slot_cnt5: FTCPE port map (viccy/slot_cnt(5),viccy/slot_cnt_T(5),slotclk,reset,'0');
viccy/slot_cnt_T(5) <= ((viccy/slot_cnt(5) AND viccy/last_slot_of_line)
	OR (viccy/slot_cnt(0) AND viccy/slot_cnt(4) AND 
	viccy/slot_cnt(2) AND viccy/slot_cnt(1) AND viccy/slot_cnt(3) AND 
	NOT viccy/last_slot_of_line));

FTCPE_viccy/slot_cnt6: FTCPE port map (viccy/slot_cnt(6),viccy/slot_cnt_T(6),slotclk,reset,'0');
viccy/slot_cnt_T(6) <= ((viccy/slot_cnt(6) AND viccy/last_slot_of_line)
	OR (viccy/slot_cnt(0) AND viccy/slot_cnt(4) AND 
	viccy/slot_cnt(5) AND viccy/slot_cnt(2) AND viccy/slot_cnt(1) AND 
	viccy/slot_cnt(3) AND NOT viccy/last_slot_of_line));

FTCPE_viccy/slot_cnt7: FTCPE port map (viccy/slot_cnt(7),viccy/slot_cnt_T(7),slotclk,reset,'0');
viccy/slot_cnt_T(7) <= ((viccy/slot_cnt(7) AND viccy/last_slot_of_line)
	OR (viccy/slot_cnt(0) AND viccy/slot_cnt(4) AND 
	viccy/slot_cnt(5) AND viccy/slot_cnt(6) AND viccy/slot_cnt(2) AND 
	viccy/slot_cnt(1) AND viccy/slot_cnt(3) AND NOT viccy/last_slot_of_line));

FTCPE_viccy/slot_cnt8: FTCPE port map (viccy/slot_cnt(8),viccy/slot_cnt_T(8),slotclk,reset,'0');
viccy/slot_cnt_T(8) <= ((viccy/slot_cnt(8) AND viccy/last_slot_of_line)
	OR (viccy/slot_cnt(0) AND viccy/slot_cnt(4) AND 
	viccy/slot_cnt(5) AND viccy/slot_cnt(6) AND viccy/slot_cnt(2) AND 
	viccy/slot_cnt(1) AND viccy/slot_cnt(3) AND viccy/slot_cnt(7) AND 
	NOT viccy/last_slot_of_line));

FTCPE_viccy/slot_cnt9: FTCPE port map (viccy/slot_cnt(9),viccy/slot_cnt_T(9),slotclk,reset,'0');
viccy/slot_cnt_T(9) <= ((viccy/slot_cnt(9) AND viccy/last_slot_of_line)
	OR (viccy/slot_cnt(0) AND viccy/slot_cnt(4) AND 
	viccy/slot_cnt(5) AND viccy/slot_cnt(6) AND viccy/slot_cnt(2) AND 
	viccy/slot_cnt(1) AND viccy/slot_cnt(3) AND viccy/slot_cnt(7) AND 
	viccy/slot_cnt(8) AND NOT viccy/last_slot_of_line));

FDCPE_viccy/sr_load_d: FDCPE port map (viccy/sr_load_d,sr_load,q50m,'0','0');

FDCPE_viccy/v_enable: FDCPE port map (viccy/v_enable,viccy/v_enable_D,hsync,'0','0');
viccy/v_enable_D <= ((viccy/is_10rows AND NOT viccy/rline_cnt(4) AND 
	NOT viccy/rline_cnt(5) AND NOT viccy/rline_cnt(1) AND NOT viccy/rline_cnt(2) AND 
	NOT viccy/rline_cnt(3) AND NOT viccy/rline_cnt(9))
	OR (viccy/is_9rows AND NOT viccy/rline_cnt(4) AND 
	NOT viccy/rline_cnt(5) AND NOT viccy/rline_cnt(1) AND NOT viccy/rline_cnt(2) AND 
	NOT viccy/rline_cnt(3) AND NOT viccy/rline_cnt(9))
	OR (NOT viccy/rline_cnt(4) AND NOT viccy/rline_cnt(5) AND 
	NOT viccy/rline_cnt(6) AND NOT viccy/rline_cnt(9))
	OR (NOT viccy/rline_cnt(7) AND NOT viccy/rline_cnt(9))
	OR (NOT viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (viccy/is_10rows AND NOT viccy/rline_cnt(6) AND 
	NOT viccy/rline_cnt(9))
	OR (viccy/is_9rows AND NOT viccy/rline_cnt(6) AND 
	NOT viccy/rline_cnt(9)));

FDCPE_viccy/vid_addr0: FDCPE port map (viccy/vid_addr(0),viccy/vid_addr_D(0),NOT slotclk,reset,'0');
viccy/vid_addr_D(0) <= ((viccy/vid_addr_hold(0) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND NOT viccy/is_80 AND NOT viccy/in_slot AND 
	NOT viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(0) AND viccy/is_80 AND 
	NOT viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(0) AND viccy/in_slot AND 
	NOT viccy/last_slot_of_line));

FDCPE_viccy/vid_addr1: FDCPE port map (viccy/vid_addr(1),viccy/vid_addr_D(1),NOT slotclk,reset,'0');
viccy/vid_addr_D(1) <= ((viccy/vid_addr(0) AND NOT viccy/vid_addr(1) AND 
	viccy/in_slot AND NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(1) AND NOT viccy/is_80 AND NOT viccy/in_slot AND 
	NOT viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr_hold(1) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND NOT viccy/vid_addr(1) AND 
	viccy/is_80 AND NOT viccy/last_slot_of_line));

FTCPE_viccy/vid_addr2: FTCPE port map (viccy/vid_addr(2),viccy/vid_addr_T(2),NOT slotclk,reset,'0');
viccy/vid_addr_T(2) <= ((viccy/vid_addr(2) AND NOT viccy/vid_addr_hold(2) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(2) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/in_slot AND NOT viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(2) AND viccy/vid_addr_hold(2) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/is_80 AND NOT viccy/last_slot_of_line));

FTCPE_viccy/vid_addr3: FTCPE port map (viccy/vid_addr(3),viccy/vid_addr_T(3),NOT slotclk,reset,'0');
viccy/vid_addr_T(3) <= ((viccy/vid_addr(3) AND NOT viccy/vid_addr_hold(3) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(3) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(3) AND viccy/vid_addr_hold(3) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/is_80 AND NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/in_slot AND NOT viccy/last_slot_of_line));

FTCPE_viccy/vid_addr4: FTCPE port map (viccy/vid_addr(4),viccy/vid_addr_T(4),NOT slotclk,reset,'0');
viccy/vid_addr_T(4) <= ((viccy/vid_addr(4) AND NOT viccy/vid_addr_hold(4) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(4) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(4) AND viccy/vid_addr_hold(4) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/in_slot AND 
	NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/is_80 AND 
	NOT viccy/last_slot_of_line));

FTCPE_viccy/vid_addr5: FTCPE port map (viccy/vid_addr(5),viccy/vid_addr_T(5),NOT slotclk,reset,'0');
viccy/vid_addr_T(5) <= ((viccy/vid_addr(5) AND NOT viccy/vid_addr_hold(5) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(5) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(5) AND viccy/vid_addr_hold(5) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/is_80 AND NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/in_slot AND NOT viccy/last_slot_of_line));

FTCPE_viccy/vid_addr6: FTCPE port map (viccy/vid_addr(6),viccy/vid_addr_T(6),NOT slotclk,reset,'0');
viccy/vid_addr_T(6) <= ((viccy/vid_addr(6) AND NOT viccy/vid_addr_hold(6) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(6) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(6) AND viccy/vid_addr_hold(6) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/is_80 AND NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/in_slot AND NOT viccy/last_slot_of_line));

FTCPE_viccy/vid_addr7: FTCPE port map (viccy/vid_addr(7),viccy/vid_addr_T(7),NOT slotclk,reset,'0');
viccy/vid_addr_T(7) <= ((viccy/vid_addr(7) AND NOT viccy/vid_addr_hold(7) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(7) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(7) AND viccy/vid_addr_hold(7) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/vid_addr(6) AND viccy/is_80 AND 
	NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/vid_addr(6) AND viccy/in_slot AND 
	NOT viccy/last_slot_of_line));

FTCPE_viccy/vid_addr8: FTCPE port map (viccy/vid_addr(8),viccy/vid_addr_T(8),NOT slotclk,reset,'0');
viccy/vid_addr_T(8) <= ((viccy/vid_addr(8) AND NOT viccy/vid_addr_hold(8) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(8) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(8) AND viccy/vid_addr_hold(8) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/vid_addr(6) AND viccy/vid_addr(7) AND 
	viccy/in_slot AND NOT viccy/last_slot_of_line)
	OR (viccy/vid_addr(0) AND viccy/vid_addr(1) AND 
	viccy/vid_addr(2) AND viccy/vid_addr(3) AND viccy/vid_addr(4) AND 
	viccy/vid_addr(5) AND viccy/vid_addr(6) AND viccy/vid_addr(7) AND 
	viccy/is_80 AND NOT viccy/last_slot_of_line));

FDCPE_viccy/vid_addr9: FDCPE port map (viccy/vid_addr(9),viccy/vid_addr_D(9),NOT slotclk,reset,'0');
viccy/vid_addr_D(9) <= ((viccy/vid_addr(9) AND NOT viccy/last_slot_of_line AND 
	NOT viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2)
	OR (viccy/vid_addr_hold(9) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(9) AND NOT viccy/is_80 AND NOT viccy/in_slot AND 
	NOT viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(9) AND viccy/is_80 AND 
	NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2)
	OR (NOT viccy/vid_addr(9) AND viccy/in_slot AND 
	NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2));

FTCPE_viccy/vid_addr10: FTCPE port map (viccy/vid_addr(10),viccy/vid_addr_T(10),NOT slotclk,reset,'0');
viccy/vid_addr_T(10) <= ((viccy/vid_addr(10) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(10) AND NOT viccy/vid_addr_hold(10) AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(10) AND viccy/vid_addr_hold(10) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(9) AND viccy/is_80 AND 
	NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2)
	OR (viccy/vid_addr(9) AND viccy/in_slot AND 
	NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2));

FTCPE_viccy/vid_addr11: FTCPE port map (viccy/vid_addr(11),viccy/vid_addr_T(11),NOT slotclk,reset,'0');
viccy/vid_addr_T(11) <= ((viccy/vid_addr(11) AND NOT viccy/vid_addr_hold(11) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(11) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(11) AND viccy/vid_addr_hold(11) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(10) AND viccy/vid_addr(9) AND 
	viccy/is_80 AND NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2)
	OR (viccy/vid_addr(10) AND viccy/vid_addr(9) AND 
	viccy/in_slot AND NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2));

FTCPE_viccy/vid_addr12: FTCPE port map (viccy/vid_addr(12),viccy/vid_addr_T(12),NOT slotclk,reset,'0');
viccy/vid_addr_T(12) <= ((viccy/vid_addr(12) AND NOT viccy/vid_addr_hold(12) AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(12) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(12) AND viccy/vid_addr_hold(12) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(10) AND viccy/vid_addr(11) AND 
	viccy/vid_addr(9) AND viccy/is_80 AND NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2)
	OR (viccy/vid_addr(10) AND viccy/vid_addr(11) AND 
	viccy/vid_addr(9) AND viccy/in_slot AND NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2));

FTCPE_viccy/vid_addr13: FTCPE port map (viccy/vid_addr(13),viccy/vid_addr_T(13),NOT slotclk,reset,'0');
viccy/vid_addr_T(13) <= ((viccy/vid_addr(13) AND viccy/last_line_of_screen AND 
	viccy/last_slot_of_line)
	OR (viccy/vid_addr(13) AND NOT viccy/vid_addr_hold(13) AND 
	viccy/last_slot_of_line)
	OR (NOT viccy/vid_addr(13) AND viccy/vid_addr_hold(13) AND 
	NOT viccy/last_line_of_screen AND viccy/last_slot_of_line)
	OR (viccy/vid_addr(10) AND viccy/vid_addr(11) AND 
	viccy/vid_addr(12) AND viccy/vid_addr(9) AND viccy/is_80 AND 
	NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2)
	OR (viccy/vid_addr(10) AND viccy/vid_addr(11) AND 
	viccy/vid_addr(12) AND viccy/vid_addr(9) AND viccy/in_slot AND 
	NOT viccy/last_slot_of_line AND 
	viccy/Madd_vid_addr_addsub0000__and0007/viccy/Madd_vid_addr_addsub0000__and0007_D2));

FDCPE_viccy/vid_addr_hold0: FDCPE port map (viccy/vid_addr_hold(0),viccy/vid_addr_hold_D(0),slotclk,reset,'0');
viccy/vid_addr_hold_D(0) <= ((viccy/vid_addr(0) AND NOT viccy/last_line_of_screen AND 
	viccy/last_line_of_char AND viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(0) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(0) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char));

FDCPE_viccy/vid_addr_hold1: FDCPE port map (viccy/vid_addr_hold(1),viccy/vid_addr_hold_D(1),slotclk,reset,'0');
viccy/vid_addr_hold_D(1) <= ((viccy/vid_addr_hold(1) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(1) AND NOT viccy/last_line_of_screen AND 
	viccy/last_line_of_char AND viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(1) AND 
	NOT viccy/last_vis_slot_of_line));

FDCPE_viccy/vid_addr_hold2: FDCPE port map (viccy/vid_addr_hold(2),viccy/vid_addr_hold_D(2),slotclk,reset,'0');
viccy/vid_addr_hold_D(2) <= ((viccy/vid_addr_hold(2) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(2) AND NOT viccy/last_line_of_screen AND 
	viccy/last_line_of_char AND viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(2) AND 
	NOT viccy/last_vis_slot_of_line));

FDCPE_viccy/vid_addr_hold3: FDCPE port map (viccy/vid_addr_hold(3),viccy/vid_addr_hold_D(3),slotclk,reset,'0');
viccy/vid_addr_hold_D(3) <= ((viccy/vid_addr_hold(3) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(3) AND NOT viccy/last_line_of_screen AND 
	viccy/last_line_of_char AND viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(3) AND 
	NOT viccy/last_vis_slot_of_line));

FDCPE_viccy/vid_addr_hold4: FDCPE port map (viccy/vid_addr_hold(4),viccy/vid_addr_hold_D(4),slotclk,reset,'0');
viccy/vid_addr_hold_D(4) <= ((viccy/vid_addr_hold(4) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(4) AND NOT viccy/last_line_of_screen AND 
	viccy/last_line_of_char AND viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(4) AND 
	NOT viccy/last_vis_slot_of_line));

FDCPE_viccy/vid_addr_hold5: FDCPE port map (viccy/vid_addr_hold(5),viccy/vid_addr_hold_D(5),slotclk,reset,'0');
viccy/vid_addr_hold_D(5) <= ((viccy/vid_addr_hold(5) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(5) AND NOT viccy/last_line_of_screen AND 
	viccy/last_line_of_char AND viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(5) AND 
	NOT viccy/last_vis_slot_of_line));

FDCPE_viccy/vid_addr_hold6: FDCPE port map (viccy/vid_addr_hold(6),viccy/vid_addr_hold_D(6),slotclk,reset,'0');
viccy/vid_addr_hold_D(6) <= ((viccy/vid_addr_hold(6) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(6) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(6) AND NOT viccy/last_line_of_screen AND 
	viccy/last_line_of_char AND viccy/last_vis_slot_of_line));

FDCPE_viccy/vid_addr_hold7: FDCPE port map (viccy/vid_addr_hold(7),viccy/vid_addr_hold_D(7),slotclk,reset,'0');
viccy/vid_addr_hold_D(7) <= ((viccy/vid_addr_hold(7) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(7) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(7) AND NOT viccy/last_line_of_screen AND 
	viccy/last_line_of_char AND viccy/last_vis_slot_of_line));

FDCPE_viccy/vid_addr_hold8: FDCPE port map (viccy/vid_addr_hold(8),viccy/vid_addr_hold_D(8),slotclk,reset,'0');
viccy/vid_addr_hold_D(8) <= ((viccy/vid_addr_hold(8) AND 
	NOT viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(8) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(8) AND NOT viccy/last_line_of_screen AND 
	viccy/last_line_of_char AND viccy/last_vis_slot_of_line));

FDCPE_viccy/vid_addr_hold9: FDCPE port map (viccy/vid_addr_hold(9),viccy/vid_addr_hold_D(9),slotclk,reset,'0');
viccy/vid_addr_hold_D(9) <= ((viccy/vid_addr_hold(9) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(9) AND NOT viccy/last_line_of_screen AND 
	viccy/last_line_of_char AND viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(9) AND 
	NOT viccy/last_vis_slot_of_line));

FDCPE_viccy/vid_addr_hold10: FDCPE port map (viccy/vid_addr_hold(10),viccy/vid_addr_hold_D(10),slotclk,reset,'0');
viccy/vid_addr_hold_D(10) <= ((viccy/vid_addr_hold(10) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(10) AND NOT viccy/last_line_of_screen AND 
	viccy/last_line_of_char AND viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(10) AND 
	NOT viccy/last_vis_slot_of_line));

FDCPE_viccy/vid_addr_hold11: FDCPE port map (viccy/vid_addr_hold(11),viccy/vid_addr_hold_D(11),slotclk,reset,'0');
viccy/vid_addr_hold_D(11) <= ((viccy/vid_addr_hold(11) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(11) AND NOT viccy/last_line_of_screen AND 
	viccy/last_line_of_char AND viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(11) AND 
	NOT viccy/last_vis_slot_of_line));

FDCPE_viccy/vid_addr_hold12: FDCPE port map (viccy/vid_addr_hold(12),viccy/vid_addr_hold_D(12),slotclk,reset,'0');
viccy/vid_addr_hold_D(12) <= ((viccy/vid_addr_hold(12) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(12) AND NOT viccy/last_line_of_screen AND 
	viccy/last_line_of_char AND viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(12) AND 
	NOT viccy/last_vis_slot_of_line));

FDCPE_viccy/vid_addr_hold13: FDCPE port map (viccy/vid_addr_hold(13),viccy/vid_addr_hold_D(13),slotclk,reset,'0');
viccy/vid_addr_hold_D(13) <= ((viccy/vid_addr_hold(13) AND 
	NOT viccy/last_line_of_screen AND NOT viccy/last_line_of_char)
	OR (viccy/vid_addr(13) AND NOT viccy/last_line_of_screen AND 
	viccy/last_line_of_char AND viccy/last_vis_slot_of_line)
	OR (viccy/vid_addr_hold(13) AND 
	NOT viccy/last_vis_slot_of_line));

FTCPE_viccy/vpage2: FTCPE port map (viccy/vpage(2),viccy/vpage_T(2),NOT memclk,reset,'0');
viccy/vpage_T(2) <= ((D(2).PIN AND viccy/crtc_reg(2) AND NOT viccy/vpage(2) AND 
	$OpTx$FX_DC$2549756)
	OR (NOT D(2).PIN AND viccy/crtc_reg(2) AND viccy/vpage(2) AND 
	$OpTx$FX_DC$2549756));

FTCPE_viccy/vpage3: FTCPE port map (viccy/vpage(3),viccy/vpage_T(3),NOT memclk,reset,'0');
viccy/vpage_T(3) <= ((D(3).PIN AND viccy/crtc_reg(2) AND NOT viccy/vpage(3) AND 
	$OpTx$FX_DC$2549756)
	OR (NOT D(3).PIN AND viccy/crtc_reg(2) AND viccy/vpage(3) AND 
	$OpTx$FX_DC$2549756));

FTCPE_viccy/vpage4: FTCPE port map (viccy/vpage(4),viccy/vpage_T(4),NOT memclk,reset,'0');
viccy/vpage_T(4) <= ((viccy/crtc_reg(2) AND D(4).PIN AND viccy/vpage(4) AND 
	$OpTx$FX_DC$2549756)
	OR (viccy/crtc_reg(2) AND NOT D(4).PIN AND NOT viccy/vpage(4) AND 
	$OpTx$FX_DC$2549756));

FTCPE_viccy/vpage5: FTCPE port map (viccy/vpage(5),viccy/vpage_T(5),NOT memclk,reset,'0');
viccy/vpage_T(5) <= ((D(5).PIN AND viccy/crtc_reg(2) AND NOT viccy/vpage(5) AND 
	$OpTx$FX_DC$2549756)
	OR (NOT D(5).PIN AND viccy/crtc_reg(2) AND viccy/vpage(5) AND 
	$OpTx$FX_DC$2549756));

FTCPE_viccy/vpage6: FTCPE port map (viccy/vpage(6),viccy/vpage_T(6),NOT memclk,reset,'0');
viccy/vpage_T(6) <= ((D(6).PIN AND viccy/crtc_reg(2) AND NOT viccy/vpage(6) AND 
	$OpTx$FX_DC$2549756)
	OR (NOT D(6).PIN AND viccy/crtc_reg(2) AND viccy/vpage(6) AND 
	$OpTx$FX_DC$2549756));

FTCPE_viccy/vpage7: FTCPE port map (viccy/vpage(7),viccy/vpage_T(7),NOT memclk,reset,'0');
viccy/vpage_T(7) <= ((D(7).PIN AND viccy/crtc_reg(2) AND NOT viccy/vpage(7) AND 
	$OpTx$FX_DC$2549756)
	OR (NOT D(7).PIN AND viccy/crtc_reg(2) AND viccy/vpage(7) AND 
	$OpTx$FX_DC$2549756));

FDCPE_vis_80_in: FDCPE port map (vis_80_in,vis_80_in_D,NOT phi2,reset,'0');
vis_80_in_D <= ((D(1).PIN AND 
	vis_hires_in_or0000/vis_hires_in_or0000_D2)
	OR (vis_80_in AND 
	NOT vis_hires_in_or0000/vis_hires_in_or0000_D2));

FDCPE_vis_double_in: FDCPE port map (vis_double_in,vis_double_in_D,NOT phi2,reset,'0');
vis_double_in_D <= ((D(3).PIN AND 
	vis_hires_in_or0000/vis_hires_in_or0000_D2)
	OR (vis_double_in AND 
	NOT vis_hires_in_or0000/vis_hires_in_or0000_D2));

FDCPE_vis_enable: FDCPE port map (vis_enable,vis_enable_D,NOT phi2,'0',reset);
vis_enable_D <= ((NOT D(7).PIN AND 
	vis_hires_in_or0000/vis_hires_in_or0000_D2)
	OR (vis_enable AND 
	NOT vis_hires_in_or0000/vis_hires_in_or0000_D2));

FDCPE_vis_hires_in: FDCPE port map (vis_hires_in,vis_hires_in_D,NOT phi2,reset,'0');
vis_hires_in_D <= ((D(0).PIN AND 
	vis_hires_in_or0000/vis_hires_in_or0000_D2)
	OR (vis_hires_in AND 
	NOT vis_hires_in_or0000/vis_hires_in_or0000_D2));


vis_hires_in_or0000/vis_hires_in_or0000_D2 <= (NOT rwb AND NOT A(0) AND NOT A(1) AND NOT A(7) AND NOT A(6) AND NOT A(5) AND 
	NOT A(4) AND NOT A(3) AND NOT A(2) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688);

FDCPE_vsync: FDCPE port map (vsync,vsync_D,NOT hsync,'0','0',NOT reset);
vsync_D <= ((viccy/is_9rows AND viccy/rline_cnt(4) AND 
	NOT viccy/rline_cnt(0) AND NOT viccy/rline_cnt(5) AND NOT viccy/rline_cnt(1) AND 
	viccy/rline_cnt(2) AND NOT viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (NOT viccy/is_10rows AND NOT viccy/is_9rows AND 
	NOT viccy/rline_cnt(4) AND NOT viccy/rline_cnt(5) AND viccy/rline_cnt(1) AND 
	NOT viccy/rline_cnt(2) AND NOT viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (viccy/is_10rows AND viccy/rline_cnt(4) AND 
	viccy/rline_cnt(0) AND NOT viccy/rline_cnt(5) AND viccy/rline_cnt(1) AND 
	NOT viccy/rline_cnt(2) AND NOT viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (viccy/is_10rows AND viccy/rline_cnt(4) AND 
	NOT viccy/rline_cnt(0) AND NOT viccy/rline_cnt(5) AND NOT viccy/rline_cnt(1) AND 
	viccy/rline_cnt(2) AND NOT viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9))
	OR (viccy/is_9rows AND viccy/rline_cnt(4) AND 
	viccy/rline_cnt(0) AND NOT viccy/rline_cnt(5) AND viccy/rline_cnt(1) AND 
	NOT viccy/rline_cnt(2) AND NOT viccy/rline_cnt(3) AND viccy/rline_cnt(6) AND 
	viccy/rline_cnt(7) AND viccy/rline_cnt(8) AND NOT viccy/rline_cnt(9)));

FDCPE_wait_int_d: FDCPE port map (wait_int_d,wait_int_d_D,memclk,'0',reset);
wait_int_d_D <= (is_cpu AND NOT ipl);

FDCPE_wp_rom9: FDCPE port map (wp_rom9,wp_rom9_D,NOT phi2,reset,'0');
wp_rom9_D <= ((D(4).PIN AND wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (wp_rom9 AND NOT wp_romPET_or0000/wp_romPET_or0000_D2));

FDCPE_wp_romA: FDCPE port map (wp_romA,wp_romA_D,NOT phi2,reset,'0');
wp_romA_D <= ((D(5).PIN AND wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (wp_romA AND NOT wp_romPET_or0000/wp_romPET_or0000_D2));

FTCPE_wp_romB: FTCPE port map (wp_romB,wp_romB_T,NOT phi2,'0','0');
wp_romB_T <= ((D(6).PIN AND NOT wp_romB AND NOT reset AND 
	wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (NOT D(6).PIN AND wp_romB AND NOT reset AND 
	wp_romPET_or0000/wp_romPET_or0000_D2));

FDCPE_wp_romPET: FDCPE port map (wp_romPET,wp_romPET_D,NOT phi2,reset,'0');
wp_romPET_D <= ((D(7).PIN AND wp_romPET_or0000/wp_romPET_or0000_D2)
	OR (wp_romPET AND NOT wp_romPET_or0000/wp_romPET_or0000_D2));


wp_romPET_or0000/wp_romPET_or0000_D2 <= (NOT rwb AND A(0) AND NOT A(1) AND NOT A(7) AND NOT A(6) AND NOT A(5) AND 
	NOT A(4) AND NOT A(3) AND NOT A(2) AND 
	mappy/SFDecomp_831/mappy/SFDecomp_831_D2 AND NOT $OpTx$FX_DC$2549698 AND $OpTx$INV$2549688);

Register Legend:
 FDCPE (Q,D,C,CLR,PRE,CE); 
 FTCPE (Q,D,C,CLR,PRE,CE); 
 LDCP  (Q,D,G,CLR,PRE); 

******************************  Device Pin Out *****************************

Device : XC95288XL-6-TQ144


Pin Signal                         Pin Signal                        
No. Name                           No. Name                          
  1 VCC                              73 VCC                           
  2 KPR                              74 vpa                           
  3 KPR                              75 vda                           
  4 VA<17>                           76 KPR                           
  5 phi2                             77 D<7>                          
  6 phi2_io                          78 D<6>                          
  7 VA<14>                           79 D<5>                          
  8 VCC                              80 D<4>                          
  9 VA<16>                           81 D<3>                          
 10 VA<15>                           82 D<2>                          
 11 VA<18>                           83 D<1>                          
 12 KPR                              84 VCC                           
 13 nframsel                         85 D<0>                          
 14 KPR                              86 A<15>                         
 15 KPR                              87 A<13>                         
 16 KPR                              88 A<14>                         
 17 KPR                              89 GND                           
 18 GND                              90 GND                           
 19 KPR                              91 A<12>                         
 20 rwb                              92 A<11>                         
 21 KPR                              93 A<10>                         
 22 KPR                              94 A<9>                          
 23 KPR                              95 A<8>                          
 24 KPR                              96 A<7>                          
 25 KPR                              97 A<6>                          
 26 KPR                              98 A<5>                          
 27 KPR                              99 GND                           
 28 KPR                             100 A<4>                          
 29 GND                             101 A<3>                          
 30 q50m                            102 A<2>                          
 31 KPR                             103 A<1>                          
 32 KPR                             104 A<0>                          
 33 KPR                             105 FA<16>                        
 34 spi_nsel2                       106 FA<17>                        
 35 KPR                             107 FA<18>                        
 36 GND                             108 GND                           
 37 VCC                             109 VCC                           
 38 KPR                             110 VD<3>                         
 39 spi_nsel3                       111 VD<2>                         
 40 KPR                             112 VD<4>                         
 41 dena                            113 VD<1>                         
 42 VCC                             114 GND                           
 43 pet_vsync                       115 VD<5>                         
 44 spi_nsel4                       116 VD<0>                         
 45 dclk                            117 spi_in4                       
 46 pxl                             118 spi_in3                       
 47 GND                             119 VA<0>                         
 48 hsync                           120 VA<1>                         
 49 vsync                           121 VA<2>                         
 50 spi_clk                         122 TDO                           
 51 KPR                             123 GND                           
 52 nflash                          124 VA<10>                        
 53 KPR                             125 VA<3>                         
 54 spi_out                         126 VA<4>                         
 55 VCC                             127 VCC                           
 56 KPR                             128 spi_in2                       
 57 KPR                             129 spi_in1                       
 58 VD<6>                           130 nvramsel                      
 59 VD<7>                           131 VA<5>                         
 60 KPR                             132 VA<9>                         
 61 KPR                             133 VA<6>                         
 62 GND                             134 VA<11>                        
 63 TDI                             135 VA<8>                         
 64 KPR                             136 VA<7>                         
 65 TMS                             137 VA<13>                        
 66 nsel4                           138 VA<12>                        
 67 TCK                             139 ramrwb                        
 68 nsel2                           140 KPR                           
 69 nsel1                           141 VCC                           
 70 graphic                         142 e                             
 71 FA<15>                          143 nres                          
 72 GND                             144 GND                           


Legend :  NC  = Not Connected, unbonded pin
         PGND = Unused I/O configured as additional Ground pin
         TIE  = Unused I/O floating -- must tie to VCC, GND or other signal
         KPR  = Unused I/O with weak keeper (leave unconnected)
         VCC  = Dedicated Power Pin
         GND  = Dedicated Ground Pin
         TDI  = Test Data In, JTAG pin
         TDO  = Test Data Out, JTAG pin
         TCK  = Test Clock, JTAG pin
         TMS  = Test Mode Select, JTAG pin
  PROHIBITED  = User reserved pin
****************************  Compiler Options  ****************************

Following is a list of all global compiler options used by the fitter run.

Device(s) Specified                         : xc95288xl-6-TQ144
Optimization Method                         : DENSITY
Multi-Level Logic Optimization              : ON
Ignore Timing Specifications                : OFF
Default Register Power Up Value             : LOW
Keep User Location Constraints              : ON
What-You-See-Is-What-You-Get                : OFF
Exhaustive Fitting                          : ON
Keep Unused Inputs                          : OFF
Slew Rate                                   : FAST
Power Mode                                  : STD
Ground on Unused IOs                        : OFF
Set I/O Pin Termination                     : KEEPER
Global Clock Optimization                   : ON
Global Set/Reset Optimization               : ON
Global Ouput Enable Optimization            : ON
Input Limit                                 : 17
Pterm Limit                                 : 12
